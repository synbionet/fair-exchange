{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "commit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "_offer",
          "type": "tuple"
        }
      ],
      "name": "createOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getEscrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "redeemBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "disputeBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finalizedDate",
              "type": "uint256"
            },
            {
              "internalType": "enum BionetTypes.ExchangeState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct BionetTypes.Exchange",
          "name": "exchange",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "getSellerDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchange",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "voidOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6116d38061007e6000396000f3fe6080604052600436106100fe5760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f71461029f578063c4d66de8146102b2578063db006a75146102ef578063f2fde38b1461030f578063f4f98ad51461032f57600080fd5b80636374b11b14610222578063715018a61461024257806388106323146102575780638da5cb5b1461027757600080fd5b80633ccfd60b116100d15780633ccfd60b1461019f57806340e58ee5146101b45780634579268a146101d45780634915907b1461020257600080fd5b806305261aea146101035780630b9d58471461012557806314e7c9221461015c57806320c5429b1461017f575b600080fd5b34801561010f57600080fd5b5061012361011e36600461102f565b610342565b005b34801561013157600080fd5b5061014561014036600461102f565b6103d0565b60405161015392919061105e565b60405180910390f35b34801561016857600080fd5b50610171610452565b604051908152602001610153565b34801561018b57600080fd5b5061012361019a36600461102f565b6104c5565b3480156101ab57600080fd5b50610123610519565b3480156101c057600080fd5b506101236101cf36600461102f565b610595565b3480156101e057600080fd5b506101f46101ef36600461102f565b6105e9565b60405161015392919061119a565b34801561020e57600080fd5b5061012361021d36600461102f565b610699565b34801561022e57600080fd5b5061017161023d3660046111e2565b6106ed565b34801561024e57600080fd5b50610123610780565b34801561026357600080fd5b5061017161027236600461102f565b610794565b34801561028357600080fd5b506000546040516001600160a01b039091168152602001610153565b6101716102ad36600461132a565b61079f565b3480156102be57600080fd5b506101236102cd3660046111e2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3480156102fb57600080fd5b5061012361030a36600461102f565b610cc7565b34801561031b57600080fd5b5061012361032a3660046111e2565b610d1b565b61017161033d36600461102f565b610d94565b336103685760405162461bcd60e51b815260040161035f906113f3565b60405180910390fd5b6001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b5050505050565b60006103da610fd9565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610448919061143e565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c091906114e1565b905090565b336104e25760405162461bcd60e51b815260040161035f906113f3565b60015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d99060440161039b565b336105365760405162461bcd60e51b815260040161035f906113f3565b6001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b50505050565b336105b25760405162461bcd60e51b815260040161035f906113f3565b6001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef99060440161039b565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610448919081019061153f565b336106b65760405162461bcd60e51b815260040161035f906113f3565b6001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c5805709060440161039b565b60003361070c5760405162461bcd60e51b815260040161035f906113f3565b600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a91906114e1565b92915050565b610788610e2a565b6107926000610e84565b565b600061077a82610ed4565b6000336107be5760405162461bcd60e51b815260040161035f906113f3565b60006107cd8360400151610ed4565b90508034101561082b5760405162461bcd60e51b815260206004820152602360248201527f526f757465723a20496e73756666696369656e742073656c6c6572206465706f6044820152621cda5d60ea1b606482015260840161035f565b60208301516001600160a01b031633146108975760405162461bcd60e51b815260206004820152602760248201527f526f757465723a206f666665722e73656c6c6572206d757374206265207468656044820152661031b0b63632b960c91b606482015260840161035f565b60008360600151116108e35760405162461bcd60e51b81526020600482015260156024820152740526f757465723a206f6666657220717479203e203605c1b604482015260640161035f565b60808301516001600160a01b03166109635760405162461bcd60e51b815260206004820152603760248201527f526f757465723a20417373657420746f6b656e206d757374206861766520612060448201527f76616c6964206164647265737320286e6f742030783029000000000000000000606482015260840161035f565b60e0830151156109c05760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20746865206f666665722063616e6e6f7420626520766f6964604482015261195960f21b606482015260840161035f565b60006109d78460800151636cdb3d1360e11b610ee1565b905080610a3b5760405162461bcd60e51b815260206004820152602c60248201527f526f757465723a20546865206173736574206973206e6f7420616e204552433160448201526b0c4d4d4818dbdb9d1c9858dd60a21b606482015260840161035f565b608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab591906114e1565b90508460600151811015610b415760405162461bcd60e51b815260206004820152604760248201527f526f757465723a205468652073656c6c657220646f6573206e6f74206f776e2060448201527f656e6f756768204552433131353520746f6b656e7320666f7220746865206f666064820152666665722071747960c81b608482015260a40161035f565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc5919061161e565b905080610c485760405162461bcd60e51b815260206004820152604560248201527f526f757465723a205468652065786368616e6765206d7573742062652061707060448201527f726f76656420746f207472616e7366657220796f7572204552433131353520746064820152646f6b656e7360d81b608482015260a40161035f565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610c7a908a9060040161163b565b60206040518083038185885af1158015610c98573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cbd91906114e1565b9695505050505050565b33610ce45760405162461bcd60e51b815260040161035f906113f3565b6001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a69509060440161039b565b610d23610e2a565b6001600160a01b038116610d885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035f565b610d9181610e84565b50565b600033610db35760405162461bcd60e51b815260040161035f906113f3565b6001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610e05573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061077a91906114e1565b6000546001600160a01b031633146107925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061077a8260c8610f04565b6000610eec83610f1d565b8015610efd5750610efd8383610f50565b9392505050565b6000612710610f13838561164e565b610efd919061167b565b6000610f30826301ffc9a760e01b610f50565b801561077a5750610f49826001600160e01b0319610f50565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610fc2575060208210155b8015610fce5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000600581111561102a5761102a611048565b905290565b60006020828403121561104157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c0830151600681106110d057634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b60005b838110156110f95781810151838201526020016110e1565b50506000910152565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c086015280518083870152610120925061117281848801602085016110de565b60e0850151915061118760e087018315159052565b601f01601f191694909401019392505050565b82151581526040602082015260006111b56040830184611102565b949350505050565b6001600160a01b0381168114610d9157600080fd5b80356111dd816111bd565b919050565b6000602082840312156111f457600080fd5b8135610efd816111bd565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611239576112396111ff565b60405290565b60405160e0810167ffffffffffffffff81118282101715611239576112396111ff565b604051601f8201601f1916810167ffffffffffffffff8111828210171561128b5761128b6111ff565b604052919050565b600067ffffffffffffffff8211156112ad576112ad6111ff565b50601f01601f191660200190565b600082601f8301126112cc57600080fd5b81356112df6112da82611293565b611262565b8181528460208386010111156112f457600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610d9157600080fd5b80356111dd81611311565b60006020828403121561133c57600080fd5b813567ffffffffffffffff8082111561135457600080fd5b90830190610100828603121561136957600080fd5b611371611215565b82358152611381602084016111d2565b602082015260408301356040820152606083013560608201526113a6608084016111d2565b608082015260a083013560a082015260c0830135828111156113c757600080fd5b6113d3878286016112bb565b60c0830152506113e560e0840161131f565b60e082015295945050505050565b6020808252818101527f526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564604082015260600190565b80516111dd81611311565b80516111dd816111bd565b60008082840361010081121561145357600080fd5b835161145e81611311565b925060e0601f198201121561147257600080fd5b5061147b61123f565b6020840151815260408401516020820152606084015161149a816111bd565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e0840151600681106114d157600080fd5b60c0820152919491935090915050565b6000602082840312156114f357600080fd5b5051919050565b600082601f83011261150b57600080fd5b81516115196112da82611293565b81815284602083860101111561152e57600080fd5b6111b58260208301602087016110de565b6000806040838503121561155257600080fd5b825161155d81611311565b602084015190925067ffffffffffffffff8082111561157b57600080fd5b90840190610100828703121561159057600080fd5b611598611215565b825181526115a860208401611433565b602082015260408301516040820152606083015160608201526115cd60808401611433565b608082015260a083015160a082015260c0830151828111156115ee57600080fd5b6115fa888286016114fa565b60c08301525061160c60e08401611428565b60e08201528093505050509250929050565b60006020828403121561163057600080fd5b8151610efd81611311565b602081526000610efd6020830184611102565b600081600019048311821515161561167657634e487b7160e01b600052601160045260246000fd5b500290565b60008261169857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203a45f355a33ebd1f83d4b4edef76f6ea8046e26262bdc94f92490c4cb3e8f68664736f6c63430008100033",
    "sourceMap": "756:6920:38:-:0;;;;;;;;;;;;-1:-1:-1;936:32:17;719:10:29;936:18:17;:32::i;:::-;756:6920:38;;2433:187:17;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;756:6920:38:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f71461029f578063c4d66de8146102b2578063db006a75146102ef578063f2fde38b1461030f578063f4f98ad51461032f57600080fd5b80636374b11b14610222578063715018a61461024257806388106323146102575780638da5cb5b1461027757600080fd5b80633ccfd60b116100d15780633ccfd60b1461019f57806340e58ee5146101b45780634579268a146101d45780634915907b1461020257600080fd5b806305261aea146101035780630b9d58471461012557806314e7c9221461015c57806320c5429b1461017f575b600080fd5b34801561010f57600080fd5b5061012361011e36600461102f565b610342565b005b34801561013157600080fd5b5061014561014036600461102f565b6103d0565b60405161015392919061105e565b60405180910390f35b34801561016857600080fd5b50610171610452565b604051908152602001610153565b34801561018b57600080fd5b5061012361019a36600461102f565b6104c5565b3480156101ab57600080fd5b50610123610519565b3480156101c057600080fd5b506101236101cf36600461102f565b610595565b3480156101e057600080fd5b506101f46101ef36600461102f565b6105e9565b60405161015392919061119a565b34801561020e57600080fd5b5061012361021d36600461102f565b610699565b34801561022e57600080fd5b5061017161023d3660046111e2565b6106ed565b34801561024e57600080fd5b50610123610780565b34801561026357600080fd5b5061017161027236600461102f565b610794565b34801561028357600080fd5b506000546040516001600160a01b039091168152602001610153565b6101716102ad36600461132a565b61079f565b3480156102be57600080fd5b506101236102cd3660046111e2565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3480156102fb57600080fd5b5061012361030a36600461102f565b610cc7565b34801561031b57600080fd5b5061012361032a3660046111e2565b610d1b565b61017161033d36600461102f565b610d94565b336103685760405162461bcd60e51b815260040161035f906113f3565b60405180910390fd5b6001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103b557600080fd5b505af11580156103c9573d6000803e3d6000fd5b5050505050565b60006103da610fd9565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa158015610424573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610448919061143e565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c091906114e1565b905090565b336104e25760405162461bcd60e51b815260040161035f906113f3565b60015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d99060440161039b565b336105365760405162461bcd60e51b815260040161035f906113f3565b6001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b50505050565b336105b25760405162461bcd60e51b815260040161035f906113f3565b6001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef99060440161039b565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610448919081019061153f565b336106b65760405162461bcd60e51b815260040161035f906113f3565b6001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c5805709060440161039b565b60003361070c5760405162461bcd60e51b815260040161035f906113f3565b600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a91906114e1565b92915050565b610788610e2a565b6107926000610e84565b565b600061077a82610ed4565b6000336107be5760405162461bcd60e51b815260040161035f906113f3565b60006107cd8360400151610ed4565b90508034101561082b5760405162461bcd60e51b815260206004820152602360248201527f526f757465723a20496e73756666696369656e742073656c6c6572206465706f6044820152621cda5d60ea1b606482015260840161035f565b60208301516001600160a01b031633146108975760405162461bcd60e51b815260206004820152602760248201527f526f757465723a206f666665722e73656c6c6572206d757374206265207468656044820152661031b0b63632b960c91b606482015260840161035f565b60008360600151116108e35760405162461bcd60e51b81526020600482015260156024820152740526f757465723a206f6666657220717479203e203605c1b604482015260640161035f565b60808301516001600160a01b03166109635760405162461bcd60e51b815260206004820152603760248201527f526f757465723a20417373657420746f6b656e206d757374206861766520612060448201527f76616c6964206164647265737320286e6f742030783029000000000000000000606482015260840161035f565b60e0830151156109c05760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20746865206f666665722063616e6e6f7420626520766f6964604482015261195960f21b606482015260840161035f565b60006109d78460800151636cdb3d1360e11b610ee1565b905080610a3b5760405162461bcd60e51b815260206004820152602c60248201527f526f757465723a20546865206173736574206973206e6f7420616e204552433160448201526b0c4d4d4818dbdb9d1c9858dd60a21b606482015260840161035f565b608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610a91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab591906114e1565b90508460600151811015610b415760405162461bcd60e51b815260206004820152604760248201527f526f757465723a205468652073656c6c657220646f6573206e6f74206f776e2060448201527f656e6f756768204552433131353520746f6b656e7320666f7220746865206f666064820152666665722071747960c81b608482015260a40161035f565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610ba1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc5919061161e565b905080610c485760405162461bcd60e51b815260206004820152604560248201527f526f757465723a205468652065786368616e6765206d7573742062652061707060448201527f726f76656420746f207472616e7366657220796f7572204552433131353520746064820152646f6b656e7360d81b608482015260a40161035f565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610c7a908a9060040161163b565b60206040518083038185885af1158015610c98573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610cbd91906114e1565b9695505050505050565b33610ce45760405162461bcd60e51b815260040161035f906113f3565b6001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a69509060440161039b565b610d23610e2a565b6001600160a01b038116610d885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035f565b610d9181610e84565b50565b600033610db35760405162461bcd60e51b815260040161035f906113f3565b6001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610e05573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061077a91906114e1565b6000546001600160a01b031633146107925760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600061077a8260c8610f04565b6000610eec83610f1d565b8015610efd5750610efd8383610f50565b9392505050565b6000612710610f13838561164e565b610efd919061167b565b6000610f30826301ffc9a760e01b610f50565b801561077a5750610f49826001600160e01b0319610f50565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610fc2575060208210155b8015610fce5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000600581111561102a5761102a611048565b905290565b60006020828403121561104157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c0830151600681106110d057634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b60005b838110156110f95781810151838201526020016110e1565b50506000910152565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c086015280518083870152610120925061117281848801602085016110de565b60e0850151915061118760e087018315159052565b601f01601f191694909401019392505050565b82151581526040602082015260006111b56040830184611102565b949350505050565b6001600160a01b0381168114610d9157600080fd5b80356111dd816111bd565b919050565b6000602082840312156111f457600080fd5b8135610efd816111bd565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611239576112396111ff565b60405290565b60405160e0810167ffffffffffffffff81118282101715611239576112396111ff565b604051601f8201601f1916810167ffffffffffffffff8111828210171561128b5761128b6111ff565b604052919050565b600067ffffffffffffffff8211156112ad576112ad6111ff565b50601f01601f191660200190565b600082601f8301126112cc57600080fd5b81356112df6112da82611293565b611262565b8181528460208386010111156112f457600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610d9157600080fd5b80356111dd81611311565b60006020828403121561133c57600080fd5b813567ffffffffffffffff8082111561135457600080fd5b90830190610100828603121561136957600080fd5b611371611215565b82358152611381602084016111d2565b602082015260408301356040820152606083013560608201526113a6608084016111d2565b608082015260a083013560a082015260c0830135828111156113c757600080fd5b6113d3878286016112bb565b60c0830152506113e560e0840161131f565b60e082015295945050505050565b6020808252818101527f526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564604082015260600190565b80516111dd81611311565b80516111dd816111bd565b60008082840361010081121561145357600080fd5b835161145e81611311565b925060e0601f198201121561147257600080fd5b5061147b61123f565b6020840151815260408401516020820152606084015161149a816111bd565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e0840151600681106114d157600080fd5b60c0820152919491935090915050565b6000602082840312156114f357600080fd5b5051919050565b600082601f83011261150b57600080fd5b81516115196112da82611293565b81815284602083860101111561152e57600080fd5b6111b58260208301602087016110de565b6000806040838503121561155257600080fd5b825161155d81611311565b602084015190925067ffffffffffffffff8082111561157b57600080fd5b90840190610100828703121561159057600080fd5b611598611215565b825181526115a860208401611433565b602082015260408301516040820152606083015160608201526115cd60808401611433565b608082015260a083015160a082015260c0830151828111156115ee57600080fd5b6115fa888286016114fa565b60c08301525061160c60e08401611428565b60e08201528093505050509250929050565b60006020828403121561163057600080fd5b8151610efd81611311565b602081526000610efd6020830184611102565b600081600019048311821515161561167657634e487b7160e01b600052601160045260246000fd5b500290565b60008261169857634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203a45f355a33ebd1f83d4b4edef76f6ea8046e26262bdc94f92490c4cb3e8f68664736f6c63430008100033",
    "sourceMap": "756:6920:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7529:145;;;;;;;;;;-1:-1:-1;7529:145:38;;;;;:::i;:::-;;:::i;:::-;;2007:261;;;;;;;;;;-1:-1:-1;2007:261:38;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3079:142;;;;;;;;;;;;;:::i;:::-;;;1485:25:57;;;1473:2;1458:18;3079:142:38;1339:177:57;6834:141:38;;;;;;;;;;-1:-1:-1;6834:141:38;;;;;:::i;:::-;;:::i;1365:113::-;;;;;;;;;;;;;:::i;6507:141::-;;;;;;;;;;-1:-1:-1;6507:141:38;;;;;:::i;:::-;;:::i;2436:218::-;;;;;;;;;;-1:-1:-1;2436:218:38;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5666:141::-;;;;;;;;;;-1:-1:-1;5666:141:38;;;;;:::i;:::-;;:::i;1612:212::-;;;;;;;;;;-1:-1:-1;1612:212:38;;;;;:::i;:::-;;:::i;1831:101:17:-;;;;;;;;;;;;;:::i;2807:168:38:-;;;;;;;;;;-1:-1:-1;2807:168:38;;;;;:::i;:::-;;:::i;1201:85:17:-;;;;;;;;;;-1:-1:-1;1247:7:17;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:17;;;3751:51:57;;3739:2;3724:18;1201:85:17;3605:203:57;3460:2000:38;;;;;;:::i;:::-;;:::i;1139:92::-;;;;;;;;;;-1:-1:-1;1139:92:38;;;;;:::i;:::-;1197:15;:27;;-1:-1:-1;;;;;;1197:27:38;-1:-1:-1;;;;;1197:27:38;;;;;;;;;;1139:92;7161:141;;;;;;;;;;-1:-1:-1;7161:141:38;;;;;:::i;:::-;;:::i;2081:198:17:-;;;;;;;;;;-1:-1:-1;2081:198:17;;;;;:::i;:::-;;:::i;6049:273:38:-;;;;;;:::i;:::-;;:::i;7529:145::-;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;;;;;;;;;7617:15:::1;::::0;7601:66:::1;::::0;-1:-1:-1;;;7601:66:38;;7643:10:::1;7601:66;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;7617:15:38;;::::1;::::0;7601:41:::1;::::0;7212:18:57;;7601:66:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7529:145:::0;:::o;2007:261::-;2096:11;2109:36;;:::i;:::-;2198:15;;2182:79;;-1:-1:-1;;;2182:79:38;;;;;1485:25:57;;;-1:-1:-1;;;;;2198:15:38;;;;2182:44;;1458:18:57;;2182:79:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2161:100;;;;-1:-1:-1;2007:261:38;-1:-1:-1;;2007:261:38:o;3079:142::-;3177:15;;3161:53;;;-1:-1:-1;;;3161:53:38;;;;3132:11;;-1:-1:-1;;;;;3177:15:38;;3161:51;;:53;;;;;;;;;;;;;;3177:15;3161:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3155:59;;3079:142;:::o;6834:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;6920:15:::1;::::0;6904:64:::1;::::0;-1:-1:-1;;;6904:64:38;;6944:10:::1;6904:64;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;6920:15:38;;::::1;::::0;6904:39:::1;::::0;7212:18:57;;6904:64:38::1;7065:274:57::0;1365:113:38;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;1434:15:::1;::::0;1418:53:::1;::::0;-1:-1:-1;;;1418:53:38;;1460:10:::1;1418:53;::::0;::::1;3751:51:57::0;-1:-1:-1;;;;;1434:15:38;;::::1;::::0;1418:41:::1;::::0;3724:18:57;;1418:53:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1365:113::o:0;6507:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;6593:15:::1;::::0;6577:64:::1;::::0;-1:-1:-1;;;6577:64:38;;6617:10:::1;6577:64;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;6593:15:38;;::::1;::::0;6577:39:::1;::::0;7212:18:57;;6577:64:38::1;7065:274:57::0;2436:218:38;-1:-1:-1;;;;;;;;2519:11:38;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:15:38;;2596:51;;-1:-1:-1;;;2596:51:38;;;;;1485:25:57;;;-1:-1:-1;;;;;2612:15:38;;;;2596:41;;1458:18:57;;2596:51:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2596:51:38;;;;;;;;;;;;:::i;5666:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;5752:15:::1;::::0;5736:64:::1;::::0;-1:-1:-1;;;5736:64:38;;5779:10:::1;5736:64;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;5752:15:38;;::::1;::::0;5736:42:::1;::::0;7212:18:57;;5736:64:38::1;7065:274:57::0;1612:212:38;1725:11;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;1774:15:::1;::::0;1758:59:::1;::::0;-1:-1:-1;;;1758:59:38;;-1:-1:-1;;;;;3769:32:57;;;1758:59:38::1;::::0;::::1;3751:51:57::0;1774:15:38;;::::1;::::0;1758:49:::1;::::0;3724:18:57;;1758:59:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1752:65:::0;1612:212;-1:-1:-1;;1612:212:38:o;1831:101:17:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2807:168:38:-;2896:11;2929:39;2961:6;2929:31;:39::i;3460:2000::-;3586:15;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;3660:15:::1;3678:45;3710:6;:12;;;3678:31;:45::i;:::-;3660:63;;3754:7;3741:9;:20;;3733:68;;;::::0;-1:-1:-1;;;3733:68:38;;10680:2:57;3733:68:38::1;::::0;::::1;10662:21:57::0;10719:2;10699:18;;;10692:30;10758:34;10738:18;;;10731:62;-1:-1:-1;;;10809:18:57;;;10802:33;10852:19;;3733:68:38::1;10478:399:57::0;3733:68:38::1;3875:13;::::0;::::1;::::0;-1:-1:-1;;;;;3875:27:38::1;3892:10;3875:27;3854:113;;;::::0;-1:-1:-1;;;3854:113:38;;11084:2:57;3854:113:38::1;::::0;::::1;11066:21:57::0;11123:2;11103:18;;;11096:30;11162:34;11142:18;;;11135:62;-1:-1:-1;;;11213:18:57;;;11206:37;11260:19;;3854:113:38::1;10882:403:57::0;3854:113:38::1;4012:1;3985:6;:24;;;:28;3977:62;;;::::0;-1:-1:-1;;;3977:62:38;;11492:2:57;3977:62:38::1;::::0;::::1;11474:21:57::0;11531:2;11511:18;;;11504:30;-1:-1:-1;;;11550:18:57;;;11543:51;11611:18;;3977:62:38::1;11290:345:57::0;3977:62:38::1;4070:17;::::0;::::1;::::0;-1:-1:-1;;;;;4070:33:38::1;4049:135;;;::::0;-1:-1:-1;;;4049:135:38;;11842:2:57;4049:135:38::1;::::0;::::1;11824:21:57::0;11881:2;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;11991:25;11971:18;;;11964:53;12034:19;;4049:135:38::1;11640:419:57::0;4049:135:38::1;4202:13;::::0;::::1;::::0;:22:::1;4194:69;;;::::0;-1:-1:-1;;;4194:69:38;;12266:2:57;4194:69:38::1;::::0;::::1;12248:21:57::0;12305:2;12285:18;;;12278:30;12344:34;12324:18;;;12317:62;-1:-1:-1;;;12395:18:57;;;12388:32;12437:19;;4194:69:38::1;12064:398:57::0;4194:69:38::1;4329:17;4349:112;4394:6;:17;;;-1:-1:-1::0;;;4349:31:38::1;:112::i;:::-;4329:132;;4479:12;4471:69;;;::::0;-1:-1:-1;;;4471:69:38;;12669:2:57;4471:69:38::1;::::0;::::1;12651:21:57::0;12708:2;12688:18;;;12681:30;12747:34;12727:18;;;12720:62;-1:-1:-1;;;12798:18:57;;;12791:42;12850:19;;4471:69:38::1;12467:408:57::0;4471:69:38::1;4667:17;::::0;::::1;::::0;4733:19:::1;::::0;::::1;::::0;4658:104:::1;::::0;-1:-1:-1;;;4658:104:38;;4709:10:::1;4658:104;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;;4633:22:38::1;::::0;-1:-1:-1;;;;;4658:37:38::1;::::0;::::1;::::0;7212:18:57;;4658:104:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4633:129;;4811:6;:24;;;4793:14;:42;;4772:160;;;::::0;-1:-1:-1;;;4772:160:38;;13082:2:57;4772:160:38::1;::::0;::::1;13064:21:57::0;13121:2;13101:18;;;13094:30;13160:34;13140:18;;;13133:62;13231:34;13211:18;;;13204:62;-1:-1:-1;;;13282:19:57;;;13275:38;13330:19;;4772:160:38::1;12880:475:57::0;4772:160:38::1;5045:17;::::0;::::1;::::0;5094:13:::1;::::0;::::1;::::0;5121:15:::1;::::0;5036:110:::1;::::0;-1:-1:-1;;;5036:110:38;;-1:-1:-1;;;;;13590:15:57;;;5036:110:38::1;::::0;::::1;13572:34:57::0;5121:15:38;;::::1;13622:18:57::0;;;13615:43;5009:24:38::1;::::0;5036:44;;;::::1;::::0;::::1;::::0;13507:18:57;;5036:110:38::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5009:137;;5177:19;5156:135;;;::::0;-1:-1:-1;;;5156:135:38;;14121:2:57;5156:135:38::1;::::0;::::1;14103:21:57::0;14160:2;14140:18;;;14133:30;14199:34;14179:18;;;14172:62;14270:34;14250:18;;;14243:62;-1:-1:-1;;;14321:19:57;;;14314:36;14367:19;;5156:135:38::1;13919:473:57::0;5156:135:38::1;5377:15;::::0;5361:92:::1;::::0;-1:-1:-1;;;5361:92:38;;-1:-1:-1;;;;;5377:15:38;;::::1;::::0;5361:44:::1;::::0;5426:9:::1;::::0;5361:92:::1;::::0;5446:6;;5361:92:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5351:102:::0;3460:2000;-1:-1:-1;;;;;;3460:2000:38:o;7161:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;7247:15:::1;::::0;7231:64:::1;::::0;-1:-1:-1;;;7231:64:38;;7271:10:::1;7231:64;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;7247:15:38;;::::1;::::0;7231:39:::1;::::0;7212:18:57;;7231:64:38::1;7065:274:57::0;2081:198:17;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:17;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:17;;14858:2:57;2161:73:17::1;::::0;::::1;14840:21:57::0;14897:2;14877:18;;;14870:30;14936:34;14916:18;;;14909:62;-1:-1:-1;;;14987:18:57;;;14980:36;15033:19;;2161:73:17::1;14656:402:57::0;2161:73:17::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6049:273:38:-;6155:18;950:10;942:71;;;;-1:-1:-1;;;942:71:38;;;;;;;:::i;:::-;6218:15:::1;::::0;6202:113:::1;::::0;-1:-1:-1;;;6202:113:38;;6273:10:::1;6202:113;::::0;::::1;7239:51:57::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;6218:15:38;;::::1;::::0;6202:39:::1;::::0;6249:9:::1;::::0;7212:18:57;;6202:113:38::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:17:-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:17;719:10:29;1422:23:17;1414:68;;;;-1:-1:-1;;;1414:68:17;;15265:2:57;1414:68:17;;;15247:21:57;;;15284:18;;;15277:30;15343:34;15323:18;;;15316:62;15395:18;;1414:68:17;15063:356:57;2433:187:17;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1322:180:45:-;1417:14;1456:39;1469:6;333:3:36;1456:12:45;:39::i;1349:282:32:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:32:o;465:174:45:-;571:7;626:6;602:20;611:11;602:6;:20;:::i;:::-;601:31;;;;:::i;704:427:32:-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:32;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:32;1093:7;-1:-1:-1;;;;;;1060:32:32;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:32:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;16078:33:57;;4433:71:32;;;;16060:52:57;;;;4433:71:32;;;;;;;;;;16033:18:57;;;;4433:71:32;;;;;;;;;-1:-1:-1;;;;;4433:71:32;-1:-1:-1;;;4433:71:32;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:32:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:180:57:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:57;;14:180;-1:-1:-1;14:180:57:o;295:127::-;356:10;351:3;347:20;344:1;337:31;387:4;384:1;377:15;411:4;408:1;401:15;427:907;595:4;637:3;626:9;622:19;614:27;;682:6;675:14;668:22;657:9;650:41;733:6;727:13;722:2;711:9;707:18;700:41;795:2;787:6;783:15;777:22;772:2;761:9;757:18;750:50;881:1;877;872:3;868:11;864:19;858:2;850:6;846:15;840:22;836:48;831:2;820:9;816:18;809:76;940:2;932:6;928:15;922:22;916:3;905:9;901:19;894:51;1000:3;992:6;988:16;982:23;976:3;965:9;961:19;954:52;1061:3;1053:6;1049:16;1043:23;1037:3;1026:9;1022:19;1015:52;1114:3;1106:6;1102:16;1096:23;1155:1;1141:12;1138:19;1128:150;;1200:10;1195:3;1191:20;1188:1;1181:31;1235:4;1232:1;1225:15;1263:4;1260:1;1253:15;1128:150;1315:12;1309:3;1298:9;1294:19;1287:41;;427:907;;;;;:::o;1521:250::-;1606:1;1616:113;1630:6;1627:1;1624:13;1616:113;;;1706:11;;;1700:18;1687:11;;;1680:39;1652:2;1645:10;1616:113;;;-1:-1:-1;;1763:1:57;1745:16;;1738:27;1521:250::o;1776:957::-;1824:3;1852:6;1885:5;1879:12;1874:3;1867:25;1938:4;1931:5;1927:16;1921:23;1980:1;1976;1971:3;1967:11;1963:19;2032:2;2018:12;2014:21;2007:4;2002:3;1998:14;1991:45;2085:4;2078:5;2074:16;2068:23;2061:4;2056:3;2052:14;2045:47;2141:4;2134:5;2130:16;2124:23;2117:4;2112:3;2108:14;2101:47;2209:2;2201:4;2194:5;2190:16;2184:23;2180:32;2173:4;2168:3;2164:14;2157:56;;;2262:4;2255:5;2251:16;2245:23;2238:4;2233:3;2229:14;2222:47;2317:4;2310:5;2306:16;2300:23;2355:2;2348:4;2343:3;2339:14;2332:26;2387:14;2381:21;2432:6;2427:2;2422:3;2418:12;2411:28;2458:3;2448:13;;2470:83;2546:6;2541:2;2536:3;2532:12;2525:4;2509:14;2505:25;2470:83;:::i;:::-;2601:4;2594:5;2590:16;2584:23;2562:45;;2616:47;2657:4;2652:3;2648:14;2632;269:13;262:21;250:34;;199:91;2616:47;2717:2;2696:15;-1:-1:-1;;2692:29:57;2683:39;;;;2679:48;;1776:957;-1:-1:-1;;;1776:957:57:o;2738:335::-;2951:6;2944:14;2937:22;2926:9;2919:41;2996:2;2991;2980:9;2976:18;2969:30;2900:4;3016:51;3063:2;3052:9;3048:18;3040:6;3016:51;:::i;:::-;3008:59;2738:335;-1:-1:-1;;;;2738:335:57:o;3078:131::-;-1:-1:-1;;;;;3153:31:57;;3143:42;;3133:70;;3199:1;3196;3189:12;3214:134;3282:20;;3311:31;3282:20;3311:31;:::i;:::-;3214:134;;;:::o;3353:247::-;3412:6;3465:2;3453:9;3444:7;3440:23;3436:32;3433:52;;;3481:1;3478;3471:12;3433:52;3520:9;3507:23;3539:31;3564:5;3539:31;:::i;3813:127::-;3874:10;3869:3;3865:20;3862:1;3855:31;3905:4;3902:1;3895:15;3929:4;3926:1;3919:15;3945:255;4017:2;4011:9;4059:6;4047:19;;4096:18;4081:34;;4117:22;;;4078:62;4075:88;;;4143:18;;:::i;:::-;4179:2;4172:22;3945:255;:::o;4205:253::-;4277:2;4271:9;4319:4;4307:17;;4354:18;4339:34;;4375:22;;;4336:62;4333:88;;;4401:18;;:::i;4463:275::-;4534:2;4528:9;4599:2;4580:13;;-1:-1:-1;;4576:27:57;4564:40;;4634:18;4619:34;;4655:22;;;4616:62;4613:88;;;4681:18;;:::i;:::-;4717:2;4710:22;4463:275;;-1:-1:-1;4463:275:57:o;4743:187::-;4792:4;4825:18;4817:6;4814:30;4811:56;;;4847:18;;:::i;:::-;-1:-1:-1;4913:2:57;4892:15;-1:-1:-1;;4888:29:57;4919:4;4884:40;;4743:187::o;4935:464::-;4978:5;5031:3;5024:4;5016:6;5012:17;5008:27;4998:55;;5049:1;5046;5039:12;4998:55;5085:6;5072:20;5116:49;5132:32;5161:2;5132:32;:::i;:::-;5116:49;:::i;:::-;5190:2;5181:7;5174:19;5236:3;5229:4;5224:2;5216:6;5212:15;5208:26;5205:35;5202:55;;;5253:1;5250;5243:12;5202:55;5318:2;5311:4;5303:6;5299:17;5292:4;5283:7;5279:18;5266:55;5366:1;5341:16;;;5359:4;5337:27;5330:38;;;;5345:7;4935:464;-1:-1:-1;;;4935:464:57:o;5404:118::-;5490:5;5483:13;5476:21;5469:5;5466:32;5456:60;;5512:1;5509;5502:12;5527:128;5592:20;;5621:28;5592:20;5621:28;:::i;5660:1039::-;5743:6;5796:2;5784:9;5775:7;5771:23;5767:32;5764:52;;;5812:1;5809;5802:12;5764:52;5852:9;5839:23;5881:18;5922:2;5914:6;5911:14;5908:34;;;5938:1;5935;5928:12;5908:34;5961:22;;;;6017:6;5999:16;;;5995:29;5992:49;;;6037:1;6034;6027:12;5992:49;6063:22;;:::i;:::-;6121:2;6108:16;6101:5;6094:31;6157;6184:2;6180;6176:11;6157:31;:::i;:::-;6152:2;6145:5;6141:14;6134:55;6242:2;6238;6234:11;6221:25;6216:2;6209:5;6205:14;6198:49;6300:2;6296;6292:11;6279:25;6274:2;6267:5;6263:14;6256:49;6338:32;6365:3;6361:2;6357:12;6338:32;:::i;:::-;6332:3;6325:5;6321:15;6314:57;6425:3;6421:2;6417:12;6404:26;6398:3;6391:5;6387:15;6380:51;6477:3;6473:2;6469:12;6456:26;6507:2;6497:8;6494:16;6491:36;;;6523:1;6520;6513:12;6491:36;6560:45;6597:7;6586:8;6582:2;6578:17;6560:45;:::i;:::-;6554:3;6547:5;6543:15;6536:70;;6639:29;6663:3;6659:2;6655:12;6639:29;:::i;:::-;6633:3;6622:15;;6615:54;6626:5;5660:1039;-1:-1:-1;;;;;5660:1039:57:o;6704:356::-;6906:2;6888:21;;;6925:18;;;6918:30;6984:34;6979:2;6964:18;;6957:62;7051:2;7036:18;;6704:356::o;7344:132::-;7420:13;;7442:28;7420:13;7442:28;:::i;7481:138::-;7560:13;;7582:31;7560:13;7582:31;:::i;7624:1013::-;7727:6;7735;7779:9;7770:7;7766:23;7809:3;7805:2;7801:12;7798:32;;;7826:1;7823;7816:12;7798:32;7858:9;7852:16;7877:28;7899:5;7877:28;:::i;:::-;7924:5;-1:-1:-1;7963:4:57;-1:-1:-1;;7945:16:57;;7941:27;7938:47;;;7981:1;7978;7971:12;7938:47;;8009:22;;:::i;:::-;8077:2;8066:9;8062:18;8056:25;8047:7;8040:42;8137:2;8126:9;8122:18;8116:25;8111:2;8102:7;8098:16;8091:51;8187:2;8176:9;8172:18;8166:25;8200:33;8225:7;8200:33;:::i;:::-;8267:7;8262:2;8253:7;8249:16;8242:33;;8330:3;8319:9;8315:19;8309:26;8304:2;8295:7;8291:16;8284:52;8392:3;8381:9;8377:19;8371:26;8365:3;8356:7;8352:17;8345:53;8454:3;8443:9;8439:19;8433:26;8427:3;8418:7;8414:17;8407:53;8505:4;8494:9;8490:20;8484:27;8542:1;8533:7;8530:14;8520:42;;8558:1;8555;8548:12;8520:42;8591:3;8578:17;;8571:34;7624:1013;;8582:7;;-1:-1:-1;7624:1013:57;;-1:-1:-1;;7624:1013:57:o;8642:184::-;8712:6;8765:2;8753:9;8744:7;8740:23;8736:32;8733:52;;;8781:1;8778;8771:12;8733:52;-1:-1:-1;8804:16:57;;8642:184;-1:-1:-1;8642:184:57:o;8831:443::-;8885:5;8938:3;8931:4;8923:6;8919:17;8915:27;8905:55;;8956:1;8953;8946:12;8905:55;8985:6;8979:13;9016:49;9032:32;9061:2;9032:32;:::i;9016:49::-;9090:2;9081:7;9074:19;9136:3;9129:4;9124:2;9116:6;9112:15;9108:26;9105:35;9102:55;;;9153:1;9150;9143:12;9102:55;9166:77;9240:2;9233:4;9224:7;9220:18;9213:4;9205:6;9201:17;9166:77;:::i;9279:1194::-;9379:6;9387;9440:2;9428:9;9419:7;9415:23;9411:32;9408:52;;;9456:1;9453;9446:12;9408:52;9488:9;9482:16;9507:28;9529:5;9507:28;:::i;:::-;9603:2;9588:18;;9582:25;9554:5;;-1:-1:-1;9626:18:57;9656:14;;;9653:34;;;9683:1;9680;9673:12;9653:34;9706:22;;;;9762:6;9744:16;;;9740:29;9737:49;;;9782:1;9779;9772:12;9737:49;9810:22;;:::i;:::-;9863:2;9857:9;9848:7;9841:26;9901:42;9939:2;9935;9931:11;9901:42;:::i;:::-;9896:2;9887:7;9883:16;9876:68;9992:2;9988;9984:11;9978:18;9973:2;9964:7;9960:16;9953:44;10045:2;10041;10037:11;10031:18;10026:2;10017:7;10013:16;10006:44;10085:43;10123:3;10119:2;10115:12;10085:43;:::i;:::-;10079:3;10070:7;10066:17;10059:70;10178:3;10174:2;10170:12;10164:19;10158:3;10149:7;10145:17;10138:46;10223:3;10219:2;10215:12;10209:19;10253:2;10243:8;10240:16;10237:36;;;10269:1;10266;10259:12;10237:36;10308:56;10356:7;10345:8;10341:2;10337:17;10308:56;:::i;:::-;10302:3;10293:7;10289:17;10282:83;;10400:40;10435:3;10431:2;10427:12;10400:40;:::i;:::-;10394:3;10385:7;10381:17;10374:67;10460:7;10450:17;;;;;9279:1194;;;;;:::o;13669:245::-;13736:6;13789:2;13777:9;13768:7;13764:23;13760:32;13757:52;;;13805:1;13802;13795:12;13757:52;13837:9;13831:16;13856:28;13878:5;13856:28;:::i;14397:254::-;14574:2;14563:9;14556:21;14537:4;14594:51;14641:2;14630:9;14626:18;14618:6;14594:51;:::i;15424:265::-;15464:7;15530:1;15526;15522:6;15518:14;15515:1;15512:21;15507:1;15500:9;15493:17;15489:45;15486:168;;;15576:10;15571:3;15567:20;15564:1;15557:31;15611:4;15608:1;15601:15;15639:4;15636:1;15629:15;15486:168;-1:-1:-1;15674:9:57;;15424:265::o;15694:217::-;15734:1;15760;15750:132;;15804:10;15799:3;15795:20;15792:1;15785:31;15839:4;15836:1;15829:15;15867:4;15864:1;15857:15;15750:132;-1:-1:-1;15896:9:57;;15694:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(uint256)": "40e58ee5",
    "commit(uint256)": "f4f98ad5",
    "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": "c01fd3f7",
    "finalize(uint256)": "05261aea",
    "getEscrowBalance(address)": "6374b11b",
    "getExchange(uint256)": "0b9d5847",
    "getOffer(uint256)": "4579268a",
    "getProtocolBalance()": "14e7c922",
    "getSellerDeposit(uint256)": "88106323",
    "initialize(address)": "c4d66de8",
    "owner()": "8da5cb5b",
    "redeem(uint256)": "db006a75",
    "renounceOwnership()": "715018a6",
    "revoke(uint256)": "20c5429b",
    "transferOwnership(address)": "f2fde38b",
    "voidOffer(uint256)": "4915907b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"}],\"name\":\"createOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalizedDate\",\"type\":\"uint256\"},{\"internalType\":\"enum BionetTypes.ExchangeState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct BionetTypes.Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getSellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"voidOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Main entry way to the protocol. Acts as a proxy. Primarily doing guard checks and forwarding the caller to the Exchange. Contracts such as BionetExchange will only allow calls from this contract.\",\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"commit(uint256)\":{\"details\":\"Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.\",\"params\":{\"_offerId\":\"to commit to\"},\"returns\":{\"exchangeId\":\"of the new exchange\"}},\"createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))\":{\"details\":\"Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.\",\"params\":{\"_offer\":\"information\"},\"returns\":{\"offerId\":\"of the offer\"}},\"finalize(uint256)\":{\"details\":\"Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"getEscrowBalance(address)\":{\"details\":\"Return the escrow balance of the given account\",\"params\":{\"_account\":\"to check\"},\"returns\":{\"bal\":\"of the account\"}},\"getExchange(uint256)\":{\"details\":\"Get an exchange for the given ID\",\"params\":{\"_exchangeId\":\"of the exchange\"},\"returns\":{\"exchange\":\"information\",\"exists\":\"true if the exchange exists\"}},\"getOffer(uint256)\":{\"details\":\"Get an offer for the given ID\",\"params\":{\"_offerId\":\"of the offer\"},\"returns\":{\"exists\":\"true if the offer exists\",\"offer\":\"information\"}},\"getProtocolBalance()\":{\"details\":\"Get the balance of fees collected for the protocol\",\"returns\":{\"bal\":\"- the balance\"}},\"getSellerDeposit(uint256)\":{\"details\":\"Get the required deposit of a seller creating a new offer.\",\"params\":{\"_price\":\"to purchase the offer\"},\"returns\":{\"amt\":\"- the cost\"}},\"initialize(address)\":{\"details\":\"Called after default contructor to set needed addresses\",\"params\":{\"_exchange\":\"address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256)\":{\"details\":\"Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(uint256)\":{\"details\":\"Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to revoke\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voidOffer(uint256)\":{\"details\":\"Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.\",\"params\":{\"_offerId\":\"to void\"}},\"withdraw()\":{\"details\":\"Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BionetRouter.sol\":\"BionetRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b\",\"dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/BionetConstants.sol\":{\"keccak256\":\"0x0e2ad58b7642df55d88c78979b4fe8e54324fef55287546743d59a2335156a66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1124817e178e8c674b7862540324bc7c7e27bb4d9cb4bdcd8c9498800f2eb7ab\",\"dweb:/ipfs/QmbkHTgALT977saKG3mbhqrkMoadzFVREH5V7NaknprasX\"]},\"src/BionetRouter.sol\":{\"keccak256\":\"0x44dc2e52a82da7438cf3e8bed1a7a4313700260c792b1ae268863a981c1c4bc6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f520b7e39e51c521e2ffaff21d7750284b9354dd9f9da8cea2cae9da24f9743f\",\"dweb:/ipfs/QmNWmrDezsHU6cpo44K97tpvaPQGqHEK9Hw3VL2SMvaPAq\"]},\"src/BionetTypes.sol\":{\"keccak256\":\"0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61\",\"dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1\"]},\"src/interfaces/IBionetExchange.sol\":{\"keccak256\":\"0x9d45ba385a1c27b318a88492f64744cd359bab6e551736327c1114e4ab0f187e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21f28f27d77e8a313e1d3d3b4d8544c38ad8ec4120678284dee14faad1894cd5\",\"dweb:/ipfs/QmQpakR1M8hb5dpxvDBPoCynfAXBUjWgxTih8gpZ5tCbQF\"]},\"src/interfaces/IBionetRouter.sol\":{\"keccak256\":\"0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514\",\"dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y\"]},\"src/interfaces/IBionetVoucher.sol\":{\"keccak256\":\"0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1\",\"dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y\"]},\"src/libs/FundsLib.sol\":{\"keccak256\":\"0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54\",\"dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "commit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "_offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchange",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Exchange",
              "name": "exchange",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "redeemBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputeBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finalizedDate",
                  "type": "uint256"
                },
                {
                  "internalType": "enum BionetTypes.ExchangeState",
                  "name": "state",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSellerDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_exchange",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidOffer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancel(uint256)": {
            "details": "Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "commit(uint256)": {
            "details": "Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.",
            "params": {
              "_offerId": "to commit to"
            },
            "returns": {
              "exchangeId": "of the new exchange"
            }
          },
          "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": {
            "details": "Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.",
            "params": {
              "_offer": "information"
            },
            "returns": {
              "offerId": "of the offer"
            }
          },
          "finalize(uint256)": {
            "details": "Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "getEscrowBalance(address)": {
            "details": "Return the escrow balance of the given account",
            "params": {
              "_account": "to check"
            },
            "returns": {
              "bal": "of the account"
            }
          },
          "getExchange(uint256)": {
            "details": "Get an exchange for the given ID",
            "params": {
              "_exchangeId": "of the exchange"
            },
            "returns": {
              "exchange": "information",
              "exists": "true if the exchange exists"
            }
          },
          "getOffer(uint256)": {
            "details": "Get an offer for the given ID",
            "params": {
              "_offerId": "of the offer"
            },
            "returns": {
              "exists": "true if the offer exists",
              "offer": "information"
            }
          },
          "getProtocolBalance()": {
            "details": "Get the balance of fees collected for the protocol",
            "returns": {
              "bal": "- the balance"
            }
          },
          "getSellerDeposit(uint256)": {
            "details": "Get the required deposit of a seller creating a new offer.",
            "params": {
              "_price": "to purchase the offer"
            },
            "returns": {
              "amt": "- the cost"
            }
          },
          "initialize(address)": {
            "details": "Called after default contructor to set needed addresses",
            "params": {
              "_exchange": "address"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "redeem(uint256)": {
            "details": "Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revoke(uint256)": {
            "details": "Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to revoke"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "voidOffer(uint256)": {
            "details": "Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.",
            "params": {
              "_offerId": "to void"
            }
          },
          "withdraw()": {
            "details": "Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BionetRouter.sol": "BionetRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46",
        "urls": [
          "bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b",
          "dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/BionetConstants.sol": {
        "keccak256": "0x0e2ad58b7642df55d88c78979b4fe8e54324fef55287546743d59a2335156a66",
        "urls": [
          "bzz-raw://1124817e178e8c674b7862540324bc7c7e27bb4d9cb4bdcd8c9498800f2eb7ab",
          "dweb:/ipfs/QmbkHTgALT977saKG3mbhqrkMoadzFVREH5V7NaknprasX"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetRouter.sol": {
        "keccak256": "0x44dc2e52a82da7438cf3e8bed1a7a4313700260c792b1ae268863a981c1c4bc6",
        "urls": [
          "bzz-raw://f520b7e39e51c521e2ffaff21d7750284b9354dd9f9da8cea2cae9da24f9743f",
          "dweb:/ipfs/QmNWmrDezsHU6cpo44K97tpvaPQGqHEK9Hw3VL2SMvaPAq"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetTypes.sol": {
        "keccak256": "0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c",
        "urls": [
          "bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61",
          "dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetExchange.sol": {
        "keccak256": "0x9d45ba385a1c27b318a88492f64744cd359bab6e551736327c1114e4ab0f187e",
        "urls": [
          "bzz-raw://21f28f27d77e8a313e1d3d3b4d8544c38ad8ec4120678284dee14faad1894cd5",
          "dweb:/ipfs/QmQpakR1M8hb5dpxvDBPoCynfAXBUjWgxTih8gpZ5tCbQF"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetRouter.sol": {
        "keccak256": "0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e",
        "urls": [
          "bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514",
          "dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetVoucher.sol": {
        "keccak256": "0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a",
        "urls": [
          "bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1",
          "dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y"
        ],
        "license": "Apache-2.0"
      },
      "src/libs/FundsLib.sol": {
        "keccak256": "0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914",
        "urls": [
          "bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54",
          "dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BionetRouter.sol",
    "id": 32669,
    "exportedSymbols": {
      "BionetRouter": [
        32668
      ],
      "BionetTypes": [
        32715
      ],
      "ERC165Checker": [
        30176
      ],
      "FundsLib": [
        33571
      ],
      "IBionetExchange": [
        32987
      ],
      "IBionetRouter": [
        33079
      ],
      "IBionetVoucher": [
        33104
      ],
      "IERC1155": [
        28239
      ],
      "Ownable": [
        26840
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7638:38",
    "nodes": [
      {
        "id": 32261,
        "nodeType": "PragmaDirective",
        "src": "39:24:38",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 32262,
        "nodeType": "ImportDirective",
        "src": "65:27:38",
        "nodes": [],
        "absolutePath": "src/BionetTypes.sol",
        "file": "./BionetTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 32716,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32264,
        "nodeType": "ImportDirective",
        "src": "94:45:38",
        "nodes": [],
        "absolutePath": "src/libs/FundsLib.sol",
        "file": "./libs/FundsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 33572,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32263,
              "name": "FundsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33571,
              "src": "102:8:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32266,
        "nodeType": "ImportDirective",
        "src": "140:61:38",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetRouter.sol",
        "file": "./interfaces/IBionetRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 33080,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32265,
              "name": "IBionetRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33079,
              "src": "148:13:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32268,
        "nodeType": "ImportDirective",
        "src": "202:63:38",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetVoucher.sol",
        "file": "./interfaces/IBionetVoucher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 33105,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32267,
              "name": "IBionetVoucher",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33104,
              "src": "210:14:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32270,
        "nodeType": "ImportDirective",
        "src": "266:65:38",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetExchange.sol",
        "file": "./interfaces/IBionetExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 32988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32269,
              "name": "IBionetExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32987,
              "src": "274:15:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32272,
        "nodeType": "ImportDirective",
        "src": "333:56:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 26841,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32271,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26840,
              "src": "341:7:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32274,
        "nodeType": "ImportDirective",
        "src": "390:65:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "file": "openzeppelin/token/ERC1155/IERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 28240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32273,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28239,
              "src": "398:8:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32276,
        "nodeType": "ImportDirective",
        "src": "456:81:38",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "openzeppelin/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32669,
        "sourceUnit": 30177,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32275,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30176,
              "src": "464:13:38",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32668,
        "nodeType": "ContractDefinition",
        "src": "756:6920:38",
        "nodes": [
          {
            "id": 32283,
            "nodeType": "VariableDeclaration",
            "src": "843:23:38",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchangeAddress",
            "nameLocation": "851:15:38",
            "scope": 32668,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32282,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "843:7:38",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32298,
            "nodeType": "ModifierDefinition",
            "src": "907:124:38",
            "nodes": [],
            "body": {
              "id": 32297,
              "nodeType": "Block",
              "src": "932:99:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32286,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "950:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "954:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "950:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "972:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "964:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "964:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "964:12:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "950:26:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564",
                        "id": 32293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:34:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0247f9ef2f462c56f02cdb50a168e0c48692ef99e2489a44775632312ef910a6",
                          "typeString": "literal_string \"Router: Zero address not allowed\""
                        },
                        "value": "Router: Zero address not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0247f9ef2f462c56f02cdb50a168e0c48692ef99e2489a44775632312ef910a6",
                          "typeString": "literal_string \"Router: Zero address not allowed\""
                        }
                      ],
                      "id": 32285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "942:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:71:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32295,
                  "nodeType": "ExpressionStatement",
                  "src": "942:71:38"
                },
                {
                  "id": 32296,
                  "nodeType": "PlaceholderStatement",
                  "src": "1023:1:38"
                }
              ]
            },
            "name": "noZeroAddress",
            "nameLocation": "916:13:38",
            "parameters": {
              "id": 32284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:2:38"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32309,
            "nodeType": "FunctionDefinition",
            "src": "1139:92:38",
            "nodes": [],
            "body": {
              "id": 32308,
              "nodeType": "Block",
              "src": "1187:44:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32304,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32283,
                      "src": "1197:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32305,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32301,
                      "src": "1215:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1197:27:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32307,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:27:38"
                }
              ]
            },
            "baseFunctions": [
              32996
            ],
            "documentation": {
              "id": 32299,
              "nodeType": "StructuredDocumentation",
              "src": "1037:97:38",
              "text": "@dev Called after default contructor to set needed addresses\n @param _exchange address"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1148:10:38",
            "parameters": {
              "id": 32302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32301,
                  "mutability": "mutable",
                  "name": "_exchange",
                  "nameLocation": "1167:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32309,
                  "src": "1159:17:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32300,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:19:38"
            },
            "returnParameters": {
              "id": 32303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1187:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32324,
            "nodeType": "FunctionDefinition",
            "src": "1365:113:38",
            "nodes": [],
            "body": {
              "id": 32323,
              "nodeType": "Block",
              "src": "1408:70:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32319,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1460:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1464:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1460:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32316,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "1434:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32315,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "1418:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1418:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1451:8:38",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32954,
                      "src": "1418:41:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32322,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:53:38"
                }
              ]
            },
            "baseFunctions": [
              33071
            ],
            "documentation": {
              "id": 32310,
              "nodeType": "StructuredDocumentation",
              "src": "1237:123:38",
              "text": "@dev Withdraw ether from the exchange.  Withdraws will only\n send funds that have been released by the protocol."
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32313,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32312,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1394:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "1394:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1394:13:38"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1374:8:38",
            "parameters": {
              "id": 32311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:38"
            },
            "returnParameters": {
              "id": 32314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32344,
            "nodeType": "FunctionDefinition",
            "src": "1612:212:38",
            "nodes": [],
            "body": {
              "id": 32343,
              "nodeType": "Block",
              "src": "1742:82:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32334,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32332,
                      "src": "1752:3:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32339,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32327,
                          "src": "1808:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32336,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32283,
                              "src": "1774:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32335,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32987,
                            "src": "1758:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1758:32:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1791:16:38",
                        "memberName": "getEscrowBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32961,
                        "src": "1758:49:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 32340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1758:59:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1752:65:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32342,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:65:38"
                }
              ]
            },
            "baseFunctions": [
              33078
            ],
            "documentation": {
              "id": 32325,
              "nodeType": "StructuredDocumentation",
              "src": "1484:123:38",
              "text": "@dev Return the escrow balance of the given account\n @param _account to check\n @return bal of the account"
            },
            "functionSelector": "6374b11b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32330,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32329,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1694:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "1694:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1694:13:38"
              }
            ],
            "name": "getEscrowBalance",
            "nameLocation": "1621:16:38",
            "parameters": {
              "id": 32328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32327,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1646:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32344,
                  "src": "1638:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1637:18:38"
            },
            "returnParameters": {
              "id": 32333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32332,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "1733:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32344,
                  "src": "1725:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:13:38"
            },
            "scope": 32668,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32367,
            "nodeType": "FunctionDefinition",
            "src": "2007:261:38",
            "nodes": [],
            "body": {
              "id": 32366,
              "nodeType": "Block",
              "src": "2151:117:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32355,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32350,
                          "src": "2162:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32356,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32353,
                          "src": "2170:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$32714_memory_ptr",
                            "typeString": "struct BionetTypes.Exchange memory"
                          }
                        }
                      ],
                      "id": 32357,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2161:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32714_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32362,
                          "name": "_exchangeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32347,
                          "src": "2240:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32359,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32283,
                              "src": "2198:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32358,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32987,
                            "src": "2182:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2182:32:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2215:11:38",
                        "memberName": "getExchange",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32986,
                        "src": "2182:44:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Exchange_$32714_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Exchange memory)"
                        }
                      },
                      "id": 32363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2182:79:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32714_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "src": "2161:100:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32365,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:100:38"
                }
              ]
            },
            "baseFunctions": [
              33013
            ],
            "documentation": {
              "id": 32345,
              "nodeType": "StructuredDocumentation",
              "src": "1830:172:38",
              "text": "@dev Get an exchange for the given ID\n @param _exchangeId of the exchange\n @return exists true if the exchange exists\n @return exchange information"
            },
            "functionSelector": "0b9d5847",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "2016:11:38",
            "parameters": {
              "id": 32348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32347,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "2036:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32367,
                  "src": "2028:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2028:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2027:21:38"
            },
            "returnParameters": {
              "id": 32354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32350,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2101:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32367,
                  "src": "2096:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32353,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "2137:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32367,
                  "src": "2109:36:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Exchange_$32714_memory_ptr",
                    "typeString": "struct BionetTypes.Exchange"
                  },
                  "typeName": {
                    "id": 32352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32351,
                      "name": "BionetTypes.Exchange",
                      "nameLocations": [
                        "2109:11:38",
                        "2121:8:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32714,
                      "src": "2109:20:38"
                    },
                    "referencedDeclaration": 32714,
                    "src": "2109:20:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Exchange_$32714_storage_ptr",
                      "typeString": "struct BionetTypes.Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:51:38"
            },
            "scope": 32668,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32390,
            "nodeType": "FunctionDefinition",
            "src": "2436:218:38",
            "nodes": [],
            "body": {
              "id": 32389,
              "nodeType": "Block",
              "src": "2568:86:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32378,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32373,
                          "src": "2579:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32379,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32376,
                          "src": "2587:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "id": 32380,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2578:15:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32698_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32385,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32370,
                          "src": "2638:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32382,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32283,
                              "src": "2612:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32381,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32987,
                            "src": "2596:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2596:32:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2629:8:38",
                        "memberName": "getOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32976,
                        "src": "2596:41:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Offer_$32698_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Offer memory)"
                        }
                      },
                      "id": 32386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2596:51:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32698_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "src": "2578:69:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32388,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:69:38"
                }
              ]
            },
            "baseFunctions": [
              33023
            ],
            "documentation": {
              "id": 32368,
              "nodeType": "StructuredDocumentation",
              "src": "2274:157:38",
              "text": "@dev Get an offer for the given ID\n @param _offerId of the offer\n @return exists true if the offer exists\n @return offer information"
            },
            "functionSelector": "4579268a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "2445:8:38",
            "parameters": {
              "id": 32371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32370,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "2462:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32390,
                  "src": "2454:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2454:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2453:18:38"
            },
            "returnParameters": {
              "id": 32377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32373,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2524:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32390,
                  "src": "2519:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32376,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2557:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32390,
                  "src": "2532:30:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32374,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "2532:11:38",
                        "2544:5:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32698,
                      "src": "2532:17:38"
                    },
                    "referencedDeclaration": 32698,
                    "src": "2532:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32698_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2518:45:38"
            },
            "scope": 32668,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32406,
            "nodeType": "FunctionDefinition",
            "src": "2807:168:38",
            "nodes": [],
            "body": {
              "id": 32405,
              "nodeType": "Block",
              "src": "2913:62:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32398,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32396,
                      "src": "2923:3:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32401,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32393,
                          "src": "2961:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 32399,
                          "name": "FundsLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33571,
                          "src": "2929:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FundsLib_$33571_$",
                            "typeString": "type(library FundsLib)"
                          }
                        },
                        "id": 32400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2938:22:38",
                        "memberName": "calculateSellerDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33570,
                        "src": "2929:31:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 32402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2929:39:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2923:45:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32404,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:45:38"
                }
              ]
            },
            "baseFunctions": [
              33003
            ],
            "documentation": {
              "id": 32391,
              "nodeType": "StructuredDocumentation",
              "src": "2660:142:38",
              "text": "@dev Get the required deposit of a seller creating a new offer.\n @param _price to purchase the offer\n @return amt - the cost"
            },
            "functionSelector": "88106323",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellerDeposit",
            "nameLocation": "2816:16:38",
            "parameters": {
              "id": 32394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32393,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2841:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32406,
                  "src": "2833:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2833:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2832:16:38"
            },
            "returnParameters": {
              "id": 32397,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32396,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "2904:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32406,
                  "src": "2896:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32395,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2896:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2895:13:38"
            },
            "scope": 32668,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32421,
            "nodeType": "FunctionDefinition",
            "src": "3079:142:38",
            "nodes": [],
            "body": {
              "id": 32420,
              "nodeType": "Block",
              "src": "3145:76:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32412,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32410,
                      "src": "3155:3:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32414,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32283,
                              "src": "3177:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32413,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32987,
                            "src": "3161:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3161:32:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3194:18:38",
                        "memberName": "getProtocolBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32966,
                        "src": "3161:51:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 32417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3161:53:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3155:59:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32419,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:59:38"
                }
              ]
            },
            "baseFunctions": [
              33028
            ],
            "documentation": {
              "id": 32407,
              "nodeType": "StructuredDocumentation",
              "src": "2981:93:38",
              "text": "@dev Get the balance of fees collected for the protocol\n @return bal - the balance"
            },
            "functionSelector": "14e7c922",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtocolBalance",
            "nameLocation": "3088:18:38",
            "parameters": {
              "id": 32408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3106:2:38"
            },
            "returnParameters": {
              "id": 32411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32410,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "3140:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32421,
                  "src": "3132:11:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3132:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3131:13:38"
            },
            "scope": 32668,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32552,
            "nodeType": "FunctionDefinition",
            "src": "3460:2000:38",
            "nodes": [],
            "body": {
              "id": 32551,
              "nodeType": "Block",
              "src": "3607:1853:38",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32433,
                      "mutability": "mutable",
                      "name": "deposit",
                      "nameLocation": "3668:7:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 32551,
                      "src": "3660:15:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3660:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32439,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32436,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32425,
                          "src": "3710:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32437,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3717:5:38",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32687,
                        "src": "3710:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32434,
                        "name": "FundsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33571,
                        "src": "3678:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FundsLib_$33571_$",
                          "typeString": "type(library FundsLib)"
                        }
                      },
                      "id": 32435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3687:22:38",
                      "memberName": "calculateSellerDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33570,
                      "src": "3678:31:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 32438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3678:45:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3660:63:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32441,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3741:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3745:5:38",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3741:9:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32443,
                          "name": "deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32433,
                          "src": "3754:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3741:20:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20496e73756666696369656e742073656c6c6572206465706f736974",
                        "id": 32445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3763:37:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f036db68c62cedc261bdf8f98825619126347988f2e5826d03161b88e30a4a24",
                          "typeString": "literal_string \"Router: Insufficient seller deposit\""
                        },
                        "value": "Router: Insufficient seller deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f036db68c62cedc261bdf8f98825619126347988f2e5826d03161b88e30a4a24",
                          "typeString": "literal_string \"Router: Insufficient seller deposit\""
                        }
                      ],
                      "id": 32440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3733:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3733:68:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32447,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:68:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32449,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32425,
                            "src": "3875:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32450,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3882:6:38",
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32685,
                          "src": "3875:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 32451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3892:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3896:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3892:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3875:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a206f666665722e73656c6c6572206d757374206265207468652063616c6c6572",
                        "id": 32454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3916:41:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c059d29b6b1702561cd1c22e1d3a5575578e23f7d69d222acd8941dca4e2286",
                          "typeString": "literal_string \"Router: offer.seller must be the caller\""
                        },
                        "value": "Router: offer.seller must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c059d29b6b1702561cd1c22e1d3a5575578e23f7d69d222acd8941dca4e2286",
                          "typeString": "literal_string \"Router: offer.seller must be the caller\""
                        }
                      ],
                      "id": 32448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3854:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:113:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32456,
                  "nodeType": "ExpressionStatement",
                  "src": "3854:113:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32458,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32425,
                            "src": "3985:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3992:17:38",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32689,
                          "src": "3985:24:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4012:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3985:28:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a206f6666657220717479203e2030",
                        "id": 32462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4015:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_913e9e943f50ad33c11aa5559f0dcc537d73b5b9f7c4c434cc6a2e0db62cd100",
                          "typeString": "literal_string \"Router: offer qty > 0\""
                        },
                        "value": "Router: offer qty > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_913e9e943f50ad33c11aa5559f0dcc537d73b5b9f7c4c434cc6a2e0db62cd100",
                          "typeString": "literal_string \"Router: offer qty > 0\""
                        }
                      ],
                      "id": 32457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3977:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3977:62:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32464,
                  "nodeType": "ExpressionStatement",
                  "src": "3977:62:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32466,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32425,
                            "src": "4070:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32467,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4077:10:38",
                          "memberName": "assetToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32691,
                          "src": "4070:17:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32470,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4099:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4091:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32468,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4091:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4091:12:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4070:33:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20417373657420746f6b656e206d757374206861766520612076616c6964206164647265737320286e6f742030783029",
                        "id": 32473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4117:57:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f2a302f49fe8afddb413d6bf75623dc4652a6c312545e4bae2acfa3966209b4",
                          "typeString": "literal_string \"Router: Asset token must have a valid address (not 0x0)\""
                        },
                        "value": "Router: Asset token must have a valid address (not 0x0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f2a302f49fe8afddb413d6bf75623dc4652a6c312545e4bae2acfa3966209b4",
                          "typeString": "literal_string \"Router: Asset token must have a valid address (not 0x0)\""
                        }
                      ],
                      "id": 32465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4049:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4049:135:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32475,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:135:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 32480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32477,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32425,
                            "src": "4202:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32478,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4209:6:38",
                          "memberName": "voided",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32697,
                          "src": "4202:13:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 32479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4219:5:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4202:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20746865206f666665722063616e6e6f7420626520766f69646564",
                        "id": 32481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4226:36:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98cd06186baece95f7473a68407550181d1ed2ffa2feeb6d5a1fd2a010f10265",
                          "typeString": "literal_string \"Router: the offer cannot be voided\""
                        },
                        "value": "Router: the offer cannot be voided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98cd06186baece95f7473a68407550181d1ed2ffa2feeb6d5a1fd2a010f10265",
                          "typeString": "literal_string \"Router: the offer cannot be voided\""
                        }
                      ],
                      "id": 32476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4194:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:69:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32483,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:69:38"
                },
                {
                  "assignments": [
                    32485
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32485,
                      "mutability": "mutable",
                      "name": "isValidAsset",
                      "nameLocation": "4334:12:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 32551,
                      "src": "4329:17:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32484,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4329:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32495,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32488,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32425,
                          "src": "4394:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32489,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4401:10:38",
                        "memberName": "assetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32691,
                        "src": "4394:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32491,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28239,
                              "src": "4430:8:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            ],
                            "id": 32490,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4425:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4425:14:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$28239",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4440:11:38",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4425:26:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 32486,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "4349:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$30176_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 32487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4363:17:38",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30032,
                      "src": "4349:31:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 32494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4349:112:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4329:132:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32497,
                        "name": "isValidAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32485,
                        "src": "4479:12:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20546865206173736574206973206e6f7420616e204552433131353520636f6e7472616374",
                        "id": 32498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4493:46:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f403719da842b69354bf42e1696a2eace250b28c87c55d9a6064377c456e2925",
                          "typeString": "literal_string \"Router: The asset is not an ERC1155 contract\""
                        },
                        "value": "Router: The asset is not an ERC1155 contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f403719da842b69354bf42e1696a2eace250b28c87c55d9a6064377c456e2925",
                          "typeString": "literal_string \"Router: The asset is not an ERC1155 contract\""
                        }
                      ],
                      "id": 32496,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4471:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4471:69:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32500,
                  "nodeType": "ExpressionStatement",
                  "src": "4471:69:38"
                },
                {
                  "assignments": [
                    32502
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32502,
                      "mutability": "mutable",
                      "name": "numTokensOwned",
                      "nameLocation": "4641:14:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 32551,
                      "src": "4633:22:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32501,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4633:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32513,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32508,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4709:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4713:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4709:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32510,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32425,
                          "src": "4733:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32511,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4740:12:38",
                        "memberName": "assetTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32693,
                        "src": "4733:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32504,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "4667:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32505,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4674:10:38",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32691,
                            "src": "4667:17:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32503,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28239,
                          "src": "4658:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4658:27:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28239",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4686:9:38",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28177,
                      "src": "4658:37:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 32512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4658:104:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4633:129:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32515,
                          "name": "numTokensOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32502,
                          "src": "4793:14:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 32516,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32425,
                            "src": "4811:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32517,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4818:17:38",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32689,
                          "src": "4811:24:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4793:42:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205468652073656c6c657220646f6573206e6f74206f776e20656e6f756768204552433131353520746f6b656e7320666f7220746865206f6666657220717479",
                        "id": 32519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4849:73:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7574aa2d09c5ce9e8a255d74e2513d991f69d3f5c614988ca2945dee25a57243",
                          "typeString": "literal_string \"Router: The seller does not own enough ERC1155 tokens for the offer qty\""
                        },
                        "value": "Router: The seller does not own enough ERC1155 tokens for the offer qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7574aa2d09c5ce9e8a255d74e2513d991f69d3f5c614988ca2945dee25a57243",
                          "typeString": "literal_string \"Router: The seller does not own enough ERC1155 tokens for the offer qty\""
                        }
                      ],
                      "id": 32514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4772:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4772:160:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32521,
                  "nodeType": "ExpressionStatement",
                  "src": "4772:160:38"
                },
                {
                  "assignments": [
                    32523
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32523,
                      "mutability": "mutable",
                      "name": "approvedForExchange",
                      "nameLocation": "5014:19:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 32551,
                      "src": "5009:24:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32522,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5009:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32533,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32529,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32425,
                          "src": "5094:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32530,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5101:6:38",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32685,
                        "src": "5094:13:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32531,
                        "name": "exchangeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32283,
                        "src": "5121:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32525,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32425,
                              "src": "5045:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32526,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5052:10:38",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32691,
                            "src": "5045:17:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32524,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28239,
                          "src": "5036:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5036:27:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28239",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5064:16:38",
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28208,
                      "src": "5036:44:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 32532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5036:110:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5009:137:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32535,
                        "name": "approvedForExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32523,
                        "src": "5177:19:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205468652065786368616e6765206d75737420626520617070726f76656420746f207472616e7366657220796f7572204552433131353520746f6b656e73",
                        "id": 32536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5210:71:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9519e2cdbdbb4a1f1355170c071310e4013bd3f17542b5dc28e926afb21bdb7f",
                          "typeString": "literal_string \"Router: The exchange must be approved to transfer your ERC1155 tokens\""
                        },
                        "value": "Router: The exchange must be approved to transfer your ERC1155 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9519e2cdbdbb4a1f1355170c071310e4013bd3f17542b5dc28e926afb21bdb7f",
                          "typeString": "literal_string \"Router: The exchange must be approved to transfer your ERC1155 tokens\""
                        }
                      ],
                      "id": 32534,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5156:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5156:135:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32538,
                  "nodeType": "ExpressionStatement",
                  "src": "5156:135:38"
                },
                {
                  "expression": {
                    "id": 32549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32539,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32430,
                      "src": "5351:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32547,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32425,
                          "src": "5446:6:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32541,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32283,
                                "src": "5377:15:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32540,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32987,
                              "src": "5361:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5361:32:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5394:11:38",
                          "memberName": "createOffer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32905,
                          "src": "5361:44:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32698_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                          }
                        },
                        "id": 32546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32544,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5426:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5430:5:38",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5426:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "5361:84:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32698_memory_ptr_$returns$_t_uint256_$value",
                          "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                        }
                      },
                      "id": 32548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5361:92:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5351:102:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32550,
                  "nodeType": "ExpressionStatement",
                  "src": "5351:102:38"
                }
              ]
            },
            "baseFunctions": [
              33036
            ],
            "documentation": {
              "id": 32422,
              "nodeType": "StructuredDocumentation",
              "src": "3227:228:38",
              "text": "@dev Create a new offer for a seller. The seller is expected\n to pay the appropriate deposit here.\n Can revert for several reasons.\n @param _offer information\n @return offerId of the offer"
            },
            "functionSelector": "c01fd3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32427,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "3555:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "3555:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "3555:13:38"
              }
            ],
            "name": "createOffer",
            "nameLocation": "3469:11:38",
            "parameters": {
              "id": 32426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32425,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "3506:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32552,
                  "src": "3481:31:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32698_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32424,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32423,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "3481:11:38",
                        "3493:5:38"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32698,
                      "src": "3481:17:38"
                    },
                    "referencedDeclaration": 32698,
                    "src": "3481:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32698_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3480:33:38"
            },
            "returnParameters": {
              "id": 32431,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32430,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "3594:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32552,
                  "src": "3586:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3586:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3585:17:38"
            },
            "scope": 32668,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32570,
            "nodeType": "FunctionDefinition",
            "src": "5666:141:38",
            "nodes": [],
            "body": {
              "id": 32569,
              "nodeType": "Block",
              "src": "5726:81:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5779:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5783:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5779:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32566,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32555,
                        "src": "5791:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32561,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "5752:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32560,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "5736:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5736:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5769:9:38",
                      "memberName": "voidOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32912,
                      "src": "5736:42:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5736:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32568,
                  "nodeType": "ExpressionStatement",
                  "src": "5736:64:38"
                }
              ]
            },
            "baseFunctions": [
              33041
            ],
            "documentation": {
              "id": 32553,
              "nodeType": "StructuredDocumentation",
              "src": "5466:195:38",
              "text": "@dev Called by seller to void an offer. This should remove\n the offer from the market UI.  Will not impact\n existing exchanges against the offer.\n @param _offerId to void"
            },
            "functionSelector": "4915907b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32558,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32557,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "5712:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "5712:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5712:13:38"
              }
            ],
            "name": "voidOffer",
            "nameLocation": "5675:9:38",
            "parameters": {
              "id": 32556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32555,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "5693:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32570,
                  "src": "5685:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5685:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5684:18:38"
            },
            "returnParameters": {
              "id": 32559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5726:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32595,
            "nodeType": "FunctionDefinition",
            "src": "6049:273:38",
            "nodes": [],
            "body": {
              "id": 32594,
              "nodeType": "Block",
              "src": "6179:143:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32580,
                      "name": "exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32578,
                      "src": "6189:10:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6273:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6277:6:38",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6273:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32590,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32573,
                          "src": "6297:8:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32582,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32283,
                                "src": "6218:15:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32581,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32987,
                              "src": "6202:15:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32583,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6202:32:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6235:6:38",
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32921,
                          "src": "6202:39:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 32587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32585,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6249:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6253:5:38",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6249:9:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "6202:57:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                          "typeString": "function (address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 32591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6202:113:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6189:126:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32593,
                  "nodeType": "ExpressionStatement",
                  "src": "6189:126:38"
                }
              ]
            },
            "baseFunctions": [
              33048
            ],
            "documentation": {
              "id": 32571,
              "nodeType": "StructuredDocumentation",
              "src": "5813:231:38",
              "text": "@dev Commit to purchase. Creates a new exchange in the 'committed' state.\n Called by buyer. The buyer is expected to pay the price here.\n @param _offerId to commit to\n @return exchangeId of the new exchange"
            },
            "functionSelector": "f4f98ad5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32576,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32575,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6124:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "6124:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "6124:13:38"
              }
            ],
            "name": "commit",
            "nameLocation": "6058:6:38",
            "parameters": {
              "id": 32574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32573,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "6073:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32595,
                  "src": "6065:16:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6065:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6064:18:38"
            },
            "returnParameters": {
              "id": 32579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32578,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "6163:10:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32595,
                  "src": "6155:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32577,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6155:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6154:20:38"
            },
            "scope": 32668,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32613,
            "nodeType": "FunctionDefinition",
            "src": "6507:141:38",
            "nodes": [],
            "body": {
              "id": 32612,
              "nodeType": "Block",
              "src": "6567:81:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32607,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6617:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6621:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6617:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32609,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32598,
                        "src": "6629:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32604,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "6593:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32603,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "6577:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6577:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6610:6:38",
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32928,
                      "src": "6577:39:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6577:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32611,
                  "nodeType": "ExpressionStatement",
                  "src": "6577:64:38"
                }
              ]
            },
            "baseFunctions": [
              33053
            ],
            "documentation": {
              "id": 32596,
              "nodeType": "StructuredDocumentation",
              "src": "6328:174:38",
              "text": "@dev Cancel a committment. Called by the buyer. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32601,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32600,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6553:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "6553:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "6553:13:38"
              }
            ],
            "name": "cancel",
            "nameLocation": "6516:6:38",
            "parameters": {
              "id": 32599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32598,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6531:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32613,
                  "src": "6523:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32597,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6522:21:38"
            },
            "returnParameters": {
              "id": 32602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6567:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32631,
            "nodeType": "FunctionDefinition",
            "src": "6834:141:38",
            "nodes": [],
            "body": {
              "id": 32630,
              "nodeType": "Block",
              "src": "6894:81:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32625,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6944:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6948:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6944:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32627,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32616,
                        "src": "6956:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32622,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "6920:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32621,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "6904:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6904:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6937:6:38",
                      "memberName": "revoke",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32935,
                      "src": "6904:39:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6904:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32629,
                  "nodeType": "ExpressionStatement",
                  "src": "6904:64:38"
                }
              ]
            },
            "baseFunctions": [
              33058
            ],
            "documentation": {
              "id": 32614,
              "nodeType": "StructuredDocumentation",
              "src": "6654:175:38",
              "text": "@dev Revoke a committment. Called by the seller. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to revoke"
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32619,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32618,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6880:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "6880:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "6880:13:38"
              }
            ],
            "name": "revoke",
            "nameLocation": "6843:6:38",
            "parameters": {
              "id": 32617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32616,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6858:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32631,
                  "src": "6850:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6850:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6849:21:38"
            },
            "returnParameters": {
              "id": 32620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6894:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32649,
            "nodeType": "FunctionDefinition",
            "src": "7161:141:38",
            "nodes": [],
            "body": {
              "id": 32648,
              "nodeType": "Block",
              "src": "7221:81:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32643,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7271:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7275:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7271:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32645,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32634,
                        "src": "7283:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32640,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "7247:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32639,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "7231:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7231:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7264:6:38",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32942,
                      "src": "7231:39:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7231:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32647,
                  "nodeType": "ExpressionStatement",
                  "src": "7231:64:38"
                }
              ]
            },
            "baseFunctions": [
              33063
            ],
            "documentation": {
              "id": 32632,
              "nodeType": "StructuredDocumentation",
              "src": "6981:175:38",
              "text": "@dev Redeem a Voucher. Called by the buyer.  This signals to\n the seller that the buyer is ready for the asset.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32636,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7207:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "7207:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "7207:13:38"
              }
            ],
            "name": "redeem",
            "nameLocation": "7170:6:38",
            "parameters": {
              "id": 32635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32634,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7185:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32649,
                  "src": "7177:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:21:38"
            },
            "returnParameters": {
              "id": 32638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7221:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32667,
            "nodeType": "FunctionDefinition",
            "src": "7529:145:38",
            "nodes": [],
            "body": {
              "id": 32666,
              "nodeType": "Block",
              "src": "7591:83:38",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32661,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7643:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7647:6:38",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7643:10:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32663,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32652,
                        "src": "7655:11:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32658,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32283,
                            "src": "7617:15:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32657,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32987,
                          "src": "7601:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32987_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7601:32:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32987",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7634:8:38",
                      "memberName": "finalize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32949,
                      "src": "7601:41:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7601:66:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32665,
                  "nodeType": "ExpressionStatement",
                  "src": "7601:66:38"
                }
              ]
            },
            "baseFunctions": [
              33068
            ],
            "documentation": {
              "id": 32650,
              "nodeType": "StructuredDocumentation",
              "src": "7308:216:38",
              "text": "@dev Finalize the exchange. Usually means the buyer is happy.\n this will close out the exchange and release funds to the parties\n for withdrawal.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "05261aea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32654,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7577:13:38"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32298,
                  "src": "7577:13:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "7577:13:38"
              }
            ],
            "name": "finalize",
            "nameLocation": "7538:8:38",
            "parameters": {
              "id": 32653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32652,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7555:11:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 32667,
                  "src": "7547:19:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7547:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7546:21:38"
            },
            "returnParameters": {
              "id": 32656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7591:0:38"
            },
            "scope": 32668,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32278,
              "name": "Ownable",
              "nameLocations": [
                "781:7:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26840,
              "src": "781:7:38"
            },
            "id": 32279,
            "nodeType": "InheritanceSpecifier",
            "src": "781:7:38"
          },
          {
            "baseName": {
              "id": 32280,
              "name": "IBionetRouter",
              "nameLocations": [
                "790:13:38"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33079,
              "src": "790:13:38"
            },
            "id": 32281,
            "nodeType": "InheritanceSpecifier",
            "src": "790:13:38"
          }
        ],
        "canonicalName": "BionetRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32277,
          "nodeType": "StructuredDocumentation",
          "src": "539:217:38",
          "text": "@dev Main entry way to the protocol. Acts as a proxy.\n Primarily doing guard checks and forwarding the caller to\n the Exchange. Contracts such as BionetExchange will only\n allow calls from this contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32668,
          33079,
          26840,
          29783
        ],
        "name": "BionetRouter",
        "nameLocation": "765:12:38",
        "scope": 32669,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 38
}