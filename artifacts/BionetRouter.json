{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "commit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "_offer",
          "type": "tuple"
        }
      ],
      "name": "createOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getAvailableToWithdrawEscrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getEscrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "redeemBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "disputeBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finalizedDate",
              "type": "uint256"
            },
            {
              "internalType": "enum BionetTypes.ExchangeState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct BionetTypes.Exchange",
          "name": "exchange",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "getSellerDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchange",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "voidOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6117508061007e6000396000f3fe6080604052600436106101095760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f7146102ca578063c4d66de8146102dd578063db006a751461031a578063f2fde38b1461033a578063f4f98ad51461035a57600080fd5b80636374b11b1461024d578063715018a61461026d57806388106323146102825780638da5cb5b146102a257600080fd5b806333f5737c116100dc57806333f5737c146101aa5780633ccfd60b146101ca57806340e58ee5146101df5780634579268a146101ff5780634915907b1461022d57600080fd5b806305261aea1461010e5780630b9d58471461013057806314e7c9221461016757806320c5429b1461018a575b600080fd5b34801561011a57600080fd5b5061012e6101293660046110ac565b61036d565b005b34801561013c57600080fd5b5061015061014b3660046110ac565b6103fb565b60405161015e9291906110db565b60405180910390f35b34801561017357600080fd5b5061017c61047d565b60405190815260200161015e565b34801561019657600080fd5b5061012e6101a53660046110ac565b6104f0565b3480156101b657600080fd5b5061017c6101c5366004611180565b610544565b3480156101d657600080fd5b5061012e6105d8565b3480156101eb57600080fd5b5061012e6101fa3660046110ac565b610654565b34801561020b57600080fd5b5061021f61021a3660046110ac565b6106a8565b60405161015e929190611259565b34801561023957600080fd5b5061012e6102483660046110ac565b610758565b34801561025957600080fd5b5061017c610268366004611180565b6107ac565b34801561027957600080fd5b5061012e6107fd565b34801561028e57600080fd5b5061017c61029d3660046110ac565b610811565b3480156102ae57600080fd5b506000546040516001600160a01b03909116815260200161015e565b61017c6102d83660046113a7565b61081c565b3480156102e957600080fd5b5061012e6102f8366004611180565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b34801561032657600080fd5b5061012e6103353660046110ac565b610d44565b34801561034657600080fd5b5061012e610355366004611180565b610d98565b61017c6103683660046110ac565b610e11565b336103935760405162461bcd60e51b815260040161038a90611470565b60405180910390fd5b6001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103e057600080fd5b505af11580156103f4573d6000803e3d6000fd5b5050505050565b6000610405611056565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047391906114bb565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb919061155e565b905090565b3361050d5760405162461bcd60e51b815260040161038a90611470565b60015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d9906044016103c6565b6000336105635760405162461bcd60e51b815260040161038a90611470565b600154604051630cfd5cdf60e21b81526001600160a01b038481166004830152909116906333f5737c906024015b602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d2919061155e565b92915050565b336105f55760405162461bcd60e51b815260040161038a90611470565b6001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561063a57600080fd5b505af115801561064e573d6000803e3d6000fd5b50505050565b336106715760405162461bcd60e51b815260040161038a90611470565b6001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016103c6565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047391908101906115bc565b336107755760405162461bcd60e51b815260040161038a90611470565b6001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016103c6565b6000336107cb5760405162461bcd60e51b815260040161038a90611470565b600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401610591565b610805610ea7565b61080f6000610f01565b565b60006105d282610f51565b60003361083b5760405162461bcd60e51b815260040161038a90611470565b600061084a8360400151610f51565b9050803410156108a85760405162461bcd60e51b815260206004820152602360248201527f526f757465723a20496e73756666696369656e742073656c6c6572206465706f6044820152621cda5d60ea1b606482015260840161038a565b60208301516001600160a01b031633146109145760405162461bcd60e51b815260206004820152602760248201527f526f757465723a206f666665722e73656c6c6572206d757374206265207468656044820152661031b0b63632b960c91b606482015260840161038a565b60008360600151116109605760405162461bcd60e51b81526020600482015260156024820152740526f757465723a206f6666657220717479203e203605c1b604482015260640161038a565b60808301516001600160a01b03166109e05760405162461bcd60e51b815260206004820152603760248201527f526f757465723a20417373657420746f6b656e206d757374206861766520612060448201527f76616c6964206164647265737320286e6f742030783029000000000000000000606482015260840161038a565b60e083015115610a3d5760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20746865206f666665722063616e6e6f7420626520766f6964604482015261195960f21b606482015260840161038a565b6000610a548460800151636cdb3d1360e11b610f5e565b905080610ab85760405162461bcd60e51b815260206004820152602c60248201527f526f757465723a20546865206173736574206973206e6f7420616e204552433160448201526b0c4d4d4818dbdb9d1c9858dd60a21b606482015260840161038a565b608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b32919061155e565b90508460600151811015610bbe5760405162461bcd60e51b815260206004820152604760248201527f526f757465723a205468652073656c6c657220646f6573206e6f74206f776e2060448201527f656e6f756768204552433131353520746f6b656e7320666f7220746865206f666064820152666665722071747960c81b608482015260a40161038a565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c42919061169b565b905080610cc55760405162461bcd60e51b815260206004820152604560248201527f526f757465723a205468652065786368616e6765206d7573742062652061707060448201527f726f76656420746f207472616e7366657220796f7572204552433131353520746064820152646f6b656e7360d81b608482015260a40161038a565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610cf7908a906004016116b8565b60206040518083038185885af1158015610d15573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d3a919061155e565b9695505050505050565b33610d615760405162461bcd60e51b815260040161038a90611470565b6001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016103c6565b610da0610ea7565b6001600160a01b038116610e055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161038a565b610e0e81610f01565b50565b600033610e305760405162461bcd60e51b815260040161038a90611470565b6001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610e82573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105d2919061155e565b6000546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105d28260c8610f81565b6000610f6983610f9a565b8015610f7a5750610f7a8383610fcd565b9392505050565b6000612710610f9083856116cb565b610f7a91906116f8565b6000610fad826301ffc9a760e01b610fcd565b80156105d25750610fc6826001600160e01b0319610fcd565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561103f575060208210155b801561104b5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600060058111156110a7576110a76110c5565b905290565b6000602082840312156110be57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c08301516006811061114d57634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b6001600160a01b0381168114610e0e57600080fd5b803561117b8161115b565b919050565b60006020828403121561119257600080fd5b8135610f7a8161115b565b60005b838110156111b85781810151838201526020016111a0565b50506000910152565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c0860152805180838701526101209250611231818488016020850161119d565b60e0850151915061124660e087018315159052565b601f01601f191694909401019392505050565b821515815260406020820152600061127460408301846111c1565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156112b6576112b661127c565b60405290565b60405160e0810167ffffffffffffffff811182821017156112b6576112b661127c565b604051601f8201601f1916810167ffffffffffffffff811182821017156113085761130861127c565b604052919050565b600067ffffffffffffffff82111561132a5761132a61127c565b50601f01601f191660200190565b600082601f83011261134957600080fd5b813561135c61135782611310565b6112df565b81815284602083860101111561137157600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610e0e57600080fd5b803561117b8161138e565b6000602082840312156113b957600080fd5b813567ffffffffffffffff808211156113d157600080fd5b9083019061010082860312156113e657600080fd5b6113ee611292565b823581526113fe60208401611170565b6020820152604083013560408201526060830135606082015261142360808401611170565b608082015260a083013560a082015260c08301358281111561144457600080fd5b61145087828601611338565b60c08301525061146260e0840161139c565b60e082015295945050505050565b6020808252818101527f526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564604082015260600190565b805161117b8161138e565b805161117b8161115b565b6000808284036101008112156114d057600080fd5b83516114db8161138e565b925060e0601f19820112156114ef57600080fd5b506114f86112bc565b602084015181526040840151602082015260608401516115178161115b565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e08401516006811061154e57600080fd5b60c0820152919491935090915050565b60006020828403121561157057600080fd5b5051919050565b600082601f83011261158857600080fd5b815161159661135782611310565b8181528460208386010111156115ab57600080fd5b61127482602083016020870161119d565b600080604083850312156115cf57600080fd5b82516115da8161138e565b602084015190925067ffffffffffffffff808211156115f857600080fd5b90840190610100828703121561160d57600080fd5b611615611292565b82518152611625602084016114b0565b6020820152604083015160408201526060830151606082015261164a608084016114b0565b608082015260a083015160a082015260c08301518281111561166b57600080fd5b61167788828601611577565b60c08301525061168960e084016114a5565b60e08201528093505050509250929050565b6000602082840312156116ad57600080fd5b8151610f7a8161138e565b602081526000610f7a60208301846111c1565b60008160001904831182151516156116f357634e487b7160e01b600052601160045260246000fd5b500290565b60008261171557634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208bdfa2c7dc9ee5a3759dbb06323d0d8dc1b36293e56f2bfcdcc3427535017f9b64736f6c63430008100033",
    "sourceMap": "756:7335:37:-:0;;;;;;;;;;;;-1:-1:-1;936:32:16;719:10:28;936:18:16;:32::i;:::-;756:7335:37;;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;756:7335:37:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101095760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f7146102ca578063c4d66de8146102dd578063db006a751461031a578063f2fde38b1461033a578063f4f98ad51461035a57600080fd5b80636374b11b1461024d578063715018a61461026d57806388106323146102825780638da5cb5b146102a257600080fd5b806333f5737c116100dc57806333f5737c146101aa5780633ccfd60b146101ca57806340e58ee5146101df5780634579268a146101ff5780634915907b1461022d57600080fd5b806305261aea1461010e5780630b9d58471461013057806314e7c9221461016757806320c5429b1461018a575b600080fd5b34801561011a57600080fd5b5061012e6101293660046110ac565b61036d565b005b34801561013c57600080fd5b5061015061014b3660046110ac565b6103fb565b60405161015e9291906110db565b60405180910390f35b34801561017357600080fd5b5061017c61047d565b60405190815260200161015e565b34801561019657600080fd5b5061012e6101a53660046110ac565b6104f0565b3480156101b657600080fd5b5061017c6101c5366004611180565b610544565b3480156101d657600080fd5b5061012e6105d8565b3480156101eb57600080fd5b5061012e6101fa3660046110ac565b610654565b34801561020b57600080fd5b5061021f61021a3660046110ac565b6106a8565b60405161015e929190611259565b34801561023957600080fd5b5061012e6102483660046110ac565b610758565b34801561025957600080fd5b5061017c610268366004611180565b6107ac565b34801561027957600080fd5b5061012e6107fd565b34801561028e57600080fd5b5061017c61029d3660046110ac565b610811565b3480156102ae57600080fd5b506000546040516001600160a01b03909116815260200161015e565b61017c6102d83660046113a7565b61081c565b3480156102e957600080fd5b5061012e6102f8366004611180565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b34801561032657600080fd5b5061012e6103353660046110ac565b610d44565b34801561034657600080fd5b5061012e610355366004611180565b610d98565b61017c6103683660046110ac565b610e11565b336103935760405162461bcd60e51b815260040161038a90611470565b60405180910390fd5b6001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103e057600080fd5b505af11580156103f4573d6000803e3d6000fd5b5050505050565b6000610405611056565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa15801561044f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047391906114bb565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa1580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb919061155e565b905090565b3361050d5760405162461bcd60e51b815260040161038a90611470565b60015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d9906044016103c6565b6000336105635760405162461bcd60e51b815260040161038a90611470565b600154604051630cfd5cdf60e21b81526001600160a01b038481166004830152909116906333f5737c906024015b602060405180830381865afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d2919061155e565b92915050565b336105f55760405162461bcd60e51b815260040161038a90611470565b6001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561063a57600080fd5b505af115801561064e573d6000803e3d6000fd5b50505050565b336106715760405162461bcd60e51b815260040161038a90611470565b6001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016103c6565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610730573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261047391908101906115bc565b336107755760405162461bcd60e51b815260040161038a90611470565b6001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016103c6565b6000336107cb5760405162461bcd60e51b815260040161038a90611470565b600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401610591565b610805610ea7565b61080f6000610f01565b565b60006105d282610f51565b60003361083b5760405162461bcd60e51b815260040161038a90611470565b600061084a8360400151610f51565b9050803410156108a85760405162461bcd60e51b815260206004820152602360248201527f526f757465723a20496e73756666696369656e742073656c6c6572206465706f6044820152621cda5d60ea1b606482015260840161038a565b60208301516001600160a01b031633146109145760405162461bcd60e51b815260206004820152602760248201527f526f757465723a206f666665722e73656c6c6572206d757374206265207468656044820152661031b0b63632b960c91b606482015260840161038a565b60008360600151116109605760405162461bcd60e51b81526020600482015260156024820152740526f757465723a206f6666657220717479203e203605c1b604482015260640161038a565b60808301516001600160a01b03166109e05760405162461bcd60e51b815260206004820152603760248201527f526f757465723a20417373657420746f6b656e206d757374206861766520612060448201527f76616c6964206164647265737320286e6f742030783029000000000000000000606482015260840161038a565b60e083015115610a3d5760405162461bcd60e51b815260206004820152602260248201527f526f757465723a20746865206f666665722063616e6e6f7420626520766f6964604482015261195960f21b606482015260840161038a565b6000610a548460800151636cdb3d1360e11b610f5e565b905080610ab85760405162461bcd60e51b815260206004820152602c60248201527f526f757465723a20546865206173736574206973206e6f7420616e204552433160448201526b0c4d4d4818dbdb9d1c9858dd60a21b606482015260840161038a565b608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610b0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b32919061155e565b90508460600151811015610bbe5760405162461bcd60e51b815260206004820152604760248201527f526f757465723a205468652073656c6c657220646f6573206e6f74206f776e2060448201527f656e6f756768204552433131353520746f6b656e7320666f7220746865206f666064820152666665722071747960c81b608482015260a40161038a565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c42919061169b565b905080610cc55760405162461bcd60e51b815260206004820152604560248201527f526f757465723a205468652065786368616e6765206d7573742062652061707060448201527f726f76656420746f207472616e7366657220796f7572204552433131353520746064820152646f6b656e7360d81b608482015260a40161038a565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610cf7908a906004016116b8565b60206040518083038185885af1158015610d15573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d3a919061155e565b9695505050505050565b33610d615760405162461bcd60e51b815260040161038a90611470565b6001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016103c6565b610da0610ea7565b6001600160a01b038116610e055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161038a565b610e0e81610f01565b50565b600033610e305760405162461bcd60e51b815260040161038a90611470565b6001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610e82573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105d2919061155e565b6000546001600160a01b0316331461080f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161038a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006105d28260c8610f81565b6000610f6983610f9a565b8015610f7a5750610f7a8383610fcd565b9392505050565b6000612710610f9083856116cb565b610f7a91906116f8565b6000610fad826301ffc9a760e01b610fcd565b80156105d25750610fc6826001600160e01b0319610fcd565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d9150600051905082801561103f575060208210155b801561104b5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600060058111156110a7576110a76110c5565b905290565b6000602082840312156110be57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c08301516006811061114d57634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b6001600160a01b0381168114610e0e57600080fd5b803561117b8161115b565b919050565b60006020828403121561119257600080fd5b8135610f7a8161115b565b60005b838110156111b85781810151838201526020016111a0565b50506000910152565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c0860152805180838701526101209250611231818488016020850161119d565b60e0850151915061124660e087018315159052565b601f01601f191694909401019392505050565b821515815260406020820152600061127460408301846111c1565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156112b6576112b661127c565b60405290565b60405160e0810167ffffffffffffffff811182821017156112b6576112b661127c565b604051601f8201601f1916810167ffffffffffffffff811182821017156113085761130861127c565b604052919050565b600067ffffffffffffffff82111561132a5761132a61127c565b50601f01601f191660200190565b600082601f83011261134957600080fd5b813561135c61135782611310565b6112df565b81815284602083860101111561137157600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610e0e57600080fd5b803561117b8161138e565b6000602082840312156113b957600080fd5b813567ffffffffffffffff808211156113d157600080fd5b9083019061010082860312156113e657600080fd5b6113ee611292565b823581526113fe60208401611170565b6020820152604083013560408201526060830135606082015261142360808401611170565b608082015260a083013560a082015260c08301358281111561144457600080fd5b61145087828601611338565b60c08301525061146260e0840161139c565b60e082015295945050505050565b6020808252818101527f526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564604082015260600190565b805161117b8161138e565b805161117b8161115b565b6000808284036101008112156114d057600080fd5b83516114db8161138e565b925060e0601f19820112156114ef57600080fd5b506114f86112bc565b602084015181526040840151602082015260608401516115178161115b565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e08401516006811061154e57600080fd5b60c0820152919491935090915050565b60006020828403121561157057600080fd5b5051919050565b600082601f83011261158857600080fd5b815161159661135782611310565b8181528460208386010111156115ab57600080fd5b61127482602083016020870161119d565b600080604083850312156115cf57600080fd5b82516115da8161138e565b602084015190925067ffffffffffffffff808211156115f857600080fd5b90840190610100828703121561160d57600080fd5b611615611292565b82518152611625602084016114b0565b6020820152604083015160408201526060830151606082015261164a608084016114b0565b608082015260a083015160a082015260c08301518281111561166b57600080fd5b61167788828601611577565b60c08301525061168960e084016114a5565b60e08201528093505050509250929050565b6000602082840312156116ad57600080fd5b8151610f7a8161138e565b602081526000610f7a60208301846111c1565b60008160001904831182151516156116f357634e487b7160e01b600052601160045260246000fd5b500290565b60008261171557634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212208bdfa2c7dc9ee5a3759dbb06323d0d8dc1b36293e56f2bfcdcc3427535017f9b64736f6c63430008100033",
    "sourceMap": "756:7335:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7944:145;;;;;;;;;;-1:-1:-1;7944:145:37;;;;;:::i;:::-;;:::i;:::-;;2422:261;;;;;;;;;;-1:-1:-1;2422:261:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3494:142;;;;;;;;;;;;;:::i;:::-;;;1485:25:53;;;1473:2;1458:18;3494:142:37;1339:177:53;7249:141:37;;;;;;;;;;-1:-1:-1;7249:141:37;;;;;:::i;:::-;;:::i;1989:250::-;;;;;;;;;;-1:-1:-1;1989:250:37;;;;;:::i;:::-;;:::i;1365:113::-;;;;;;;;;;;;;:::i;6922:141::-;;;;;;;;;;-1:-1:-1;6922:141:37;;;;;:::i;:::-;;:::i;2851:218::-;;;;;;;;;;-1:-1:-1;2851:218:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;6081:141::-;;;;;;;;;;-1:-1:-1;6081:141:37;;;;;:::i;:::-;;:::i;1612:212::-;;;;;;;;;;-1:-1:-1;1612:212:37;;;;;:::i;:::-;;:::i;1831:101:16:-;;;;;;;;;;;;;:::i;3222:168:37:-;;;;;;;;;;-1:-1:-1;3222:168:37;;;;;:::i;:::-;;:::i;1201:85:16:-;;;;;;;;;;-1:-1:-1;1247:7:16;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:16;;;3751:51:53;;3739:2;3724:18;1201:85:16;3605:203:53;3875:2000:37;;;;;;:::i;:::-;;:::i;1139:92::-;;;;;;;;;;-1:-1:-1;1139:92:37;;;;;:::i;:::-;1197:15;:27;;-1:-1:-1;;;;;;1197:27:37;-1:-1:-1;;;;;1197:27:37;;;;;;;;;;1139:92;7576:141;;;;;;;;;;-1:-1:-1;7576:141:37;;;;;:::i;:::-;;:::i;2081:198:16:-;;;;;;;;;;-1:-1:-1;2081:198:16;;;;;:::i;:::-;;:::i;6464:273:37:-;;;;;;:::i;:::-;;:::i;7944:145::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;;;;;;;;;8032:15:::1;::::0;8016:66:::1;::::0;-1:-1:-1;;;8016:66:37;;8058:10:::1;8016:66;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;8032:15:37;;::::1;::::0;8016:41:::1;::::0;7212:18:53;;8016:66:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7944:145:::0;:::o;2422:261::-;2511:11;2524:36;;:::i;:::-;2613:15;;2597:79;;-1:-1:-1;;;2597:79:37;;;;;1485:25:53;;;-1:-1:-1;;;;;2613:15:37;;;;2597:44;;1458:18:53;;2597:79:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2576:100;;;;-1:-1:-1;2422:261:37;-1:-1:-1;;2422:261:37:o;3494:142::-;3592:15;;3576:53;;;-1:-1:-1;;;3576:53:37;;;;3547:11;;-1:-1:-1;;;;;3592:15:37;;3576:51;;:53;;;;;;;;;;;;;;3592:15;3576:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3570:59;;3494:142;:::o;7249:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;7335:15:::1;::::0;7319:64:::1;::::0;-1:-1:-1;;;7319:64:37;;7359:10:::1;7319:64;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;7335:15:37;;::::1;::::0;7319:39:::1;::::0;7212:18:53;;7319:64:37::1;7065:274:53::0;1989:250:37;2121:11;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;2170:15:::1;::::0;2154:78:::1;::::0;-1:-1:-1;;;2154:78:37;;-1:-1:-1;;;;;3769:32:53;;;2154:78:37::1;::::0;::::1;3751:51:53::0;2170:15:37;;::::1;::::0;2154:68:::1;::::0;3724:18:53;;2154:78:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2148:84:::0;1989:250;-1:-1:-1;;1989:250:37:o;1365:113::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;1434:15:::1;::::0;1418:53:::1;::::0;-1:-1:-1;;;1418:53:37;;1460:10:::1;1418:53;::::0;::::1;3751:51:53::0;-1:-1:-1;;;;;1434:15:37;;::::1;::::0;1418:41:::1;::::0;3724:18:53;;1418:53:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1365:113::o:0;6922:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;7008:15:::1;::::0;6992:64:::1;::::0;-1:-1:-1;;;6992:64:37;;7032:10:::1;6992:64;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;7008:15:37;;::::1;::::0;6992:39:::1;::::0;7212:18:53;;6992:64:37::1;7065:274:53::0;2851:218:37;-1:-1:-1;;;;;;;;2934:11:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3027:15:37;;3011:51;;-1:-1:-1;;;3011:51:37;;;;;1485:25:53;;;-1:-1:-1;;;;;3027:15:37;;;;3011:41;;1458:18:53;;3011:51:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3011:51:37;;;;;;;;;;;;:::i;6081:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;6167:15:::1;::::0;6151:64:::1;::::0;-1:-1:-1;;;6151:64:37;;6194:10:::1;6151:64;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;6167:15:37;;::::1;::::0;6151:42:::1;::::0;7212:18:53;;6151:64:37::1;7065:274:53::0;1612:212:37;1725:11;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;1774:15:::1;::::0;1758:59:::1;::::0;-1:-1:-1;;;1758:59:37;;-1:-1:-1;;;;;3769:32:53;;;1758:59:37::1;::::0;::::1;3751:51:53::0;1774:15:37;;::::1;::::0;1758:49:::1;::::0;3724:18:53;;1758:59:37::1;3605:203:53::0;1831:101:16;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;3222:168:37:-;3311:11;3344:39;3376:6;3344:31;:39::i;3875:2000::-;4001:15;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;4075:15:::1;4093:45;4125:6;:12;;;4093:31;:45::i;:::-;4075:63;;4169:7;4156:9;:20;;4148:68;;;::::0;-1:-1:-1;;;4148:68:37;;10680:2:53;4148:68:37::1;::::0;::::1;10662:21:53::0;10719:2;10699:18;;;10692:30;10758:34;10738:18;;;10731:62;-1:-1:-1;;;10809:18:53;;;10802:33;10852:19;;4148:68:37::1;10478:399:53::0;4148:68:37::1;4290:13;::::0;::::1;::::0;-1:-1:-1;;;;;4290:27:37::1;4307:10;4290:27;4269:113;;;::::0;-1:-1:-1;;;4269:113:37;;11084:2:53;4269:113:37::1;::::0;::::1;11066:21:53::0;11123:2;11103:18;;;11096:30;11162:34;11142:18;;;11135:62;-1:-1:-1;;;11213:18:53;;;11206:37;11260:19;;4269:113:37::1;10882:403:53::0;4269:113:37::1;4427:1;4400:6;:24;;;:28;4392:62;;;::::0;-1:-1:-1;;;4392:62:37;;11492:2:53;4392:62:37::1;::::0;::::1;11474:21:53::0;11531:2;11511:18;;;11504:30;-1:-1:-1;;;11550:18:53;;;11543:51;11611:18;;4392:62:37::1;11290:345:53::0;4392:62:37::1;4485:17;::::0;::::1;::::0;-1:-1:-1;;;;;4485:33:37::1;4464:135;;;::::0;-1:-1:-1;;;4464:135:37;;11842:2:53;4464:135:37::1;::::0;::::1;11824:21:53::0;11881:2;11861:18;;;11854:30;11920:34;11900:18;;;11893:62;11991:25;11971:18;;;11964:53;12034:19;;4464:135:37::1;11640:419:53::0;4464:135:37::1;4617:13;::::0;::::1;::::0;:22:::1;4609:69;;;::::0;-1:-1:-1;;;4609:69:37;;12266:2:53;4609:69:37::1;::::0;::::1;12248:21:53::0;12305:2;12285:18;;;12278:30;12344:34;12324:18;;;12317:62;-1:-1:-1;;;12395:18:53;;;12388:32;12437:19;;4609:69:37::1;12064:398:53::0;4609:69:37::1;4744:17;4764:112;4809:6;:17;;;-1:-1:-1::0;;;4764:31:37::1;:112::i;:::-;4744:132;;4894:12;4886:69;;;::::0;-1:-1:-1;;;4886:69:37;;12669:2:53;4886:69:37::1;::::0;::::1;12651:21:53::0;12708:2;12688:18;;;12681:30;12747:34;12727:18;;;12720:62;-1:-1:-1;;;12798:18:53;;;12791:42;12850:19;;4886:69:37::1;12467:408:53::0;4886:69:37::1;5082:17;::::0;::::1;::::0;5148:19:::1;::::0;::::1;::::0;5073:104:::1;::::0;-1:-1:-1;;;5073:104:37;;5124:10:::1;5073:104;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;;5048:22:37::1;::::0;-1:-1:-1;;;;;5073:37:37::1;::::0;::::1;::::0;7212:18:53;;5073:104:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5048:129;;5226:6;:24;;;5208:14;:42;;5187:160;;;::::0;-1:-1:-1;;;5187:160:37;;13082:2:53;5187:160:37::1;::::0;::::1;13064:21:53::0;13121:2;13101:18;;;13094:30;13160:34;13140:18;;;13133:62;13231:34;13211:18;;;13204:62;-1:-1:-1;;;13282:19:53;;;13275:38;13330:19;;5187:160:37::1;12880:475:53::0;5187:160:37::1;5460:17;::::0;::::1;::::0;5509:13:::1;::::0;::::1;::::0;5536:15:::1;::::0;5451:110:::1;::::0;-1:-1:-1;;;5451:110:37;;-1:-1:-1;;;;;13590:15:53;;;5451:110:37::1;::::0;::::1;13572:34:53::0;5536:15:37;;::::1;13622:18:53::0;;;13615:43;5424:24:37::1;::::0;5451:44;;;::::1;::::0;::::1;::::0;13507:18:53;;5451:110:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5424:137;;5592:19;5571:135;;;::::0;-1:-1:-1;;;5571:135:37;;14121:2:53;5571:135:37::1;::::0;::::1;14103:21:53::0;14160:2;14140:18;;;14133:30;14199:34;14179:18;;;14172:62;14270:34;14250:18;;;14243:62;-1:-1:-1;;;14321:19:53;;;14314:36;14367:19;;5571:135:37::1;13919:473:53::0;5571:135:37::1;5792:15;::::0;5776:92:::1;::::0;-1:-1:-1;;;5776:92:37;;-1:-1:-1;;;;;5792:15:37;;::::1;::::0;5776:44:::1;::::0;5841:9:::1;::::0;5776:92:::1;::::0;5861:6;;5776:92:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5766:102:::0;3875:2000;-1:-1:-1;;;;;;3875:2000:37:o;7576:141::-;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;7662:15:::1;::::0;7646:64:::1;::::0;-1:-1:-1;;;7646:64:37;;7686:10:::1;7646:64;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;7662:15:37;;::::1;::::0;7646:39:::1;::::0;7212:18:53;;7646:64:37::1;7065:274:53::0;2081:198:16;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:16;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:16;;14858:2:53;2161:73:16::1;::::0;::::1;14840:21:53::0;14897:2;14877:18;;;14870:30;14936:34;14916:18;;;14909:62;-1:-1:-1;;;14987:18:53;;;14980:36;15033:19;;2161:73:16::1;14656:402:53::0;2161:73:16::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;6464:273:37:-;6570:18;950:10;942:71;;;;-1:-1:-1;;;942:71:37;;;;;;;:::i;:::-;6633:15:::1;::::0;6617:113:::1;::::0;-1:-1:-1;;;6617:113:37;;6688:10:::1;6617:113;::::0;::::1;7239:51:53::0;7306:18;;;7299:34;;;-1:-1:-1;;;;;6633:15:37;;::::1;::::0;6617:39:::1;::::0;6664:9:::1;::::0;7212:18:53;;6617:113:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:16:-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:16;719:10:28;1422:23:16;1414:68;;;;-1:-1:-1;;;1414:68:16;;15265:2:53;1414:68:16;;;15247:21:53;;;15284:18;;;15277:30;15343:34;15323:18;;;15316:62;15395:18;;1414:68:16;15063:356:53;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1322:180:44:-;1417:14;1456:39;1469:6;333:3:35;1456:12:44;:39::i;1349:282:31:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:31:o;465:174:44:-;571:7;626:6;602:20;611:11;602:6;:20;:::i;:::-;601:31;;;;:::i;704:427:31:-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:31;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:31;1093:7;-1:-1:-1;;;;;;1060:32:31;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:31:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;16078:33:53;;4433:71:31;;;;16060:52:53;;;;4433:71:31;;;;;;;;;;16033:18:53;;;;4433:71:31;;;;;;;;;-1:-1:-1;;;;;4433:71:31;-1:-1:-1;;;4433:71:31;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:31:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:180:53:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:53;;14:180;-1:-1:-1;14:180:53:o;295:127::-;356:10;351:3;347:20;344:1;337:31;387:4;384:1;377:15;411:4;408:1;401:15;427:907;595:4;637:3;626:9;622:19;614:27;;682:6;675:14;668:22;657:9;650:41;733:6;727:13;722:2;711:9;707:18;700:41;795:2;787:6;783:15;777:22;772:2;761:9;757:18;750:50;881:1;877;872:3;868:11;864:19;858:2;850:6;846:15;840:22;836:48;831:2;820:9;816:18;809:76;940:2;932:6;928:15;922:22;916:3;905:9;901:19;894:51;1000:3;992:6;988:16;982:23;976:3;965:9;961:19;954:52;1061:3;1053:6;1049:16;1043:23;1037:3;1026:9;1022:19;1015:52;1114:3;1106:6;1102:16;1096:23;1155:1;1141:12;1138:19;1128:150;;1200:10;1195:3;1191:20;1188:1;1181:31;1235:4;1232:1;1225:15;1263:4;1260:1;1253:15;1128:150;1315:12;1309:3;1298:9;1294:19;1287:41;;427:907;;;;;:::o;1521:131::-;-1:-1:-1;;;;;1596:31:53;;1586:42;;1576:70;;1642:1;1639;1632:12;1657:134;1725:20;;1754:31;1725:20;1754:31;:::i;:::-;1657:134;;;:::o;1796:247::-;1855:6;1908:2;1896:9;1887:7;1883:23;1879:32;1876:52;;;1924:1;1921;1914:12;1876:52;1963:9;1950:23;1982:31;2007:5;1982:31;:::i;2048:250::-;2133:1;2143:113;2157:6;2154:1;2151:13;2143:113;;;2233:11;;;2227:18;2214:11;;;2207:39;2179:2;2172:10;2143:113;;;-1:-1:-1;;2290:1:53;2272:16;;2265:27;2048:250::o;2303:957::-;2351:3;2379:6;2412:5;2406:12;2401:3;2394:25;2465:4;2458:5;2454:16;2448:23;2507:1;2503;2498:3;2494:11;2490:19;2559:2;2545:12;2541:21;2534:4;2529:3;2525:14;2518:45;2612:4;2605:5;2601:16;2595:23;2588:4;2583:3;2579:14;2572:47;2668:4;2661:5;2657:16;2651:23;2644:4;2639:3;2635:14;2628:47;2736:2;2728:4;2721:5;2717:16;2711:23;2707:32;2700:4;2695:3;2691:14;2684:56;;;2789:4;2782:5;2778:16;2772:23;2765:4;2760:3;2756:14;2749:47;2844:4;2837:5;2833:16;2827:23;2882:2;2875:4;2870:3;2866:14;2859:26;2914:14;2908:21;2959:6;2954:2;2949:3;2945:12;2938:28;2985:3;2975:13;;2997:83;3073:6;3068:2;3063:3;3059:12;3052:4;3036:14;3032:25;2997:83;:::i;:::-;3128:4;3121:5;3117:16;3111:23;3089:45;;3143:47;3184:4;3179:3;3175:14;3159;269:13;262:21;250:34;;199:91;3143:47;3244:2;3223:15;-1:-1:-1;;3219:29:53;3210:39;;;;3206:48;;2303:957;-1:-1:-1;;;2303:957:53:o;3265:335::-;3478:6;3471:14;3464:22;3453:9;3446:41;3523:2;3518;3507:9;3503:18;3496:30;3427:4;3543:51;3590:2;3579:9;3575:18;3567:6;3543:51;:::i;:::-;3535:59;3265:335;-1:-1:-1;;;;3265:335:53:o;3813:127::-;3874:10;3869:3;3865:20;3862:1;3855:31;3905:4;3902:1;3895:15;3929:4;3926:1;3919:15;3945:255;4017:2;4011:9;4059:6;4047:19;;4096:18;4081:34;;4117:22;;;4078:62;4075:88;;;4143:18;;:::i;:::-;4179:2;4172:22;3945:255;:::o;4205:253::-;4277:2;4271:9;4319:4;4307:17;;4354:18;4339:34;;4375:22;;;4336:62;4333:88;;;4401:18;;:::i;4463:275::-;4534:2;4528:9;4599:2;4580:13;;-1:-1:-1;;4576:27:53;4564:40;;4634:18;4619:34;;4655:22;;;4616:62;4613:88;;;4681:18;;:::i;:::-;4717:2;4710:22;4463:275;;-1:-1:-1;4463:275:53:o;4743:187::-;4792:4;4825:18;4817:6;4814:30;4811:56;;;4847:18;;:::i;:::-;-1:-1:-1;4913:2:53;4892:15;-1:-1:-1;;4888:29:53;4919:4;4884:40;;4743:187::o;4935:464::-;4978:5;5031:3;5024:4;5016:6;5012:17;5008:27;4998:55;;5049:1;5046;5039:12;4998:55;5085:6;5072:20;5116:49;5132:32;5161:2;5132:32;:::i;:::-;5116:49;:::i;:::-;5190:2;5181:7;5174:19;5236:3;5229:4;5224:2;5216:6;5212:15;5208:26;5205:35;5202:55;;;5253:1;5250;5243:12;5202:55;5318:2;5311:4;5303:6;5299:17;5292:4;5283:7;5279:18;5266:55;5366:1;5341:16;;;5359:4;5337:27;5330:38;;;;5345:7;4935:464;-1:-1:-1;;;4935:464:53:o;5404:118::-;5490:5;5483:13;5476:21;5469:5;5466:32;5456:60;;5512:1;5509;5502:12;5527:128;5592:20;;5621:28;5592:20;5621:28;:::i;5660:1039::-;5743:6;5796:2;5784:9;5775:7;5771:23;5767:32;5764:52;;;5812:1;5809;5802:12;5764:52;5852:9;5839:23;5881:18;5922:2;5914:6;5911:14;5908:34;;;5938:1;5935;5928:12;5908:34;5961:22;;;;6017:6;5999:16;;;5995:29;5992:49;;;6037:1;6034;6027:12;5992:49;6063:22;;:::i;:::-;6121:2;6108:16;6101:5;6094:31;6157;6184:2;6180;6176:11;6157:31;:::i;:::-;6152:2;6145:5;6141:14;6134:55;6242:2;6238;6234:11;6221:25;6216:2;6209:5;6205:14;6198:49;6300:2;6296;6292:11;6279:25;6274:2;6267:5;6263:14;6256:49;6338:32;6365:3;6361:2;6357:12;6338:32;:::i;:::-;6332:3;6325:5;6321:15;6314:57;6425:3;6421:2;6417:12;6404:26;6398:3;6391:5;6387:15;6380:51;6477:3;6473:2;6469:12;6456:26;6507:2;6497:8;6494:16;6491:36;;;6523:1;6520;6513:12;6491:36;6560:45;6597:7;6586:8;6582:2;6578:17;6560:45;:::i;:::-;6554:3;6547:5;6543:15;6536:70;;6639:29;6663:3;6659:2;6655:12;6639:29;:::i;:::-;6633:3;6622:15;;6615:54;6626:5;5660:1039;-1:-1:-1;;;;;5660:1039:53:o;6704:356::-;6906:2;6888:21;;;6925:18;;;6918:30;6984:34;6979:2;6964:18;;6957:62;7051:2;7036:18;;6704:356::o;7344:132::-;7420:13;;7442:28;7420:13;7442:28;:::i;7481:138::-;7560:13;;7582:31;7560:13;7582:31;:::i;7624:1013::-;7727:6;7735;7779:9;7770:7;7766:23;7809:3;7805:2;7801:12;7798:32;;;7826:1;7823;7816:12;7798:32;7858:9;7852:16;7877:28;7899:5;7877:28;:::i;:::-;7924:5;-1:-1:-1;7963:4:53;-1:-1:-1;;7945:16:53;;7941:27;7938:47;;;7981:1;7978;7971:12;7938:47;;8009:22;;:::i;:::-;8077:2;8066:9;8062:18;8056:25;8047:7;8040:42;8137:2;8126:9;8122:18;8116:25;8111:2;8102:7;8098:16;8091:51;8187:2;8176:9;8172:18;8166:25;8200:33;8225:7;8200:33;:::i;:::-;8267:7;8262:2;8253:7;8249:16;8242:33;;8330:3;8319:9;8315:19;8309:26;8304:2;8295:7;8291:16;8284:52;8392:3;8381:9;8377:19;8371:26;8365:3;8356:7;8352:17;8345:53;8454:3;8443:9;8439:19;8433:26;8427:3;8418:7;8414:17;8407:53;8505:4;8494:9;8490:20;8484:27;8542:1;8533:7;8530:14;8520:42;;8558:1;8555;8548:12;8520:42;8591:3;8578:17;;8571:34;7624:1013;;8582:7;;-1:-1:-1;7624:1013:53;;-1:-1:-1;;7624:1013:53:o;8642:184::-;8712:6;8765:2;8753:9;8744:7;8740:23;8736:32;8733:52;;;8781:1;8778;8771:12;8733:52;-1:-1:-1;8804:16:53;;8642:184;-1:-1:-1;8642:184:53:o;8831:443::-;8885:5;8938:3;8931:4;8923:6;8919:17;8915:27;8905:55;;8956:1;8953;8946:12;8905:55;8985:6;8979:13;9016:49;9032:32;9061:2;9032:32;:::i;9016:49::-;9090:2;9081:7;9074:19;9136:3;9129:4;9124:2;9116:6;9112:15;9108:26;9105:35;9102:55;;;9153:1;9150;9143:12;9102:55;9166:77;9240:2;9233:4;9224:7;9220:18;9213:4;9205:6;9201:17;9166:77;:::i;9279:1194::-;9379:6;9387;9440:2;9428:9;9419:7;9415:23;9411:32;9408:52;;;9456:1;9453;9446:12;9408:52;9488:9;9482:16;9507:28;9529:5;9507:28;:::i;:::-;9603:2;9588:18;;9582:25;9554:5;;-1:-1:-1;9626:18:53;9656:14;;;9653:34;;;9683:1;9680;9673:12;9653:34;9706:22;;;;9762:6;9744:16;;;9740:29;9737:49;;;9782:1;9779;9772:12;9737:49;9810:22;;:::i;:::-;9863:2;9857:9;9848:7;9841:26;9901:42;9939:2;9935;9931:11;9901:42;:::i;:::-;9896:2;9887:7;9883:16;9876:68;9992:2;9988;9984:11;9978:18;9973:2;9964:7;9960:16;9953:44;10045:2;10041;10037:11;10031:18;10026:2;10017:7;10013:16;10006:44;10085:43;10123:3;10119:2;10115:12;10085:43;:::i;:::-;10079:3;10070:7;10066:17;10059:70;10178:3;10174:2;10170:12;10164:19;10158:3;10149:7;10145:17;10138:46;10223:3;10219:2;10215:12;10209:19;10253:2;10243:8;10240:16;10237:36;;;10269:1;10266;10259:12;10237:36;10308:56;10356:7;10345:8;10341:2;10337:17;10308:56;:::i;:::-;10302:3;10293:7;10289:17;10282:83;;10400:40;10435:3;10431:2;10427:12;10400:40;:::i;:::-;10394:3;10385:7;10381:17;10374:67;10460:7;10450:17;;;;;9279:1194;;;;;:::o;13669:245::-;13736:6;13789:2;13777:9;13768:7;13764:23;13760:32;13757:52;;;13805:1;13802;13795:12;13757:52;13837:9;13831:16;13856:28;13878:5;13856:28;:::i;14397:254::-;14574:2;14563:9;14556:21;14537:4;14594:51;14641:2;14630:9;14626:18;14618:6;14594:51;:::i;15424:265::-;15464:7;15530:1;15526;15522:6;15518:14;15515:1;15512:21;15507:1;15500:9;15493:17;15489:45;15486:168;;;15576:10;15571:3;15567:20;15564:1;15557:31;15611:4;15608:1;15601:15;15639:4;15636:1;15629:15;15486:168;-1:-1:-1;15674:9:53;;15424:265::o;15694:217::-;15734:1;15760;15750:132;;15804:10;15799:3;15795:20;15792:1;15785:31;15839:4;15836:1;15829:15;15867:4;15864:1;15857:15;15750:132;-1:-1:-1;15896:9:53;;15694:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(uint256)": "40e58ee5",
    "commit(uint256)": "f4f98ad5",
    "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": "c01fd3f7",
    "finalize(uint256)": "05261aea",
    "getAvailableToWithdrawEscrowBalance(address)": "33f5737c",
    "getEscrowBalance(address)": "6374b11b",
    "getExchange(uint256)": "0b9d5847",
    "getOffer(uint256)": "4579268a",
    "getProtocolBalance()": "14e7c922",
    "getSellerDeposit(uint256)": "88106323",
    "initialize(address)": "c4d66de8",
    "owner()": "8da5cb5b",
    "redeem(uint256)": "db006a75",
    "renounceOwnership()": "715018a6",
    "revoke(uint256)": "20c5429b",
    "transferOwnership(address)": "f2fde38b",
    "voidOffer(uint256)": "4915907b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"}],\"name\":\"createOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getAvailableToWithdrawEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalizedDate\",\"type\":\"uint256\"},{\"internalType\":\"enum BionetTypes.ExchangeState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct BionetTypes.Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getSellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"voidOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Main entry way to the protocol. Acts as a proxy. Primarily doing guard checks and forwarding the caller to the Exchange. Contracts such as BionetExchange will only allow calls from this contract.\",\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"commit(uint256)\":{\"details\":\"Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.\",\"params\":{\"_offerId\":\"to commit to\"},\"returns\":{\"exchangeId\":\"of the new exchange\"}},\"createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))\":{\"details\":\"Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.\",\"params\":{\"_offer\":\"information\"},\"returns\":{\"offerId\":\"of the offer\"}},\"finalize(uint256)\":{\"details\":\"Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"getAvailableToWithdrawEscrowBalance(address)\":{\"details\":\"Return the escrow balance that is available to withdraw for the given account\",\"params\":{\"_account\":\"to check\"},\"returns\":{\"bal\":\"of the account\"}},\"getEscrowBalance(address)\":{\"details\":\"Return the escrow balance of the given account\",\"params\":{\"_account\":\"to check\"},\"returns\":{\"bal\":\"of the account\"}},\"getExchange(uint256)\":{\"details\":\"Get an exchange for the given ID\",\"params\":{\"_exchangeId\":\"of the exchange\"},\"returns\":{\"exchange\":\"information\",\"exists\":\"true if the exchange exists\"}},\"getOffer(uint256)\":{\"details\":\"Get an offer for the given ID\",\"params\":{\"_offerId\":\"of the offer\"},\"returns\":{\"exists\":\"true if the offer exists\",\"offer\":\"information\"}},\"getProtocolBalance()\":{\"details\":\"Get the balance of fees collected for the protocol\",\"returns\":{\"bal\":\"- the balance\"}},\"getSellerDeposit(uint256)\":{\"details\":\"Get the required deposit of a seller creating a new offer.\",\"params\":{\"_price\":\"to purchase the offer\"},\"returns\":{\"amt\":\"- the cost\"}},\"initialize(address)\":{\"details\":\"Called after default contructor to set needed addresses\",\"params\":{\"_exchange\":\"address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256)\":{\"details\":\"Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(uint256)\":{\"details\":\"Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to revoke\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voidOffer(uint256)\":{\"details\":\"Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.\",\"params\":{\"_offerId\":\"to void\"}},\"withdraw()\":{\"details\":\"Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BionetRouter.sol\":\"BionetRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b\",\"dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/BionetConstants.sol\":{\"keccak256\":\"0x0e2ad58b7642df55d88c78979b4fe8e54324fef55287546743d59a2335156a66\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1124817e178e8c674b7862540324bc7c7e27bb4d9cb4bdcd8c9498800f2eb7ab\",\"dweb:/ipfs/QmbkHTgALT977saKG3mbhqrkMoadzFVREH5V7NaknprasX\"]},\"src/BionetRouter.sol\":{\"keccak256\":\"0x03d7d26b410206ab3f5a087d5596dea84fb3ff83b385d2999abf6054ce4e2ce2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b2f70651e2c508ccadf58e312abefff9b312920dc6a63f3bf8b7da20a686f7d7\",\"dweb:/ipfs/QmWu2kP9SYpAYAy843pqx7qpnabiRavfZWUpqf3GrPbDZk\"]},\"src/BionetTypes.sol\":{\"keccak256\":\"0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61\",\"dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1\"]},\"src/interfaces/IBionetExchange.sol\":{\"keccak256\":\"0x550b336b2af5bcdc4fc3f326d2044ba2194f7993d6bbd19b1f51fdcb072f403d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9252657f7493e42bee8b371798cd7096034c790d6255a8a94dfe2412984d3cfc\",\"dweb:/ipfs/QmeM43cwtCzUWudSaLZt25xpFo1N7sR6yJR6YtevdBDBvW\"]},\"src/interfaces/IBionetRouter.sol\":{\"keccak256\":\"0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514\",\"dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y\"]},\"src/interfaces/IBionetVoucher.sol\":{\"keccak256\":\"0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1\",\"dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y\"]},\"src/libs/FundsLib.sol\":{\"keccak256\":\"0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54\",\"dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "commit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "_offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAvailableToWithdrawEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchange",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Exchange",
              "name": "exchange",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "redeemBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputeBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finalizedDate",
                  "type": "uint256"
                },
                {
                  "internalType": "enum BionetTypes.ExchangeState",
                  "name": "state",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSellerDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_exchange",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidOffer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancel(uint256)": {
            "details": "Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "commit(uint256)": {
            "details": "Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.",
            "params": {
              "_offerId": "to commit to"
            },
            "returns": {
              "exchangeId": "of the new exchange"
            }
          },
          "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": {
            "details": "Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.",
            "params": {
              "_offer": "information"
            },
            "returns": {
              "offerId": "of the offer"
            }
          },
          "finalize(uint256)": {
            "details": "Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "getAvailableToWithdrawEscrowBalance(address)": {
            "details": "Return the escrow balance that is available to withdraw for the given account",
            "params": {
              "_account": "to check"
            },
            "returns": {
              "bal": "of the account"
            }
          },
          "getEscrowBalance(address)": {
            "details": "Return the escrow balance of the given account",
            "params": {
              "_account": "to check"
            },
            "returns": {
              "bal": "of the account"
            }
          },
          "getExchange(uint256)": {
            "details": "Get an exchange for the given ID",
            "params": {
              "_exchangeId": "of the exchange"
            },
            "returns": {
              "exchange": "information",
              "exists": "true if the exchange exists"
            }
          },
          "getOffer(uint256)": {
            "details": "Get an offer for the given ID",
            "params": {
              "_offerId": "of the offer"
            },
            "returns": {
              "exists": "true if the offer exists",
              "offer": "information"
            }
          },
          "getProtocolBalance()": {
            "details": "Get the balance of fees collected for the protocol",
            "returns": {
              "bal": "- the balance"
            }
          },
          "getSellerDeposit(uint256)": {
            "details": "Get the required deposit of a seller creating a new offer.",
            "params": {
              "_price": "to purchase the offer"
            },
            "returns": {
              "amt": "- the cost"
            }
          },
          "initialize(address)": {
            "details": "Called after default contructor to set needed addresses",
            "params": {
              "_exchange": "address"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "redeem(uint256)": {
            "details": "Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revoke(uint256)": {
            "details": "Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to revoke"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "voidOffer(uint256)": {
            "details": "Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.",
            "params": {
              "_offerId": "to void"
            }
          },
          "withdraw()": {
            "details": "Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BionetRouter.sol": "BionetRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46",
        "urls": [
          "bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b",
          "dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/BionetConstants.sol": {
        "keccak256": "0x0e2ad58b7642df55d88c78979b4fe8e54324fef55287546743d59a2335156a66",
        "urls": [
          "bzz-raw://1124817e178e8c674b7862540324bc7c7e27bb4d9cb4bdcd8c9498800f2eb7ab",
          "dweb:/ipfs/QmbkHTgALT977saKG3mbhqrkMoadzFVREH5V7NaknprasX"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetRouter.sol": {
        "keccak256": "0x03d7d26b410206ab3f5a087d5596dea84fb3ff83b385d2999abf6054ce4e2ce2",
        "urls": [
          "bzz-raw://b2f70651e2c508ccadf58e312abefff9b312920dc6a63f3bf8b7da20a686f7d7",
          "dweb:/ipfs/QmWu2kP9SYpAYAy843pqx7qpnabiRavfZWUpqf3GrPbDZk"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetTypes.sol": {
        "keccak256": "0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c",
        "urls": [
          "bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61",
          "dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetExchange.sol": {
        "keccak256": "0x550b336b2af5bcdc4fc3f326d2044ba2194f7993d6bbd19b1f51fdcb072f403d",
        "urls": [
          "bzz-raw://9252657f7493e42bee8b371798cd7096034c790d6255a8a94dfe2412984d3cfc",
          "dweb:/ipfs/QmeM43cwtCzUWudSaLZt25xpFo1N7sR6yJR6YtevdBDBvW"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetRouter.sol": {
        "keccak256": "0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e",
        "urls": [
          "bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514",
          "dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetVoucher.sol": {
        "keccak256": "0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a",
        "urls": [
          "bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1",
          "dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y"
        ],
        "license": "Apache-2.0"
      },
      "src/libs/FundsLib.sol": {
        "keccak256": "0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914",
        "urls": [
          "bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54",
          "dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BionetRouter.sol",
    "id": 32502,
    "exportedSymbols": {
      "BionetRouter": [
        32501
      ],
      "BionetTypes": [
        32548
      ],
      "ERC165Checker": [
        29952
      ],
      "FundsLib": [
        33419
      ],
      "IBionetExchange": [
        32827
      ],
      "IBionetRouter": [
        32919
      ],
      "IBionetVoucher": [
        32944
      ],
      "IERC1155": [
        28015
      ],
      "Ownable": [
        26616
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:8053:37",
    "nodes": [
      {
        "id": 32074,
        "nodeType": "PragmaDirective",
        "src": "39:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 32075,
        "nodeType": "ImportDirective",
        "src": "65:27:37",
        "nodes": [],
        "absolutePath": "src/BionetTypes.sol",
        "file": "./BionetTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 32549,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32077,
        "nodeType": "ImportDirective",
        "src": "94:45:37",
        "nodes": [],
        "absolutePath": "src/libs/FundsLib.sol",
        "file": "./libs/FundsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 33420,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32076,
              "name": "FundsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33419,
              "src": "102:8:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32079,
        "nodeType": "ImportDirective",
        "src": "140:61:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetRouter.sol",
        "file": "./interfaces/IBionetRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 32920,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32078,
              "name": "IBionetRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32919,
              "src": "148:13:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32081,
        "nodeType": "ImportDirective",
        "src": "202:63:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetVoucher.sol",
        "file": "./interfaces/IBionetVoucher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 32945,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32080,
              "name": "IBionetVoucher",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32944,
              "src": "210:14:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32083,
        "nodeType": "ImportDirective",
        "src": "266:65:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetExchange.sol",
        "file": "./interfaces/IBionetExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 32828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32082,
              "name": "IBionetExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32827,
              "src": "274:15:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32085,
        "nodeType": "ImportDirective",
        "src": "333:56:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 26617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32084,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26616,
              "src": "341:7:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32087,
        "nodeType": "ImportDirective",
        "src": "390:65:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "file": "openzeppelin/token/ERC1155/IERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 28016,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32086,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28015,
              "src": "398:8:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32089,
        "nodeType": "ImportDirective",
        "src": "456:81:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "openzeppelin/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32502,
        "sourceUnit": 29953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32088,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29952,
              "src": "464:13:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32501,
        "nodeType": "ContractDefinition",
        "src": "756:7335:37",
        "nodes": [
          {
            "id": 32096,
            "nodeType": "VariableDeclaration",
            "src": "843:23:37",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchangeAddress",
            "nameLocation": "851:15:37",
            "scope": 32501,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32095,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "843:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32111,
            "nodeType": "ModifierDefinition",
            "src": "907:124:37",
            "nodes": [],
            "body": {
              "id": 32110,
              "nodeType": "Block",
              "src": "932:99:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32099,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "950:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "954:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "950:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32103,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "972:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "964:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "964:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "964:12:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "950:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205a65726f2061646472657373206e6f7420616c6c6f776564",
                        "id": 32106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "978:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0247f9ef2f462c56f02cdb50a168e0c48692ef99e2489a44775632312ef910a6",
                          "typeString": "literal_string \"Router: Zero address not allowed\""
                        },
                        "value": "Router: Zero address not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0247f9ef2f462c56f02cdb50a168e0c48692ef99e2489a44775632312ef910a6",
                          "typeString": "literal_string \"Router: Zero address not allowed\""
                        }
                      ],
                      "id": 32098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "942:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "942:71:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32108,
                  "nodeType": "ExpressionStatement",
                  "src": "942:71:37"
                },
                {
                  "id": 32109,
                  "nodeType": "PlaceholderStatement",
                  "src": "1023:1:37"
                }
              ]
            },
            "name": "noZeroAddress",
            "nameLocation": "916:13:37",
            "parameters": {
              "id": 32097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "929:2:37"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32122,
            "nodeType": "FunctionDefinition",
            "src": "1139:92:37",
            "nodes": [],
            "body": {
              "id": 32121,
              "nodeType": "Block",
              "src": "1187:44:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32117,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32096,
                      "src": "1197:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32118,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32114,
                      "src": "1215:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1197:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32120,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:27:37"
                }
              ]
            },
            "baseFunctions": [
              32836
            ],
            "documentation": {
              "id": 32112,
              "nodeType": "StructuredDocumentation",
              "src": "1037:97:37",
              "text": "@dev Called after default contructor to set needed addresses\n @param _exchange address"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1148:10:37",
            "parameters": {
              "id": 32115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32114,
                  "mutability": "mutable",
                  "name": "_exchange",
                  "nameLocation": "1167:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32122,
                  "src": "1159:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:19:37"
            },
            "returnParameters": {
              "id": 32116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1187:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32137,
            "nodeType": "FunctionDefinition",
            "src": "1365:113:37",
            "nodes": [],
            "body": {
              "id": 32136,
              "nodeType": "Block",
              "src": "1408:70:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32132,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1460:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1464:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1460:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32129,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "1434:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32128,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "1418:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1418:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1451:8:37",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32787,
                      "src": "1418:41:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:53:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32135,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:53:37"
                }
              ]
            },
            "baseFunctions": [
              32911
            ],
            "documentation": {
              "id": 32123,
              "nodeType": "StructuredDocumentation",
              "src": "1237:123:37",
              "text": "@dev Withdraw ether from the exchange.  Withdraws will only\n send funds that have been released by the protocol."
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32126,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32125,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1394:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "1394:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1394:13:37"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1374:8:37",
            "parameters": {
              "id": 32124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:37"
            },
            "returnParameters": {
              "id": 32127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32157,
            "nodeType": "FunctionDefinition",
            "src": "1612:212:37",
            "nodes": [],
            "body": {
              "id": 32156,
              "nodeType": "Block",
              "src": "1742:82:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32147,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32145,
                      "src": "1752:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32152,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32140,
                          "src": "1808:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32149,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32096,
                              "src": "1774:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32148,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32827,
                            "src": "1758:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1758:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1791:16:37",
                        "memberName": "getEscrowBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32794,
                        "src": "1758:49:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 32153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1758:59:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1752:65:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32155,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:65:37"
                }
              ]
            },
            "baseFunctions": [
              32918
            ],
            "documentation": {
              "id": 32138,
              "nodeType": "StructuredDocumentation",
              "src": "1484:123:37",
              "text": "@dev Return the escrow balance of the given account\n @param _account to check\n @return bal of the account"
            },
            "functionSelector": "6374b11b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32143,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32142,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1694:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "1694:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1694:13:37"
              }
            ],
            "name": "getEscrowBalance",
            "nameLocation": "1621:16:37",
            "parameters": {
              "id": 32141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32140,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1646:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32157,
                  "src": "1638:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1637:18:37"
            },
            "returnParameters": {
              "id": 32146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32145,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "1733:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32157,
                  "src": "1725:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1725:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:13:37"
            },
            "scope": 32501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32177,
            "nodeType": "FunctionDefinition",
            "src": "1989:250:37",
            "nodes": [],
            "body": {
              "id": 32176,
              "nodeType": "Block",
              "src": "2138:101:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32167,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32165,
                      "src": "2148:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32172,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32160,
                          "src": "2223:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32169,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32096,
                              "src": "2170:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32168,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32827,
                            "src": "2154:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2154:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2187:35:37",
                        "memberName": "getAvailableToWithdrawEscrowBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32801,
                        "src": "2154:68:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 32173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2154:78:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2148:84:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32175,
                  "nodeType": "ExpressionStatement",
                  "src": "2148:84:37"
                }
              ]
            },
            "documentation": {
              "id": 32158,
              "nodeType": "StructuredDocumentation",
              "src": "1830:154:37",
              "text": "@dev Return the escrow balance that is available to withdraw for the given account\n @param _account to check\n @return bal of the account"
            },
            "functionSelector": "33f5737c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32163,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32162,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "2090:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "2090:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "2090:13:37"
              }
            ],
            "name": "getAvailableToWithdrawEscrowBalance",
            "nameLocation": "1998:35:37",
            "parameters": {
              "id": 32161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32160,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2042:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32177,
                  "src": "2034:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2034:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:18:37"
            },
            "returnParameters": {
              "id": 32166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32165,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "2129:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32177,
                  "src": "2121:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2121:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2120:13:37"
            },
            "scope": 32501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32200,
            "nodeType": "FunctionDefinition",
            "src": "2422:261:37",
            "nodes": [],
            "body": {
              "id": 32199,
              "nodeType": "Block",
              "src": "2566:117:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32188,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32183,
                          "src": "2577:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32189,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32186,
                          "src": "2585:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$32547_memory_ptr",
                            "typeString": "struct BionetTypes.Exchange memory"
                          }
                        }
                      ],
                      "id": 32190,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2576:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32547_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32195,
                          "name": "_exchangeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32180,
                          "src": "2655:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32192,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32096,
                              "src": "2613:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32191,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32827,
                            "src": "2597:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2597:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2630:11:37",
                        "memberName": "getExchange",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32826,
                        "src": "2597:44:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Exchange_$32547_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Exchange memory)"
                        }
                      },
                      "id": 32196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2597:79:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32547_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "src": "2576:100:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32198,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:100:37"
                }
              ]
            },
            "baseFunctions": [
              32853
            ],
            "documentation": {
              "id": 32178,
              "nodeType": "StructuredDocumentation",
              "src": "2245:172:37",
              "text": "@dev Get an exchange for the given ID\n @param _exchangeId of the exchange\n @return exists true if the exchange exists\n @return exchange information"
            },
            "functionSelector": "0b9d5847",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "2431:11:37",
            "parameters": {
              "id": 32181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32180,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "2451:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32200,
                  "src": "2443:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32179,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2443:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2442:21:37"
            },
            "returnParameters": {
              "id": 32187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32183,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2516:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32200,
                  "src": "2511:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32182,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2511:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32186,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "2552:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32200,
                  "src": "2524:36:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Exchange_$32547_memory_ptr",
                    "typeString": "struct BionetTypes.Exchange"
                  },
                  "typeName": {
                    "id": 32185,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32184,
                      "name": "BionetTypes.Exchange",
                      "nameLocations": [
                        "2524:11:37",
                        "2536:8:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32547,
                      "src": "2524:20:37"
                    },
                    "referencedDeclaration": 32547,
                    "src": "2524:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Exchange_$32547_storage_ptr",
                      "typeString": "struct BionetTypes.Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2510:51:37"
            },
            "scope": 32501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32223,
            "nodeType": "FunctionDefinition",
            "src": "2851:218:37",
            "nodes": [],
            "body": {
              "id": 32222,
              "nodeType": "Block",
              "src": "2983:86:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32211,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32206,
                          "src": "2994:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32212,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32209,
                          "src": "3002:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "id": 32213,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2993:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32531_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32218,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32203,
                          "src": "3053:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32215,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32096,
                              "src": "3027:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32214,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32827,
                            "src": "3011:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3011:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3044:8:37",
                        "memberName": "getOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32816,
                        "src": "3011:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Offer_$32531_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Offer memory)"
                        }
                      },
                      "id": 32219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3011:51:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32531_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "src": "2993:69:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32221,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:69:37"
                }
              ]
            },
            "baseFunctions": [
              32863
            ],
            "documentation": {
              "id": 32201,
              "nodeType": "StructuredDocumentation",
              "src": "2689:157:37",
              "text": "@dev Get an offer for the given ID\n @param _offerId of the offer\n @return exists true if the offer exists\n @return offer information"
            },
            "functionSelector": "4579268a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "2860:8:37",
            "parameters": {
              "id": 32204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32203,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "2877:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32223,
                  "src": "2869:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2869:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2868:18:37"
            },
            "returnParameters": {
              "id": 32210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32206,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2939:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32223,
                  "src": "2934:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2934:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32209,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2972:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32223,
                  "src": "2947:30:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32208,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32207,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "2947:11:37",
                        "2959:5:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32531,
                      "src": "2947:17:37"
                    },
                    "referencedDeclaration": 32531,
                    "src": "2947:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32531_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2933:45:37"
            },
            "scope": 32501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32239,
            "nodeType": "FunctionDefinition",
            "src": "3222:168:37",
            "nodes": [],
            "body": {
              "id": 32238,
              "nodeType": "Block",
              "src": "3328:62:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32231,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32229,
                      "src": "3338:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32234,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32226,
                          "src": "3376:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 32232,
                          "name": "FundsLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33419,
                          "src": "3344:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FundsLib_$33419_$",
                            "typeString": "type(library FundsLib)"
                          }
                        },
                        "id": 32233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3353:22:37",
                        "memberName": "calculateSellerDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33418,
                        "src": "3344:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 32235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3344:39:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3338:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32237,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:45:37"
                }
              ]
            },
            "baseFunctions": [
              32843
            ],
            "documentation": {
              "id": 32224,
              "nodeType": "StructuredDocumentation",
              "src": "3075:142:37",
              "text": "@dev Get the required deposit of a seller creating a new offer.\n @param _price to purchase the offer\n @return amt - the cost"
            },
            "functionSelector": "88106323",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellerDeposit",
            "nameLocation": "3231:16:37",
            "parameters": {
              "id": 32227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32226,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3256:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32239,
                  "src": "3248:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3248:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3247:16:37"
            },
            "returnParameters": {
              "id": 32230,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32229,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "3319:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32239,
                  "src": "3311:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32228,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3311:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3310:13:37"
            },
            "scope": 32501,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32254,
            "nodeType": "FunctionDefinition",
            "src": "3494:142:37",
            "nodes": [],
            "body": {
              "id": 32253,
              "nodeType": "Block",
              "src": "3560:76:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32245,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32243,
                      "src": "3570:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32247,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32096,
                              "src": "3592:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32246,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32827,
                            "src": "3576:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3576:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3609:18:37",
                        "memberName": "getProtocolBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32806,
                        "src": "3576:51:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 32250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3576:53:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3570:59:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32252,
                  "nodeType": "ExpressionStatement",
                  "src": "3570:59:37"
                }
              ]
            },
            "baseFunctions": [
              32868
            ],
            "documentation": {
              "id": 32240,
              "nodeType": "StructuredDocumentation",
              "src": "3396:93:37",
              "text": "@dev Get the balance of fees collected for the protocol\n @return bal - the balance"
            },
            "functionSelector": "14e7c922",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtocolBalance",
            "nameLocation": "3503:18:37",
            "parameters": {
              "id": 32241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3521:2:37"
            },
            "returnParameters": {
              "id": 32244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32243,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "3555:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32254,
                  "src": "3547:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3547:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3546:13:37"
            },
            "scope": 32501,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32385,
            "nodeType": "FunctionDefinition",
            "src": "3875:2000:37",
            "nodes": [],
            "body": {
              "id": 32384,
              "nodeType": "Block",
              "src": "4022:1853:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32266,
                      "mutability": "mutable",
                      "name": "deposit",
                      "nameLocation": "4083:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32384,
                      "src": "4075:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4075:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32272,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32269,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32258,
                          "src": "4125:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32270,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4132:5:37",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32520,
                        "src": "4125:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32267,
                        "name": "FundsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33419,
                        "src": "4093:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FundsLib_$33419_$",
                          "typeString": "type(library FundsLib)"
                        }
                      },
                      "id": 32268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4102:22:37",
                      "memberName": "calculateSellerDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33418,
                      "src": "4093:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 32271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:45:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4075:63:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32274,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4156:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4160:5:37",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4156:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32276,
                          "name": "deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32266,
                          "src": "4169:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4156:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20496e73756666696369656e742073656c6c6572206465706f736974",
                        "id": 32278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4178:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f036db68c62cedc261bdf8f98825619126347988f2e5826d03161b88e30a4a24",
                          "typeString": "literal_string \"Router: Insufficient seller deposit\""
                        },
                        "value": "Router: Insufficient seller deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f036db68c62cedc261bdf8f98825619126347988f2e5826d03161b88e30a4a24",
                          "typeString": "literal_string \"Router: Insufficient seller deposit\""
                        }
                      ],
                      "id": 32273,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4148:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4148:68:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32280,
                  "nodeType": "ExpressionStatement",
                  "src": "4148:68:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32282,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32258,
                            "src": "4290:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32283,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4297:6:37",
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32518,
                          "src": "4290:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 32284,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4307:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4311:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4307:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4290:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a206f666665722e73656c6c6572206d757374206265207468652063616c6c6572",
                        "id": 32287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4331:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c059d29b6b1702561cd1c22e1d3a5575578e23f7d69d222acd8941dca4e2286",
                          "typeString": "literal_string \"Router: offer.seller must be the caller\""
                        },
                        "value": "Router: offer.seller must be the caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c059d29b6b1702561cd1c22e1d3a5575578e23f7d69d222acd8941dca4e2286",
                          "typeString": "literal_string \"Router: offer.seller must be the caller\""
                        }
                      ],
                      "id": 32281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4269:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4269:113:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32289,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:113:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32291,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32258,
                            "src": "4400:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32292,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4407:17:37",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32522,
                          "src": "4400:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4427:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4400:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a206f6666657220717479203e2030",
                        "id": 32295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4430:23:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_913e9e943f50ad33c11aa5559f0dcc537d73b5b9f7c4c434cc6a2e0db62cd100",
                          "typeString": "literal_string \"Router: offer qty > 0\""
                        },
                        "value": "Router: offer qty > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_913e9e943f50ad33c11aa5559f0dcc537d73b5b9f7c4c434cc6a2e0db62cd100",
                          "typeString": "literal_string \"Router: offer qty > 0\""
                        }
                      ],
                      "id": 32290,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4392:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:62:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32297,
                  "nodeType": "ExpressionStatement",
                  "src": "4392:62:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32299,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32258,
                            "src": "4485:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32300,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4492:10:37",
                          "memberName": "assetToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32524,
                          "src": "4485:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4514:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4506:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32301,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4506:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4506:12:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4485:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20417373657420746f6b656e206d757374206861766520612076616c6964206164647265737320286e6f742030783029",
                        "id": 32306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4532:57:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f2a302f49fe8afddb413d6bf75623dc4652a6c312545e4bae2acfa3966209b4",
                          "typeString": "literal_string \"Router: Asset token must have a valid address (not 0x0)\""
                        },
                        "value": "Router: Asset token must have a valid address (not 0x0)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f2a302f49fe8afddb413d6bf75623dc4652a6c312545e4bae2acfa3966209b4",
                          "typeString": "literal_string \"Router: Asset token must have a valid address (not 0x0)\""
                        }
                      ],
                      "id": 32298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4464:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4464:135:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32308,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:135:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 32313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32310,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32258,
                            "src": "4617:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32311,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4624:6:37",
                          "memberName": "voided",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32530,
                          "src": "4617:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 32312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4634:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4617:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20746865206f666665722063616e6e6f7420626520766f69646564",
                        "id": 32314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4641:36:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98cd06186baece95f7473a68407550181d1ed2ffa2feeb6d5a1fd2a010f10265",
                          "typeString": "literal_string \"Router: the offer cannot be voided\""
                        },
                        "value": "Router: the offer cannot be voided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98cd06186baece95f7473a68407550181d1ed2ffa2feeb6d5a1fd2a010f10265",
                          "typeString": "literal_string \"Router: the offer cannot be voided\""
                        }
                      ],
                      "id": 32309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4609:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4609:69:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32316,
                  "nodeType": "ExpressionStatement",
                  "src": "4609:69:37"
                },
                {
                  "assignments": [
                    32318
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32318,
                      "mutability": "mutable",
                      "name": "isValidAsset",
                      "nameLocation": "4749:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32384,
                      "src": "4744:17:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32317,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4744:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32328,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32321,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32258,
                          "src": "4809:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32322,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4816:10:37",
                        "memberName": "assetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32524,
                        "src": "4809:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32324,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28015,
                              "src": "4845:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            ],
                            "id": 32323,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4840:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4840:14:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$28015",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4855:11:37",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4840:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 32319,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29952,
                        "src": "4764:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$29952_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 32320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4778:17:37",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29808,
                      "src": "4764:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 32327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4764:112:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4744:132:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32330,
                        "name": "isValidAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32318,
                        "src": "4894:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a20546865206173736574206973206e6f7420616e204552433131353520636f6e7472616374",
                        "id": 32331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4908:46:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f403719da842b69354bf42e1696a2eace250b28c87c55d9a6064377c456e2925",
                          "typeString": "literal_string \"Router: The asset is not an ERC1155 contract\""
                        },
                        "value": "Router: The asset is not an ERC1155 contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f403719da842b69354bf42e1696a2eace250b28c87c55d9a6064377c456e2925",
                          "typeString": "literal_string \"Router: The asset is not an ERC1155 contract\""
                        }
                      ],
                      "id": 32329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4886:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4886:69:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32333,
                  "nodeType": "ExpressionStatement",
                  "src": "4886:69:37"
                },
                {
                  "assignments": [
                    32335
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32335,
                      "mutability": "mutable",
                      "name": "numTokensOwned",
                      "nameLocation": "5056:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32384,
                      "src": "5048:22:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32334,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5048:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32346,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32341,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5124:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5128:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5124:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32343,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32258,
                          "src": "5148:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32344,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5155:12:37",
                        "memberName": "assetTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32526,
                        "src": "5148:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32337,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32258,
                              "src": "5082:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32338,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5089:10:37",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32524,
                            "src": "5082:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32336,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28015,
                          "src": "5073:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5073:27:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28015",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5101:9:37",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27953,
                      "src": "5073:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 32345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5073:104:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5048:129:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32348,
                          "name": "numTokensOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32335,
                          "src": "5208:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 32349,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32258,
                            "src": "5226:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32350,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5233:17:37",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32522,
                          "src": "5226:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5208:42:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205468652073656c6c657220646f6573206e6f74206f776e20656e6f756768204552433131353520746f6b656e7320666f7220746865206f6666657220717479",
                        "id": 32352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5264:73:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7574aa2d09c5ce9e8a255d74e2513d991f69d3f5c614988ca2945dee25a57243",
                          "typeString": "literal_string \"Router: The seller does not own enough ERC1155 tokens for the offer qty\""
                        },
                        "value": "Router: The seller does not own enough ERC1155 tokens for the offer qty"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7574aa2d09c5ce9e8a255d74e2513d991f69d3f5c614988ca2945dee25a57243",
                          "typeString": "literal_string \"Router: The seller does not own enough ERC1155 tokens for the offer qty\""
                        }
                      ],
                      "id": 32347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5187:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5187:160:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32354,
                  "nodeType": "ExpressionStatement",
                  "src": "5187:160:37"
                },
                {
                  "assignments": [
                    32356
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32356,
                      "mutability": "mutable",
                      "name": "approvedForExchange",
                      "nameLocation": "5429:19:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32384,
                      "src": "5424:24:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32355,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5424:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32366,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32362,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32258,
                          "src": "5509:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32363,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5516:6:37",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32518,
                        "src": "5509:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32364,
                        "name": "exchangeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32096,
                        "src": "5536:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32358,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32258,
                              "src": "5460:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32359,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5467:10:37",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32524,
                            "src": "5460:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32357,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28015,
                          "src": "5451:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5451:27:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28015",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5479:16:37",
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27984,
                      "src": "5451:44:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 32365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:110:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5424:137:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32368,
                        "name": "approvedForExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32356,
                        "src": "5592:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f757465723a205468652065786368616e6765206d75737420626520617070726f76656420746f207472616e7366657220796f7572204552433131353520746f6b656e73",
                        "id": 32369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5625:71:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9519e2cdbdbb4a1f1355170c071310e4013bd3f17542b5dc28e926afb21bdb7f",
                          "typeString": "literal_string \"Router: The exchange must be approved to transfer your ERC1155 tokens\""
                        },
                        "value": "Router: The exchange must be approved to transfer your ERC1155 tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9519e2cdbdbb4a1f1355170c071310e4013bd3f17542b5dc28e926afb21bdb7f",
                          "typeString": "literal_string \"Router: The exchange must be approved to transfer your ERC1155 tokens\""
                        }
                      ],
                      "id": 32367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5571:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5571:135:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32371,
                  "nodeType": "ExpressionStatement",
                  "src": "5571:135:37"
                },
                {
                  "expression": {
                    "id": 32382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32372,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32263,
                      "src": "5766:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32380,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32258,
                          "src": "5861:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32374,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32096,
                                "src": "5792:15:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32373,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32827,
                              "src": "5776:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5776:32:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5809:11:37",
                          "memberName": "createOffer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32738,
                          "src": "5776:44:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32531_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                          }
                        },
                        "id": 32379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32377,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5841:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32378,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5845:5:37",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5841:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "5776:84:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32531_memory_ptr_$returns$_t_uint256_$value",
                          "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                        }
                      },
                      "id": 32381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5776:92:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5766:102:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32383,
                  "nodeType": "ExpressionStatement",
                  "src": "5766:102:37"
                }
              ]
            },
            "baseFunctions": [
              32876
            ],
            "documentation": {
              "id": 32255,
              "nodeType": "StructuredDocumentation",
              "src": "3642:228:37",
              "text": "@dev Create a new offer for a seller. The seller is expected\n to pay the appropriate deposit here.\n Can revert for several reasons.\n @param _offer information\n @return offerId of the offer"
            },
            "functionSelector": "c01fd3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32261,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32260,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "3970:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "3970:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3970:13:37"
              }
            ],
            "name": "createOffer",
            "nameLocation": "3884:11:37",
            "parameters": {
              "id": 32259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32258,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "3921:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32385,
                  "src": "3896:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32531_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32257,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32256,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "3896:11:37",
                        "3908:5:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32531,
                      "src": "3896:17:37"
                    },
                    "referencedDeclaration": 32531,
                    "src": "3896:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32531_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:33:37"
            },
            "returnParameters": {
              "id": 32264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32263,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "4009:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32385,
                  "src": "4001:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:17:37"
            },
            "scope": 32501,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32403,
            "nodeType": "FunctionDefinition",
            "src": "6081:141:37",
            "nodes": [],
            "body": {
              "id": 32402,
              "nodeType": "Block",
              "src": "6141:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6194:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6198:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6194:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32399,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32388,
                        "src": "6206:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32394,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "6167:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32393,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "6151:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6151:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6184:9:37",
                      "memberName": "voidOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32745,
                      "src": "6151:42:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6151:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32401,
                  "nodeType": "ExpressionStatement",
                  "src": "6151:64:37"
                }
              ]
            },
            "baseFunctions": [
              32881
            ],
            "documentation": {
              "id": 32386,
              "nodeType": "StructuredDocumentation",
              "src": "5881:195:37",
              "text": "@dev Called by seller to void an offer. This should remove\n the offer from the market UI.  Will not impact\n existing exchanges against the offer.\n @param _offerId to void"
            },
            "functionSelector": "4915907b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32391,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32390,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6127:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "6127:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6127:13:37"
              }
            ],
            "name": "voidOffer",
            "nameLocation": "6090:9:37",
            "parameters": {
              "id": 32389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32388,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "6108:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32403,
                  "src": "6100:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32387,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6100:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6099:18:37"
            },
            "returnParameters": {
              "id": 32392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6141:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32428,
            "nodeType": "FunctionDefinition",
            "src": "6464:273:37",
            "nodes": [],
            "body": {
              "id": 32427,
              "nodeType": "Block",
              "src": "6594:143:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32413,
                      "name": "exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32411,
                      "src": "6604:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32421,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6688:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6692:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6688:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32423,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32406,
                          "src": "6712:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32415,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32096,
                                "src": "6633:15:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32414,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32827,
                              "src": "6617:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6617:32:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6650:6:37",
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32754,
                          "src": "6617:39:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 32420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32418,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6664:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6668:5:37",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "6664:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "6617:57:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                          "typeString": "function (address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 32424,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6617:113:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6604:126:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32426,
                  "nodeType": "ExpressionStatement",
                  "src": "6604:126:37"
                }
              ]
            },
            "baseFunctions": [
              32888
            ],
            "documentation": {
              "id": 32404,
              "nodeType": "StructuredDocumentation",
              "src": "6228:231:37",
              "text": "@dev Commit to purchase. Creates a new exchange in the 'committed' state.\n Called by buyer. The buyer is expected to pay the price here.\n @param _offerId to commit to\n @return exchangeId of the new exchange"
            },
            "functionSelector": "f4f98ad5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32409,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32408,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6539:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "6539:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6539:13:37"
              }
            ],
            "name": "commit",
            "nameLocation": "6473:6:37",
            "parameters": {
              "id": 32407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32406,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "6488:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32428,
                  "src": "6480:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6480:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6479:18:37"
            },
            "returnParameters": {
              "id": 32412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32411,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "6578:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32428,
                  "src": "6570:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6570:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:20:37"
            },
            "scope": 32501,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32446,
            "nodeType": "FunctionDefinition",
            "src": "6922:141:37",
            "nodes": [],
            "body": {
              "id": 32445,
              "nodeType": "Block",
              "src": "6982:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32440,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7032:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7036:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7032:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32442,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32431,
                        "src": "7044:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32437,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "7008:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32436,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "6992:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6992:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7025:6:37",
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32761,
                      "src": "6992:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6992:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32444,
                  "nodeType": "ExpressionStatement",
                  "src": "6992:64:37"
                }
              ]
            },
            "baseFunctions": [
              32893
            ],
            "documentation": {
              "id": 32429,
              "nodeType": "StructuredDocumentation",
              "src": "6743:174:37",
              "text": "@dev Cancel a committment. Called by the buyer. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32433,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6968:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "6968:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6968:13:37"
              }
            ],
            "name": "cancel",
            "nameLocation": "6931:6:37",
            "parameters": {
              "id": 32432,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32431,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6946:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32446,
                  "src": "6938:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32430,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6938:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6937:21:37"
            },
            "returnParameters": {
              "id": 32435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6982:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32464,
            "nodeType": "FunctionDefinition",
            "src": "7249:141:37",
            "nodes": [],
            "body": {
              "id": 32463,
              "nodeType": "Block",
              "src": "7309:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32458,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7359:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7363:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7359:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32460,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32449,
                        "src": "7371:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32455,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "7335:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32454,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "7319:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7319:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7352:6:37",
                      "memberName": "revoke",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32768,
                      "src": "7319:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7319:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32462,
                  "nodeType": "ExpressionStatement",
                  "src": "7319:64:37"
                }
              ]
            },
            "baseFunctions": [
              32898
            ],
            "documentation": {
              "id": 32447,
              "nodeType": "StructuredDocumentation",
              "src": "7069:175:37",
              "text": "@dev Revoke a committment. Called by the seller. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to revoke"
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32452,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32451,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7295:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "7295:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "7295:13:37"
              }
            ],
            "name": "revoke",
            "nameLocation": "7258:6:37",
            "parameters": {
              "id": 32450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32449,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7273:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32464,
                  "src": "7265:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7265:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7264:21:37"
            },
            "returnParameters": {
              "id": 32453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7309:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32482,
            "nodeType": "FunctionDefinition",
            "src": "7576:141:37",
            "nodes": [],
            "body": {
              "id": 32481,
              "nodeType": "Block",
              "src": "7636:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7686:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7690:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7686:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32478,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32467,
                        "src": "7698:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32473,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "7662:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32472,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "7646:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7646:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7679:6:37",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32775,
                      "src": "7646:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7646:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32480,
                  "nodeType": "ExpressionStatement",
                  "src": "7646:64:37"
                }
              ]
            },
            "baseFunctions": [
              32903
            ],
            "documentation": {
              "id": 32465,
              "nodeType": "StructuredDocumentation",
              "src": "7396:175:37",
              "text": "@dev Redeem a Voucher. Called by the buyer.  This signals to\n the seller that the buyer is ready for the asset.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32469,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7622:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "7622:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "7622:13:37"
              }
            ],
            "name": "redeem",
            "nameLocation": "7585:6:37",
            "parameters": {
              "id": 32468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32467,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7600:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32482,
                  "src": "7592:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7592:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7591:21:37"
            },
            "returnParameters": {
              "id": 32471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7636:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32500,
            "nodeType": "FunctionDefinition",
            "src": "7944:145:37",
            "nodes": [],
            "body": {
              "id": 32499,
              "nodeType": "Block",
              "src": "8006:83:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32494,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8058:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8062:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8058:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32496,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32485,
                        "src": "8070:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32491,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32096,
                            "src": "8032:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32490,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32827,
                          "src": "8016:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32827_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8016:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32827",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8049:8:37",
                      "memberName": "finalize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32782,
                      "src": "8016:41:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8016:66:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32498,
                  "nodeType": "ExpressionStatement",
                  "src": "8016:66:37"
                }
              ]
            },
            "baseFunctions": [
              32908
            ],
            "documentation": {
              "id": 32483,
              "nodeType": "StructuredDocumentation",
              "src": "7723:216:37",
              "text": "@dev Finalize the exchange. Usually means the buyer is happy.\n this will close out the exchange and release funds to the parties\n for withdrawal.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "05261aea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32488,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32487,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7992:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32111,
                  "src": "7992:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "7992:13:37"
              }
            ],
            "name": "finalize",
            "nameLocation": "7953:8:37",
            "parameters": {
              "id": 32486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32485,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7970:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32500,
                  "src": "7962:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32484,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7962:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7961:21:37"
            },
            "returnParameters": {
              "id": 32489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8006:0:37"
            },
            "scope": 32501,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32091,
              "name": "Ownable",
              "nameLocations": [
                "781:7:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26616,
              "src": "781:7:37"
            },
            "id": 32092,
            "nodeType": "InheritanceSpecifier",
            "src": "781:7:37"
          },
          {
            "baseName": {
              "id": 32093,
              "name": "IBionetRouter",
              "nameLocations": [
                "790:13:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32919,
              "src": "790:13:37"
            },
            "id": 32094,
            "nodeType": "InheritanceSpecifier",
            "src": "790:13:37"
          }
        ],
        "canonicalName": "BionetRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32090,
          "nodeType": "StructuredDocumentation",
          "src": "539:217:37",
          "text": "@dev Main entry way to the protocol. Acts as a proxy.\n Primarily doing guard checks and forwarding the caller to\n the Exchange. Contracts such as BionetExchange will only\n allow calls from this contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32501,
          32919,
          26616,
          29559
        ],
        "name": "BionetRouter",
        "nameLocation": "765:12:37",
        "scope": 32502,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 37
}