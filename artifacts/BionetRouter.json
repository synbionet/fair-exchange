{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "commit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "_offer",
          "type": "tuple"
        }
      ],
      "name": "createOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getEscrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "redeemBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "disputeBy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "finalizedDate",
              "type": "uint256"
            },
            {
              "internalType": "enum BionetTypes.ExchangeState",
              "name": "state",
              "type": "uint8"
            }
          ],
          "internalType": "struct BionetTypes.Exchange",
          "name": "exchange",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "getOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "offer",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProtocolBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "getSellerDeposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amt",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_exchange",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "voidOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61178a8061007e6000396000f3fe6080604052600436106100fe5760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f71461029f578063c4d66de8146102b2578063db006a75146102ef578063f2fde38b1461030f578063f4f98ad51461032f57600080fd5b80636374b11b14610222578063715018a61461024257806388106323146102575780638da5cb5b1461027757600080fd5b80633ccfd60b116100d15780633ccfd60b1461019f57806340e58ee5146101b45780634579268a146101d45780634915907b1461020257600080fd5b806305261aea146101035780630b9d58471461012557806314e7c9221461015c57806320c5429b1461017f575b600080fd5b34801561010f57600080fd5b5061012361011e3660046110d0565b610342565b005b34801561013157600080fd5b506101456101403660046110d0565b6103f4565b6040516101539291906110ff565b60405180910390f35b34801561016857600080fd5b50610171610476565b604051908152602001610153565b34801561018b57600080fd5b5061012361019a3660046110d0565b6104e9565b3480156101ab57600080fd5b50610123610561565b3480156101c057600080fd5b506101236101cf3660046110d0565b610601565b3480156101e057600080fd5b506101f46101ef3660046110d0565b610679565b604051610153929190611248565b34801561020e57600080fd5b5061012361021d3660046110d0565b610729565b34801561022e57600080fd5b5061017161023d366004611290565b6107a1565b34801561024e57600080fd5b50610123610859565b34801561026357600080fd5b506101716102723660046110d0565b61086d565b34801561028357600080fd5b506000546040516001600160a01b039091168152602001610153565b6101716102ad3660046113d8565b610878565b3480156102be57600080fd5b506101236102cd366004611290565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3480156102fb57600080fd5b5061012361030a3660046110d0565b610d1f565b34801561031b57600080fd5b5061012361032a366004611290565b610d97565b61017161033d3660046110d0565b610e10565b60408051808201909152600b81526a426164204164647265737360a81b60208201523361038b5760405162461bcd60e51b815260040161038291906114a1565b60405180910390fd5b506001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103d957600080fd5b505af11580156103ed573d6000803e3d6000fd5b5050505050565b60006103fe61107a565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa158015610448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046c91906114ca565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e4919061156d565b905090565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105295760405162461bcd60e51b815260040161038291906114a1565b5060015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d9906044016103bf565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105a15760405162461bcd60e51b815260040161038291906114a1565b506001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b50505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336106415760405162461bcd60e51b815260040161038291906114a1565b506001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016103bf565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046c91908101906115cb565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336107695760405162461bcd60e51b815260040161038291906114a1565b506001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016103bf565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336107e45760405162461bcd60e51b815260040161038291906114a1565b50600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610853919061156d565b92915050565b610861610ecb565b61086b6000610f25565b565b600061085382610f75565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336108bb5760405162461bcd60e51b815260040161038291906114a1565b5060006108cb8360400151610f75565b9050803410156109145760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d0819195c1bdcda5d60621b6044820152606401610382565b336001600160a01b031683602001516001600160a01b0316146040518060400160405280601981526020017f53656c6c6572206d757374206265207468652063616c6c657200000000000000815250906109815760405162461bcd60e51b815260040161038291906114a1565b5060008360600151116040518060600160405280602b815260200161172a602b9139906109c15760405162461bcd60e51b815260040161038291906114a1565b50608083015160408051808201909152600b81526a426164204164647265737360a81b6020820152906001600160a01b0316610a105760405162461bcd60e51b815260040161038291906114a1565b5060e083015160408051808201909152600f81526e13d999995c881a5cc81d9bda591959608a1b60208201529015610a5b5760405162461bcd60e51b815260040161038291906114a1565b506000610a738460800151636cdb3d1360e11b610f82565b9050806040518060400160405280601a81526020017f4e6f7420612076616c696420617373657420636f6e747261637400000000000081525090610aca5760405162461bcd60e51b815260040161038291906114a1565b50608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b45919061156d565b90508460600151811015610ba75760405162461bcd60e51b815260206004820152602360248201527f446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f666044820152623332b960e91b6064820152608401610382565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906116aa565b905080610ca05760405162461bcd60e51b815260206004820152603860248201527f45786368616e6765206d75737420626520617070726f76656420746f2074726160448201527f6e7366657220796f7572204950204e465420746f6b656e7300000000000000006064820152608401610382565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610cd2908a906004016116c7565b60206040518083038185885af1158015610cf0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d15919061156d565b9695505050505050565b60408051808201909152600b81526a426164204164647265737360a81b602082015233610d5f5760405162461bcd60e51b815260040161038291906114a1565b506001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016103bf565b610d9f610ecb565b6001600160a01b038116610e045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610382565b610e0d81610f25565b50565b60408051808201909152600b81526a426164204164647265737360a81b602082015260009033610e535760405162461bcd60e51b815260040161038291906114a1565b506001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610ea6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610853919061156d565b6000546001600160a01b0316331461086b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610382565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006108538260c8610fa5565b6000610f8d83610fbe565b8015610f9e5750610f9e8383610ff1565b9392505050565b6000612710610fb483856116da565b610f9e9190611707565b6000610fd1826301ffc9a760e01b610ff1565b80156108535750610fea826001600160e01b0319610ff1565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611063575060208210155b801561106f5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600060058111156110cb576110cb6110e9565b905290565b6000602082840312156110e257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c08301516006811061117157634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b60005b8381101561119a578181015183820152602001611182565b50506000910152565b600081518084526111bb81602086016020860161117f565b601f01601f19169290920160200192915050565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c086015261122f828601826111a3565b91505060e0830151151560e08501528091505092915050565b821515815260406020820152600061126360408301846111cf565b949350505050565b6001600160a01b0381168114610e0d57600080fd5b803561128b8161126b565b919050565b6000602082840312156112a257600080fd5b8135610f9e8161126b565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156112e7576112e76112ad565b60405290565b60405160e0810167ffffffffffffffff811182821017156112e7576112e76112ad565b604051601f8201601f1916810167ffffffffffffffff81118282101715611339576113396112ad565b604052919050565b600067ffffffffffffffff82111561135b5761135b6112ad565b50601f01601f191660200190565b600082601f83011261137a57600080fd5b813561138d61138882611341565b611310565b8181528460208386010111156113a257600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610e0d57600080fd5b803561128b816113bf565b6000602082840312156113ea57600080fd5b813567ffffffffffffffff8082111561140257600080fd5b90830190610100828603121561141757600080fd5b61141f6112c3565b8235815261142f60208401611280565b6020820152604083013560408201526060830135606082015261145460808401611280565b608082015260a083013560a082015260c08301358281111561147557600080fd5b61148187828601611369565b60c08301525061149360e084016113cd565b60e082015295945050505050565b602081526000610f9e60208301846111a3565b805161128b816113bf565b805161128b8161126b565b6000808284036101008112156114df57600080fd5b83516114ea816113bf565b925060e0601f19820112156114fe57600080fd5b506115076112ed565b602084015181526040840151602082015260608401516115268161126b565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e08401516006811061155d57600080fd5b60c0820152919491935090915050565b60006020828403121561157f57600080fd5b5051919050565b600082601f83011261159757600080fd5b81516115a561138882611341565b8181528460208386010111156115ba57600080fd5b61126382602083016020870161117f565b600080604083850312156115de57600080fd5b82516115e9816113bf565b602084015190925067ffffffffffffffff8082111561160757600080fd5b90840190610100828703121561161c57600080fd5b6116246112c3565b82518152611634602084016114bf565b60208201526040830151604082015260608301516060820152611659608084016114bf565b608082015260a083015160a082015260c08301518281111561167a57600080fd5b61168688828601611586565b60c08301525061169860e084016114b4565b60e08201528093505050509250929050565b6000602082840312156116bc57600080fd5b8151610f9e816113bf565b602081526000610f9e60208301846111cf565b600081600019048311821515161561170257634e487b7160e01b600052601160045260246000fd5b500290565b60008261172457634e487b7160e01b600052601260045260246000fd5b50049056fe5175616e69747920617661696c61626c65206d7573742062652067726561746572207468616e207a65726fa264697066735822122039a56519140dfcb615d29febbf471785b470a6687fe09536322ce90d7b6bf93464736f6c63430008100033",
    "sourceMap": "788:6622:37:-:0;;;;;;;;;;;;-1:-1:-1;936:32:16;719:10:28;936:18:16;:32::i;:::-;788:6622:37;;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;788:6622:37:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fe5760003560e01c80636374b11b11610095578063c01fd3f711610064578063c01fd3f71461029f578063c4d66de8146102b2578063db006a75146102ef578063f2fde38b1461030f578063f4f98ad51461032f57600080fd5b80636374b11b14610222578063715018a61461024257806388106323146102575780638da5cb5b1461027757600080fd5b80633ccfd60b116100d15780633ccfd60b1461019f57806340e58ee5146101b45780634579268a146101d45780634915907b1461020257600080fd5b806305261aea146101035780630b9d58471461012557806314e7c9221461015c57806320c5429b1461017f575b600080fd5b34801561010f57600080fd5b5061012361011e3660046110d0565b610342565b005b34801561013157600080fd5b506101456101403660046110d0565b6103f4565b6040516101539291906110ff565b60405180910390f35b34801561016857600080fd5b50610171610476565b604051908152602001610153565b34801561018b57600080fd5b5061012361019a3660046110d0565b6104e9565b3480156101ab57600080fd5b50610123610561565b3480156101c057600080fd5b506101236101cf3660046110d0565b610601565b3480156101e057600080fd5b506101f46101ef3660046110d0565b610679565b604051610153929190611248565b34801561020e57600080fd5b5061012361021d3660046110d0565b610729565b34801561022e57600080fd5b5061017161023d366004611290565b6107a1565b34801561024e57600080fd5b50610123610859565b34801561026357600080fd5b506101716102723660046110d0565b61086d565b34801561028357600080fd5b506000546040516001600160a01b039091168152602001610153565b6101716102ad3660046113d8565b610878565b3480156102be57600080fd5b506101236102cd366004611290565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b3480156102fb57600080fd5b5061012361030a3660046110d0565b610d1f565b34801561031b57600080fd5b5061012361032a366004611290565b610d97565b61017161033d3660046110d0565b610e10565b60408051808201909152600b81526a426164204164647265737360a81b60208201523361038b5760405162461bcd60e51b815260040161038291906114a1565b60405180910390fd5b506001546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b1580156103d957600080fd5b505af11580156103ed573d6000803e3d6000fd5b5050505050565b60006103fe61107a565b600154604051630b9d584760e01b8152600481018590526001600160a01b0390911690630b9d58479060240161010060405180830381865afa158015610448573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046c91906114ca565b9094909350915050565b60015460408051630a73e49160e11b815290516000926001600160a01b0316916314e7c9229160048083019260209291908290030181865afa1580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e4919061156d565b905090565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105295760405162461bcd60e51b815260040161038291906114a1565b5060015460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d9906044016103bf565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105a15760405162461bcd60e51b815260040161038291906114a1565b506001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b50505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336106415760405162461bcd60e51b815260040161038291906114a1565b506001546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016103bf565b604080516101008101825260008082526020820181905291810182905260608082018390526080820183905260a0820183905260c082015260e081018290526001546040516322bc934560e11b8152600481018590526001600160a01b0390911690634579268a90602401600060405180830381865afa158015610701573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261046c91908101906115cb565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336107695760405162461bcd60e51b815260040161038291906114a1565b506001546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016103bf565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336107e45760405162461bcd60e51b815260040161038291906114a1565b50600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa15801561082f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610853919061156d565b92915050565b610861610ecb565b61086b6000610f25565b565b600061085382610f75565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336108bb5760405162461bcd60e51b815260040161038291906114a1565b5060006108cb8360400151610f75565b9050803410156109145760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d0819195c1bdcda5d60621b6044820152606401610382565b336001600160a01b031683602001516001600160a01b0316146040518060400160405280601981526020017f53656c6c6572206d757374206265207468652063616c6c657200000000000000815250906109815760405162461bcd60e51b815260040161038291906114a1565b5060008360600151116040518060600160405280602b815260200161172a602b9139906109c15760405162461bcd60e51b815260040161038291906114a1565b50608083015160408051808201909152600b81526a426164204164647265737360a81b6020820152906001600160a01b0316610a105760405162461bcd60e51b815260040161038291906114a1565b5060e083015160408051808201909152600f81526e13d999995c881a5cc81d9bda591959608a1b60208201529015610a5b5760405162461bcd60e51b815260040161038291906114a1565b506000610a738460800151636cdb3d1360e11b610f82565b9050806040518060400160405280601a81526020017f4e6f7420612076616c696420617373657420636f6e747261637400000000000081525090610aca5760405162461bcd60e51b815260040161038291906114a1565b50608084015160a0850151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610b21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b45919061156d565b90508460600151811015610ba75760405162461bcd60e51b815260206004820152602360248201527f446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f666044820152623332b960e91b6064820152608401610382565b6080850151602086015160015460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906116aa565b905080610ca05760405162461bcd60e51b815260206004820152603860248201527f45786368616e6765206d75737420626520617070726f76656420746f2074726160448201527f6e7366657220796f7572204950204e465420746f6b656e7300000000000000006064820152608401610382565b60015460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f7903490610cd2908a906004016116c7565b60206040518083038185885af1158015610cf0573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d15919061156d565b9695505050505050565b60408051808201909152600b81526a426164204164647265737360a81b602082015233610d5f5760405162461bcd60e51b815260040161038291906114a1565b506001546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016103bf565b610d9f610ecb565b6001600160a01b038116610e045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610382565b610e0d81610f25565b50565b60408051808201909152600b81526a426164204164647265737360a81b602082015260009033610e535760405162461bcd60e51b815260040161038291906114a1565b506001546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610ea6573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610853919061156d565b6000546001600160a01b0316331461086b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610382565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006108538260c8610fa5565b6000610f8d83610fbe565b8015610f9e5750610f9e8383610ff1565b9392505050565b6000612710610fb483856116da565b610f9e9190611707565b6000610fd1826301ffc9a760e01b610ff1565b80156108535750610fea826001600160e01b0319610ff1565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015611063575060208210155b801561106f5750600081115b979650505050505050565b6040518060e00160405280600081526020016000815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600060058111156110cb576110cb6110e9565b905290565b6000602082840312156110e257600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6000610100820190508315158252825160208301526020830151604083015260018060a01b03604084015116606083015260608301516080830152608083015160a083015260a083015160c083015260c08301516006811061117157634e487b7160e01b600052602160045260246000fd5b8060e0840152509392505050565b60005b8381101561119a578181015183820152602001611182565b50506000910152565b600081518084526111bb81602086016020860161117f565b601f01601f19169290920160200192915050565b600061010082518452602083015160018060a01b0380821660208701526040850151604087015260608501516060870152806080860151166080870152505060a083015160a085015260c08301518160c086015261122f828601826111a3565b91505060e0830151151560e08501528091505092915050565b821515815260406020820152600061126360408301846111cf565b949350505050565b6001600160a01b0381168114610e0d57600080fd5b803561128b8161126b565b919050565b6000602082840312156112a257600080fd5b8135610f9e8161126b565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156112e7576112e76112ad565b60405290565b60405160e0810167ffffffffffffffff811182821017156112e7576112e76112ad565b604051601f8201601f1916810167ffffffffffffffff81118282101715611339576113396112ad565b604052919050565b600067ffffffffffffffff82111561135b5761135b6112ad565b50601f01601f191660200190565b600082601f83011261137a57600080fd5b813561138d61138882611341565b611310565b8181528460208386010111156113a257600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610e0d57600080fd5b803561128b816113bf565b6000602082840312156113ea57600080fd5b813567ffffffffffffffff8082111561140257600080fd5b90830190610100828603121561141757600080fd5b61141f6112c3565b8235815261142f60208401611280565b6020820152604083013560408201526060830135606082015261145460808401611280565b608082015260a083013560a082015260c08301358281111561147557600080fd5b61148187828601611369565b60c08301525061149360e084016113cd565b60e082015295945050505050565b602081526000610f9e60208301846111a3565b805161128b816113bf565b805161128b8161126b565b6000808284036101008112156114df57600080fd5b83516114ea816113bf565b925060e0601f19820112156114fe57600080fd5b506115076112ed565b602084015181526040840151602082015260608401516115268161126b565b806040830152506080840151606082015260a0840151608082015260c084015160a082015260e08401516006811061155d57600080fd5b60c0820152919491935090915050565b60006020828403121561157f57600080fd5b5051919050565b600082601f83011261159757600080fd5b81516115a561138882611341565b8181528460208386010111156115ba57600080fd5b61126382602083016020870161117f565b600080604083850312156115de57600080fd5b82516115e9816113bf565b602084015190925067ffffffffffffffff8082111561160757600080fd5b90840190610100828703121561161c57600080fd5b6116246112c3565b82518152611634602084016114bf565b60208201526040830151604082015260608301516060820152611659608084016114bf565b608082015260a083015160a082015260c08301518281111561167a57600080fd5b61168688828601611586565b60c08301525061169860e084016114b4565b60e08201528093505050509250929050565b6000602082840312156116bc57600080fd5b8151610f9e816113bf565b602081526000610f9e60208301846111cf565b600081600019048311821515161561170257634e487b7160e01b600052601160045260246000fd5b500290565b60008261172457634e487b7160e01b600052601260045260246000fd5b50049056fe5175616e69747920617661696c61626c65206d7573742062652067726561746572207468616e207a65726fa264697066735822122039a56519140dfcb615d29febbf471785b470a6687fe09536322ce90d7b6bf93464736f6c63430008100033",
    "sourceMap": "788:6622:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7263:145;;;;;;;;;;-1:-1:-1;7263:145:37;;;;;:::i;:::-;;:::i;:::-;;2016:261;;;;;;;;;;-1:-1:-1;2016:261:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3088:142;;;;;;;;;;;;;:::i;:::-;;;1389:25:53;;;1377:2;1362:18;3088:142:37;1243:177:53;6568:141:37;;;;;;;;;;-1:-1:-1;6568:141:37;;;;;:::i;:::-;;:::i;1374:113::-;;;;;;;;;;;;;:::i;6241:141::-;;;;;;;;;;-1:-1:-1;6241:141:37;;;;;:::i;:::-;;:::i;2445:218::-;;;;;;;;;;-1:-1:-1;2445:218:37;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;5400:141::-;;;;;;;;;;-1:-1:-1;5400:141:37;;;;;:::i;:::-;;:::i;1621:212::-;;;;;;;;;;-1:-1:-1;1621:212:37;;;;;:::i;:::-;;:::i;1831:101:16:-;;;;;;;;;;;;;:::i;2816:168:37:-;;;;;;;;;;-1:-1:-1;2816:168:37;;;;;:::i;:::-;;:::i;1201:85:16:-;;;;;;;;;;-1:-1:-1;1247:7:16;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:16;;;3722:51:53;;3710:2;3695:18;1201:85:16;3576:203:53;3469:1725:37;;;;;;:::i;:::-;;:::i;1148:92::-;;;;;;;;;;-1:-1:-1;1148:92:37;;;;;:::i;:::-;1206:15;:27;;-1:-1:-1;;;;;;1206:27:37;-1:-1:-1;;;;;1206:27:37;;;;;;;;;;1148:92;6895:141;;;;;;;;;;-1:-1:-1;6895:141:37;;;;;:::i;:::-;;:::i;2081:198:16:-;;;;;;;;;;-1:-1:-1;2081:198:16;;;;;:::i;:::-;;:::i;5783:273:37:-;;;;;;:::i;:::-;;:::i;7263:145::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;7351:15:37::1;::::0;7335:66:::1;::::0;-1:-1:-1;;;7335:66:37;;7377:10:::1;7335:66;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;7351:15:37;;::::1;::::0;7335:41:::1;::::0;7047:18:53;;7335:66:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7263:145:::0;:::o;2016:261::-;2105:11;2118:36;;:::i;:::-;2207:15;;2191:79;;-1:-1:-1;;;2191:79:37;;;;;1389:25:53;;;-1:-1:-1;;;;;2207:15:37;;;;2191:44;;1362:18:53;;2191:79:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2170:100;;;;-1:-1:-1;2016:261:37;-1:-1:-1;;2016:261:37:o;3088:142::-;3186:15;;3170:53;;;-1:-1:-1;;;3170:53:37;;;;3141:11;;-1:-1:-1;;;;;3186:15:37;;3170:51;;:53;;;;;;;;;;;;;;3186:15;3170:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3164:59;;3088:142;:::o;6568:141::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;6654:15:37::1;::::0;6638:64:::1;::::0;-1:-1:-1;;;6638:64:37;;6678:10:::1;6638:64;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;6654:15:37;;::::1;::::0;6638:39:::1;::::0;7047:18:53;;6638:64:37::1;6900:274:53::0;1374:113:37;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;1443:15:37::1;::::0;1427:53:::1;::::0;-1:-1:-1;;;1427:53:37;;1469:10:::1;1427:53;::::0;::::1;3722:51:53::0;-1:-1:-1;;;;;1443:15:37;;::::1;::::0;1427:41:::1;::::0;3695:18:53;;1427:53:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1374:113::o:0;6241:141::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;6327:15:37::1;::::0;6311:64:::1;::::0;-1:-1:-1;;;6311:64:37;;6351:10:::1;6311:64;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;6327:15:37;;::::1;::::0;6311:39:::1;::::0;7047:18:53;;6311:64:37::1;6900:274:53::0;2445:218:37;-1:-1:-1;;;;;;;;2528:11:37;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2621:15:37;;2605:51;;-1:-1:-1;;;2605:51:37;;;;;1389:25:53;;;-1:-1:-1;;;;;2621:15:37;;;;2605:41;;1362:18:53;;2605:51:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2605:51:37;;;;;;;;;;;;:::i;5400:141::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;5486:15:37::1;::::0;5470:64:::1;::::0;-1:-1:-1;;;5470:64:37;;5513:10:::1;5470:64;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;5486:15:37;;::::1;::::0;5470:42:::1;::::0;7047:18:53;;5470:64:37::1;6900:274:53::0;1621:212:37;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;1734;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;1783:15:37::1;::::0;1767:59:::1;::::0;-1:-1:-1;;;1767:59:37;;-1:-1:-1;;;;;3740:32:53;;;1767:59:37::1;::::0;::::1;3722:51:53::0;1783:15:37;;::::1;::::0;1767:49:::1;::::0;3695:18:53;;1767:59:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1761:65:::0;1621:212;-1:-1:-1;;1621:212:37:o;1831:101:16:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2816:168:37:-;2905:11;2938:39;2970:6;2938:31;:39::i;3469:1725::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;3595:15;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;;3669:15:::1;3687:45;3719:6;:12;;;3687:31;:45::i;:::-;3669:63;;3763:7;3750:9;:20;;3742:53;;;::::0;-1:-1:-1;;;3742:53:37;;10515:2:53;3742:53:37::1;::::0;::::1;10497:21:53::0;10554:2;10534:18;;;10527:30;-1:-1:-1;;;10573:18:53;;;10566:50;10633:18;;3742:53:37::1;10313:344:53::0;3742:53:37::1;3873:10;-1:-1:-1::0;;;;;3856:27:37::1;:6;:13;;;-1:-1:-1::0;;;;;3856:27:37::1;;3885:17;;;;;;;;;;;;;;;;::::0;3848:55:::1;;;;;-1:-1:-1::0;;;3848:55:37::1;;;;;;;;:::i;:::-;;3948:1;3921:6;:24;;;:28;3951:11;;;;;;;;;;;;;;;;;3913:50;;;;;-1:-1:-1::0;;;3913:50:37::1;;;;;;;;:::i;:::-;-1:-1:-1::0;3981:17:37::1;::::0;::::1;::::0;4016:11:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4016:11:37::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3981:33:37::1;3973:55;;;;-1:-1:-1::0;;;3973:55:37::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4046:13:37::1;::::0;::::1;::::0;4070:12:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;4070:12:37::1;::::0;::::1;::::0;;4046:22:::1;4038:45;;;;-1:-1:-1::0;;;4038:45:37::1;;;;;;;;:::i;:::-;;4149:17;4169:112;4214:6;:17;;;-1:-1:-1::0;;;4169:31:37::1;:112::i;:::-;4149:132;;4299:12;4313:9;;;;;;;;;;;;;;;;::::0;4291:32:::1;;;;;-1:-1:-1::0;;;4291:32:37::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4450:17:37::1;::::0;::::1;::::0;4516:19:::1;::::0;::::1;::::0;4441:104:::1;::::0;-1:-1:-1;;;4441:104:37;;4492:10:::1;4441:104;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;;4416:22:37::1;::::0;-1:-1:-1;;;;;4441:37:37::1;::::0;::::1;::::0;7047:18:53;;4441:104:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4416:129;;4594:6;:24;;;4576:14;:42;;4555:124;;;::::0;-1:-1:-1;;;4555:124:37;;10864:2:53;4555:124:37::1;::::0;::::1;10846:21:53::0;10903:2;10883:18;;;10876:30;10942:34;10922:18;;;10915:62;-1:-1:-1;;;10993:18:53;;;10986:33;11036:19;;4555:124:37::1;10662:399:53::0;4555:124:37::1;4792:17;::::0;::::1;::::0;4841:13:::1;::::0;::::1;::::0;4868:15:::1;::::0;4783:110:::1;::::0;-1:-1:-1;;;4783:110:37;;-1:-1:-1;;;;;11296:15:53;;;4783:110:37::1;::::0;::::1;11278:34:53::0;4868:15:37;;::::1;11328:18:53::0;;;11321:43;4756:24:37::1;::::0;4783:44;;;::::1;::::0;::::1;::::0;11213:18:53;;4783:110:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4756:137;;4924:19;4903:122;;;::::0;-1:-1:-1;;;4903:122:37;;11827:2:53;4903:122:37::1;::::0;::::1;11809:21:53::0;11866:2;11846:18;;;11839:30;11905:34;11885:18;;;11878:62;11976:26;11956:18;;;11949:54;12020:19;;4903:122:37::1;11625:420:53::0;4903:122:37::1;5111:15;::::0;5095:92:::1;::::0;-1:-1:-1;;;5095:92:37;;-1:-1:-1;;;;;5111:15:37;;::::1;::::0;5095:44:::1;::::0;5160:9:::1;::::0;5095:92:::1;::::0;5180:6;;5095:92:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5085:102:::0;3469:1725;-1:-1:-1;;;;;;3469:1725:37:o;6895:141::-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;6981:15:37::1;::::0;6965:64:::1;::::0;-1:-1:-1;;;6965:64:37;;7005:10:::1;6965:64;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;6981:15:37;;::::1;::::0;6965:39:::1;::::0;7047:18:53;;6965:64:37::1;6900:274:53::0;2081:198:16;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:16;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:16;;12511:2:53;2161:73:16::1;::::0;::::1;12493:21:53::0;12550:2;12530:18;;;12523:30;12589:34;12569:18;;;12562:62;-1:-1:-1;;;12640:18:53;;;12633:36;12686:19;;2161:73:16::1;12309:402:53::0;2161:73:16::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;5783:273:37:-;1010:11;;;;;;;;;;;;-1:-1:-1;;;1010:11:37;;;;5889:18;;982:10;974:48;;;;-1:-1:-1;;;974:48:37;;;;;;;;:::i;:::-;-1:-1:-1;5952:15:37::1;::::0;5936:113:::1;::::0;-1:-1:-1;;;5936:113:37;;6007:10:::1;5936:113;::::0;::::1;7074:51:53::0;7141:18;;;7134:34;;;-1:-1:-1;;;;;5952:15:37;;::::1;::::0;5936:39:::1;::::0;5983:9:::1;::::0;7047:18:53;;5936:113:37::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:16:-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:16;719:10:28;1422:23:16;1414:68;;;;-1:-1:-1;;;1414:68:16;;12918:2:53;1414:68:16;;;12900:21:53;;;12937:18;;;12930:30;12996:34;12976:18;;;12969:62;13048:18;;1414:68:16;12716:356:53;2433:187:16;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:16;;;-1:-1:-1;;;;;;2541:17:16;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1322:180:44:-;1417:14;1456:39;1469:6;310:3:35;1456:12:44;:39::i;1349:282:31:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:31:o;465:174:44:-;571:7;626:6;602:20;611:11;602:6;:20;:::i;:::-;601:31;;;;:::i;704:427:31:-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:31;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:31;1093:7;-1:-1:-1;;;;;;1060:32:31;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:31:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;13731:33:53;;4433:71:31;;;;13713:52:53;;;;4433:71:31;;;;;;;;;;13686:18:53;;;;4433:71:31;;;;;;;;;-1:-1:-1;;;;;4433:71:31;-1:-1:-1;;;4433:71:31;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:31:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;14:180:53:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:53;;14:180;-1:-1:-1;14:180:53:o;199:127::-;260:10;255:3;251:20;248:1;241:31;291:4;288:1;281:15;315:4;312:1;305:15;331:907;499:4;541:3;530:9;526:19;518:27;;586:6;579:14;572:22;561:9;554:41;637:6;631:13;626:2;615:9;611:18;604:41;699:2;691:6;687:15;681:22;676:2;665:9;661:18;654:50;785:1;781;776:3;772:11;768:19;762:2;754:6;750:15;744:22;740:48;735:2;724:9;720:18;713:76;844:2;836:6;832:15;826:22;820:3;809:9;805:19;798:51;904:3;896:6;892:16;886:23;880:3;869:9;865:19;858:52;965:3;957:6;953:16;947:23;941:3;930:9;926:19;919:52;1018:3;1010:6;1006:16;1000:23;1059:1;1045:12;1042:19;1032:150;;1104:10;1099:3;1095:20;1092:1;1085:31;1139:4;1136:1;1129:15;1167:4;1164:1;1157:15;1032:150;1219:12;1213:3;1202:9;1198:19;1191:41;;331:907;;;;;:::o;1425:250::-;1510:1;1520:113;1534:6;1531:1;1528:13;1520:113;;;1610:11;;;1604:18;1591:11;;;1584:39;1556:2;1549:10;1520:113;;;-1:-1:-1;;1667:1:53;1649:16;;1642:27;1425:250::o;1680:271::-;1722:3;1760:5;1754:12;1787:6;1782:3;1775:19;1803:76;1872:6;1865:4;1860:3;1856:14;1849:4;1842:5;1838:16;1803:76;:::i;:::-;1933:2;1912:15;-1:-1:-1;;1908:29:53;1899:39;;;;1940:4;1895:50;;1680:271;-1:-1:-1;;1680:271:53:o;1956:748::-;2004:3;2032:6;2065:5;2059:12;2054:3;2047:25;2118:4;2111:5;2107:16;2101:23;2160:1;2156;2151:3;2147:11;2143:19;2212:2;2198:12;2194:21;2187:4;2182:3;2178:14;2171:45;2265:4;2258:5;2254:16;2248:23;2241:4;2236:3;2232:14;2225:47;2321:4;2314:5;2310:16;2304:23;2297:4;2292:3;2288:14;2281:47;2389:2;2381:4;2374:5;2370:16;2364:23;2360:32;2353:4;2348:3;2344:14;2337:56;;;2442:4;2435:5;2431:16;2425:23;2418:4;2413:3;2409:14;2402:47;2497:4;2490:5;2486:16;2480:23;2535:2;2528:4;2523:3;2519:14;2512:26;2559:47;2602:2;2597:3;2593:12;2577:14;2559:47;:::i;:::-;2547:59;;;2669:4;2662:5;2658:16;2652:23;2645:31;2638:39;2631:4;2626:3;2622:14;2615:63;2694:4;2687:11;;;1956:748;;;;:::o;2709:335::-;2922:6;2915:14;2908:22;2897:9;2890:41;2967:2;2962;2951:9;2947:18;2940:30;2871:4;2987:51;3034:2;3023:9;3019:18;3011:6;2987:51;:::i;:::-;2979:59;2709:335;-1:-1:-1;;;;2709:335:53:o;3049:131::-;-1:-1:-1;;;;;3124:31:53;;3114:42;;3104:70;;3170:1;3167;3160:12;3185:134;3253:20;;3282:31;3253:20;3282:31;:::i;:::-;3185:134;;;:::o;3324:247::-;3383:6;3436:2;3424:9;3415:7;3411:23;3407:32;3404:52;;;3452:1;3449;3442:12;3404:52;3491:9;3478:23;3510:31;3535:5;3510:31;:::i;3784:127::-;3845:10;3840:3;3836:20;3833:1;3826:31;3876:4;3873:1;3866:15;3900:4;3897:1;3890:15;3916:255;3988:2;3982:9;4030:6;4018:19;;4067:18;4052:34;;4088:22;;;4049:62;4046:88;;;4114:18;;:::i;:::-;4150:2;4143:22;3916:255;:::o;4176:253::-;4248:2;4242:9;4290:4;4278:17;;4325:18;4310:34;;4346:22;;;4307:62;4304:88;;;4372:18;;:::i;4434:275::-;4505:2;4499:9;4570:2;4551:13;;-1:-1:-1;;4547:27:53;4535:40;;4605:18;4590:34;;4626:22;;;4587:62;4584:88;;;4652:18;;:::i;:::-;4688:2;4681:22;4434:275;;-1:-1:-1;4434:275:53:o;4714:187::-;4763:4;4796:18;4788:6;4785:30;4782:56;;;4818:18;;:::i;:::-;-1:-1:-1;4884:2:53;4863:15;-1:-1:-1;;4859:29:53;4890:4;4855:40;;4714:187::o;4906:464::-;4949:5;5002:3;4995:4;4987:6;4983:17;4979:27;4969:55;;5020:1;5017;5010:12;4969:55;5056:6;5043:20;5087:49;5103:32;5132:2;5103:32;:::i;:::-;5087:49;:::i;:::-;5161:2;5152:7;5145:19;5207:3;5200:4;5195:2;5187:6;5183:15;5179:26;5176:35;5173:55;;;5224:1;5221;5214:12;5173:55;5289:2;5282:4;5274:6;5270:17;5263:4;5254:7;5250:18;5237:55;5337:1;5312:16;;;5330:4;5308:27;5301:38;;;;5316:7;4906:464;-1:-1:-1;;;4906:464:53:o;5375:118::-;5461:5;5454:13;5447:21;5440:5;5437:32;5427:60;;5483:1;5480;5473:12;5498:128;5563:20;;5592:28;5563:20;5592:28;:::i;5631:1039::-;5714:6;5767:2;5755:9;5746:7;5742:23;5738:32;5735:52;;;5783:1;5780;5773:12;5735:52;5823:9;5810:23;5852:18;5893:2;5885:6;5882:14;5879:34;;;5909:1;5906;5899:12;5879:34;5932:22;;;;5988:6;5970:16;;;5966:29;5963:49;;;6008:1;6005;5998:12;5963:49;6034:22;;:::i;:::-;6092:2;6079:16;6072:5;6065:31;6128;6155:2;6151;6147:11;6128:31;:::i;:::-;6123:2;6116:5;6112:14;6105:55;6213:2;6209;6205:11;6192:25;6187:2;6180:5;6176:14;6169:49;6271:2;6267;6263:11;6250:25;6245:2;6238:5;6234:14;6227:49;6309:32;6336:3;6332:2;6328:12;6309:32;:::i;:::-;6303:3;6296:5;6292:15;6285:57;6396:3;6392:2;6388:12;6375:26;6369:3;6362:5;6358:15;6351:51;6448:3;6444:2;6440:12;6427:26;6478:2;6468:8;6465:16;6462:36;;;6494:1;6491;6484:12;6462:36;6531:45;6568:7;6557:8;6553:2;6549:17;6531:45;:::i;:::-;6525:3;6518:5;6514:15;6507:70;;6610:29;6634:3;6630:2;6626:12;6610:29;:::i;:::-;6604:3;6593:15;;6586:54;6597:5;5631:1039;-1:-1:-1;;;;;5631:1039:53:o;6675:220::-;6824:2;6813:9;6806:21;6787:4;6844:45;6885:2;6874:9;6870:18;6862:6;6844:45;:::i;7179:132::-;7255:13;;7277:28;7255:13;7277:28;:::i;7316:138::-;7395:13;;7417:31;7395:13;7417:31;:::i;7459:1013::-;7562:6;7570;7614:9;7605:7;7601:23;7644:3;7640:2;7636:12;7633:32;;;7661:1;7658;7651:12;7633:32;7693:9;7687:16;7712:28;7734:5;7712:28;:::i;:::-;7759:5;-1:-1:-1;7798:4:53;-1:-1:-1;;7780:16:53;;7776:27;7773:47;;;7816:1;7813;7806:12;7773:47;;7844:22;;:::i;:::-;7912:2;7901:9;7897:18;7891:25;7882:7;7875:42;7972:2;7961:9;7957:18;7951:25;7946:2;7937:7;7933:16;7926:51;8022:2;8011:9;8007:18;8001:25;8035:33;8060:7;8035:33;:::i;:::-;8102:7;8097:2;8088:7;8084:16;8077:33;;8165:3;8154:9;8150:19;8144:26;8139:2;8130:7;8126:16;8119:52;8227:3;8216:9;8212:19;8206:26;8200:3;8191:7;8187:17;8180:53;8289:3;8278:9;8274:19;8268:26;8262:3;8253:7;8249:17;8242:53;8340:4;8329:9;8325:20;8319:27;8377:1;8368:7;8365:14;8355:42;;8393:1;8390;8383:12;8355:42;8426:3;8413:17;;8406:34;7459:1013;;8417:7;;-1:-1:-1;7459:1013:53;;-1:-1:-1;;7459:1013:53:o;8477:184::-;8547:6;8600:2;8588:9;8579:7;8575:23;8571:32;8568:52;;;8616:1;8613;8606:12;8568:52;-1:-1:-1;8639:16:53;;8477:184;-1:-1:-1;8477:184:53:o;8666:443::-;8720:5;8773:3;8766:4;8758:6;8754:17;8750:27;8740:55;;8791:1;8788;8781:12;8740:55;8820:6;8814:13;8851:49;8867:32;8896:2;8867:32;:::i;8851:49::-;8925:2;8916:7;8909:19;8971:3;8964:4;8959:2;8951:6;8947:15;8943:26;8940:35;8937:55;;;8988:1;8985;8978:12;8937:55;9001:77;9075:2;9068:4;9059:7;9055:18;9048:4;9040:6;9036:17;9001:77;:::i;9114:1194::-;9214:6;9222;9275:2;9263:9;9254:7;9250:23;9246:32;9243:52;;;9291:1;9288;9281:12;9243:52;9323:9;9317:16;9342:28;9364:5;9342:28;:::i;:::-;9438:2;9423:18;;9417:25;9389:5;;-1:-1:-1;9461:18:53;9491:14;;;9488:34;;;9518:1;9515;9508:12;9488:34;9541:22;;;;9597:6;9579:16;;;9575:29;9572:49;;;9617:1;9614;9607:12;9572:49;9645:22;;:::i;:::-;9698:2;9692:9;9683:7;9676:26;9736:42;9774:2;9770;9766:11;9736:42;:::i;:::-;9731:2;9722:7;9718:16;9711:68;9827:2;9823;9819:11;9813:18;9808:2;9799:7;9795:16;9788:44;9880:2;9876;9872:11;9866:18;9861:2;9852:7;9848:16;9841:44;9920:43;9958:3;9954:2;9950:12;9920:43;:::i;:::-;9914:3;9905:7;9901:17;9894:70;10013:3;10009:2;10005:12;9999:19;9993:3;9984:7;9980:17;9973:46;10058:3;10054:2;10050:12;10044:19;10088:2;10078:8;10075:16;10072:36;;;10104:1;10101;10094:12;10072:36;10143:56;10191:7;10180:8;10176:2;10172:17;10143:56;:::i;:::-;10137:3;10128:7;10124:17;10117:83;;10235:40;10270:3;10266:2;10262:12;10235:40;:::i;:::-;10229:3;10220:7;10216:17;10209:67;10295:7;10285:17;;;;;9114:1194;;;;;:::o;11375:245::-;11442:6;11495:2;11483:9;11474:7;11470:23;11466:32;11463:52;;;11511:1;11508;11501:12;11463:52;11543:9;11537:16;11562:28;11584:5;11562:28;:::i;12050:254::-;12227:2;12216:9;12209:21;12190:4;12247:51;12294:2;12283:9;12279:18;12271:6;12247:51;:::i;13077:265::-;13117:7;13183:1;13179;13175:6;13171:14;13168:1;13165:21;13160:1;13153:9;13146:17;13142:45;13139:168;;;13229:10;13224:3;13220:20;13217:1;13210:31;13264:4;13261:1;13254:15;13292:4;13289:1;13282:15;13139:168;-1:-1:-1;13327:9:53;;13077:265::o;13347:217::-;13387:1;13413;13403:132;;13457:10;13452:3;13448:20;13445:1;13438:31;13492:4;13489:1;13482:15;13520:4;13517:1;13510:15;13403:132;-1:-1:-1;13549:9:53;;13347:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(uint256)": "40e58ee5",
    "commit(uint256)": "f4f98ad5",
    "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": "c01fd3f7",
    "finalize(uint256)": "05261aea",
    "getEscrowBalance(address)": "6374b11b",
    "getExchange(uint256)": "0b9d5847",
    "getOffer(uint256)": "4579268a",
    "getProtocolBalance()": "14e7c922",
    "getSellerDeposit(uint256)": "88106323",
    "initialize(address)": "c4d66de8",
    "owner()": "8da5cb5b",
    "redeem(uint256)": "db006a75",
    "renounceOwnership()": "715018a6",
    "revoke(uint256)": "20c5429b",
    "transferOwnership(address)": "f2fde38b",
    "voidOffer(uint256)": "4915907b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"}],\"name\":\"createOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"getEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"disputeBy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalizedDate\",\"type\":\"uint256\"},{\"internalType\":\"enum BionetTypes.ExchangeState\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct BionetTypes.Exchange\",\"name\":\"exchange\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"getOffer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"offer\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProtocolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"getSellerDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"voidOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Main entry way to the protocol. Acts as a proxy. Primarily doing guard checks and forwarding the caller to the Exchange. Contracts such as BionetExchange will only allow calls from this contract.\",\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"commit(uint256)\":{\"details\":\"Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.\",\"params\":{\"_offerId\":\"to commit to\"},\"returns\":{\"exchangeId\":\"of the new exchange\"}},\"createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))\":{\"details\":\"Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.\",\"params\":{\"_offer\":\"information\"},\"returns\":{\"offerId\":\"of the offer\"}},\"finalize(uint256)\":{\"details\":\"Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"getEscrowBalance(address)\":{\"details\":\"Return the escrow balance of the given account\",\"params\":{\"_account\":\"to check\"},\"returns\":{\"bal\":\"of the account\"}},\"getExchange(uint256)\":{\"details\":\"Get an exchange for the given ID\",\"params\":{\"_exchangeId\":\"of the exchange\"},\"returns\":{\"exchange\":\"information\",\"exists\":\"true if the exchange exists\"}},\"getOffer(uint256)\":{\"details\":\"Get an offer for the given ID\",\"params\":{\"_offerId\":\"of the offer\"},\"returns\":{\"exists\":\"true if the offer exists\",\"offer\":\"information\"}},\"getProtocolBalance()\":{\"details\":\"Get the balance of fees collected for the protocol\",\"returns\":{\"bal\":\"- the balance\"}},\"getSellerDeposit(uint256)\":{\"details\":\"Get the required deposit of a seller creating a new offer.\",\"params\":{\"_price\":\"to purchase the offer\"},\"returns\":{\"amt\":\"- the cost\"}},\"initialize(address)\":{\"details\":\"Called after default contructor to set needed addresses\",\"params\":{\"_exchange\":\"address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256)\":{\"details\":\"Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.\",\"params\":{\"_exchangeId\":\"of the exchange to cancel\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(uint256)\":{\"details\":\"Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.\",\"params\":{\"_exchangeId\":\"of the exchange to revoke\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voidOffer(uint256)\":{\"details\":\"Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.\",\"params\":{\"_offerId\":\"to void\"}},\"withdraw()\":{\"details\":\"Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BionetRouter.sol\":\"BionetRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b\",\"dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/BionetConstants.sol\":{\"keccak256\":\"0x6bc440c41ebad1cc62019bdf8a930f0a57a7bb4026db3bdfc4cc6bdc42ea2302\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b8e3b09d0bbaf3555baf40f1f461eea6df0de6284868932dfaef4fd587c9fe05\",\"dweb:/ipfs/QmYKwhqJ7fxe2Qza3mpMQKYX83xAmbzU2iu2cKVqJuaTVS\"]},\"src/BionetRouter.sol\":{\"keccak256\":\"0x465cdeff8466abf95388958281b39f9276bc749524e3eea205eee913b1ce2e63\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dd7d21aa63aee67754e9bc7ca85e1e6a35493a3a373de6692dfd9a66d580400a\",\"dweb:/ipfs/QmYANMatkPoGTySbxfZh6mKkxaW5xWhL3Vak77pybTPjsX\"]},\"src/BionetTypes.sol\":{\"keccak256\":\"0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61\",\"dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1\"]},\"src/interfaces/IBionetExchange.sol\":{\"keccak256\":\"0x8b530c98b4413511053ee1a2ea424a24b6034855d4d88f8c46901cdd71c7780d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8b2b52f4ffcf77f84ee7841867ef616d1bb61a5d38626a98c28ce87d8ed34b2c\",\"dweb:/ipfs/QmddmKsVR9j1QyDAe2f239AY6ip7ex3vRV9bczks8aAVAV\"]},\"src/interfaces/IBionetRouter.sol\":{\"keccak256\":\"0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514\",\"dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y\"]},\"src/interfaces/IBionetVoucher.sol\":{\"keccak256\":\"0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1\",\"dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y\"]},\"src/libs/FundsLib.sol\":{\"keccak256\":\"0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54\",\"dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "commit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "_offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "createOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExchange",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Exchange",
              "name": "exchange",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "redeemBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "disputeBy",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "finalizedDate",
                  "type": "uint256"
                },
                {
                  "internalType": "enum BionetTypes.ExchangeState",
                  "name": "state",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getOffer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            },
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtocolBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_price",
              "type": "uint256"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSellerDeposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "amt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_exchange",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidOffer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancel(uint256)": {
            "details": "Cancel a committment. Called by the buyer. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "commit(uint256)": {
            "details": "Commit to purchase. Creates a new exchange in the 'committed' state. Called by buyer. The buyer is expected to pay the price here.",
            "params": {
              "_offerId": "to commit to"
            },
            "returns": {
              "exchangeId": "of the new exchange"
            }
          },
          "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": {
            "details": "Create a new offer for a seller. The seller is expected to pay the appropriate deposit here. Can revert for several reasons.",
            "params": {
              "_offer": "information"
            },
            "returns": {
              "offerId": "of the offer"
            }
          },
          "finalize(uint256)": {
            "details": "Finalize the exchange. Usually means the buyer is happy. this will close out the exchange and release funds to the parties for withdrawal.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "getEscrowBalance(address)": {
            "details": "Return the escrow balance of the given account",
            "params": {
              "_account": "to check"
            },
            "returns": {
              "bal": "of the account"
            }
          },
          "getExchange(uint256)": {
            "details": "Get an exchange for the given ID",
            "params": {
              "_exchangeId": "of the exchange"
            },
            "returns": {
              "exchange": "information",
              "exists": "true if the exchange exists"
            }
          },
          "getOffer(uint256)": {
            "details": "Get an offer for the given ID",
            "params": {
              "_offerId": "of the offer"
            },
            "returns": {
              "exists": "true if the offer exists",
              "offer": "information"
            }
          },
          "getProtocolBalance()": {
            "details": "Get the balance of fees collected for the protocol",
            "returns": {
              "bal": "- the balance"
            }
          },
          "getSellerDeposit(uint256)": {
            "details": "Get the required deposit of a seller creating a new offer.",
            "params": {
              "_price": "to purchase the offer"
            },
            "returns": {
              "amt": "- the cost"
            }
          },
          "initialize(address)": {
            "details": "Called after default contructor to set needed addresses",
            "params": {
              "_exchange": "address"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "redeem(uint256)": {
            "details": "Redeem a Voucher. Called by the buyer.  This signals to the seller that the buyer is ready for the asset.",
            "params": {
              "_exchangeId": "of the exchange to cancel"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revoke(uint256)": {
            "details": "Revoke a committment. Called by the seller. This will release funds to parties based on the fee schedule.",
            "params": {
              "_exchangeId": "of the exchange to revoke"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "voidOffer(uint256)": {
            "details": "Called by seller to void an offer. This should remove the offer from the market UI.  Will not impact existing exchanges against the offer.",
            "params": {
              "_offerId": "to void"
            }
          },
          "withdraw()": {
            "details": "Withdraw ether from the exchange.  Withdraws will only send funds that have been released by the protocol."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BionetRouter.sol": "BionetRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46",
        "urls": [
          "bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b",
          "dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/BionetConstants.sol": {
        "keccak256": "0x6bc440c41ebad1cc62019bdf8a930f0a57a7bb4026db3bdfc4cc6bdc42ea2302",
        "urls": [
          "bzz-raw://b8e3b09d0bbaf3555baf40f1f461eea6df0de6284868932dfaef4fd587c9fe05",
          "dweb:/ipfs/QmYKwhqJ7fxe2Qza3mpMQKYX83xAmbzU2iu2cKVqJuaTVS"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetRouter.sol": {
        "keccak256": "0x465cdeff8466abf95388958281b39f9276bc749524e3eea205eee913b1ce2e63",
        "urls": [
          "bzz-raw://dd7d21aa63aee67754e9bc7ca85e1e6a35493a3a373de6692dfd9a66d580400a",
          "dweb:/ipfs/QmYANMatkPoGTySbxfZh6mKkxaW5xWhL3Vak77pybTPjsX"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetTypes.sol": {
        "keccak256": "0xce2d2198478b421e9af5764bd1462ae8e6bb24e77cbdda645f088da532945a2c",
        "urls": [
          "bzz-raw://6fb2628c9ea6d837391d89b25a528c4b40cd29190f9d39c1d3350c25d347fd61",
          "dweb:/ipfs/QmV8wGR7Gn2tjz1X99GdDHejUeq771bh1nWdyXyTLPoTY1"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetExchange.sol": {
        "keccak256": "0x8b530c98b4413511053ee1a2ea424a24b6034855d4d88f8c46901cdd71c7780d",
        "urls": [
          "bzz-raw://8b2b52f4ffcf77f84ee7841867ef616d1bb61a5d38626a98c28ce87d8ed34b2c",
          "dweb:/ipfs/QmddmKsVR9j1QyDAe2f239AY6ip7ex3vRV9bczks8aAVAV"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetRouter.sol": {
        "keccak256": "0x548b50d662dab868d46d4db0c9245e2c81d20eff395b31a2c71d25105c23ec9e",
        "urls": [
          "bzz-raw://924a7a7b363af5dc8ab34a5f9aa22c174c17648c3f2a16b807fa6b0d60161514",
          "dweb:/ipfs/QmVagXNahLJ5PvHkQGrooHhjSk2T9mRde72ebYAWZegQ4Y"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetVoucher.sol": {
        "keccak256": "0x510d88f556f7aab0ae31c0af90e8dfb2342221beaa72fad82cfdfa454a40e36a",
        "urls": [
          "bzz-raw://6005fdcccb50e945d5fe3f24ec0c7472d55280179d1b246a357d1627c9f12de1",
          "dweb:/ipfs/QmdnqgmfL7xeh2Fz3tkKW1bXETWKYiAdjD2HzVDuaSZn3y"
        ],
        "license": "Apache-2.0"
      },
      "src/libs/FundsLib.sol": {
        "keccak256": "0x4ef64f11d28eb56cff685a991f51c3822226b52cdb4949c98a4babf97ce89914",
        "urls": [
          "bzz-raw://85f1257575e961d301db922b66b434836f644674fd720feb0221ac41c5dcfc54",
          "dweb:/ipfs/Qmb4GB93LgPmrKQYpzYFayaAgN59DGQPUP1q5ccqcknDNN"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BionetRouter.sol",
    "id": 32462,
    "exportedSymbols": {
      "BAD_ADDRESS": [
        30968
      ],
      "BAD_VALUE_TRANSFER": [
        31007
      ],
      "BUYER_NOT_CALLER": [
        30974
      ],
      "BionetRouter": [
        32461
      ],
      "BionetTypes": [
        32508
      ],
      "CANCEL_REVOKE_FEE": [
        30957
      ],
      "ERC165Checker": [
        29952
      ],
      "EXCHANGE_404": [
        31010
      ],
      "EXPECTED_COMMIT_STATE": [
        31013
      ],
      "EXPECTED_REDEEMED_STATE": [
        31016
      ],
      "FundsLib": [
        33358
      ],
      "IBionetExchange": [
        32774
      ],
      "IBionetRouter": [
        32866
      ],
      "IBionetVoucher": [
        32891
      ],
      "IERC1155": [
        28015
      ],
      "INSUFFICIENT_FUNDS": [
        30995
      ],
      "INVALID_COMMIT_SELLER": [
        31004
      ],
      "INVALID_PRICE": [
        30977
      ],
      "INVALID_QTY": [
        30980
      ],
      "MUST_BE_GT_ZERO": [
        30998
      ],
      "NOT_ASSET": [
        30983
      ],
      "NOT_OWNER": [
        30986
      ],
      "NO_OFFER": [
        31001
      ],
      "OFFER_VOIDED": [
        30989
      ],
      "Ownable": [
        26616
      ],
      "PROTOCOL_FEE": [
        30954
      ],
      "SELLER_NOT_CALLER": [
        30971
      ],
      "UNAUTHORIZED_ACCESS": [
        30965
      ],
      "VALUE_GT_ZERO": [
        30992
      ],
      "WEEK": [
        30962
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:7372:37",
    "nodes": [
      {
        "id": 32053,
        "nodeType": "PragmaDirective",
        "src": "39:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 32054,
        "nodeType": "ImportDirective",
        "src": "65:27:37",
        "nodes": [],
        "absolutePath": "src/BionetTypes.sol",
        "file": "./BionetTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 32509,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32055,
        "nodeType": "ImportDirective",
        "src": "93:31:37",
        "nodes": [],
        "absolutePath": "src/BionetConstants.sol",
        "file": "./BionetConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 31017,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32057,
        "nodeType": "ImportDirective",
        "src": "126:45:37",
        "nodes": [],
        "absolutePath": "src/libs/FundsLib.sol",
        "file": "./libs/FundsLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 33359,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32056,
              "name": "FundsLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33358,
              "src": "134:8:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32059,
        "nodeType": "ImportDirective",
        "src": "172:61:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetRouter.sol",
        "file": "./interfaces/IBionetRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 32867,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32058,
              "name": "IBionetRouter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32866,
              "src": "180:13:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32061,
        "nodeType": "ImportDirective",
        "src": "234:63:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetVoucher.sol",
        "file": "./interfaces/IBionetVoucher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 32892,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32060,
              "name": "IBionetVoucher",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32891,
              "src": "242:14:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32063,
        "nodeType": "ImportDirective",
        "src": "298:65:37",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetExchange.sol",
        "file": "./interfaces/IBionetExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 32775,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32062,
              "name": "IBionetExchange",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32774,
              "src": "306:15:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32065,
        "nodeType": "ImportDirective",
        "src": "365:56:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 26617,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32064,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26616,
              "src": "373:7:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32067,
        "nodeType": "ImportDirective",
        "src": "422:65:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "file": "openzeppelin/token/ERC1155/IERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 28016,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32066,
              "name": "IERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28015,
              "src": "430:8:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32069,
        "nodeType": "ImportDirective",
        "src": "488:81:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "openzeppelin/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32462,
        "sourceUnit": 29953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 32068,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29952,
              "src": "496:13:37",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 32461,
        "nodeType": "ContractDefinition",
        "src": "788:6622:37",
        "nodes": [
          {
            "id": 32076,
            "nodeType": "VariableDeclaration",
            "src": "875:23:37",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchangeAddress",
            "nameLocation": "883:15:37",
            "scope": 32461,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32075,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "875:7:37",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32091,
            "nodeType": "ModifierDefinition",
            "src": "939:101:37",
            "nodes": [],
            "body": {
              "id": 32090,
              "nodeType": "Block",
              "src": "964:76:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32079,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "982:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "986:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "982:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1004:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "996:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32081,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "996:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "996:12:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "982:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32086,
                        "name": "BAD_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30968,
                        "src": "1010:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32078,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "974:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "974:48:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32088,
                  "nodeType": "ExpressionStatement",
                  "src": "974:48:37"
                },
                {
                  "id": 32089,
                  "nodeType": "PlaceholderStatement",
                  "src": "1032:1:37"
                }
              ]
            },
            "name": "noZeroAddress",
            "nameLocation": "948:13:37",
            "parameters": {
              "id": 32077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "961:2:37"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32102,
            "nodeType": "FunctionDefinition",
            "src": "1148:92:37",
            "nodes": [],
            "body": {
              "id": 32101,
              "nodeType": "Block",
              "src": "1196:44:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32097,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32076,
                      "src": "1206:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32098,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32094,
                      "src": "1224:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1206:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32100,
                  "nodeType": "ExpressionStatement",
                  "src": "1206:27:37"
                }
              ]
            },
            "baseFunctions": [
              32783
            ],
            "documentation": {
              "id": 32092,
              "nodeType": "StructuredDocumentation",
              "src": "1046:97:37",
              "text": "@dev Called after default contructor to set needed addresses\n @param _exchange address"
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1157:10:37",
            "parameters": {
              "id": 32095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32094,
                  "mutability": "mutable",
                  "name": "_exchange",
                  "nameLocation": "1176:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32102,
                  "src": "1168:17:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1168:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1167:19:37"
            },
            "returnParameters": {
              "id": 32096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1196:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32117,
            "nodeType": "FunctionDefinition",
            "src": "1374:113:37",
            "nodes": [],
            "body": {
              "id": 32116,
              "nodeType": "Block",
              "src": "1417:70:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32112,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1469:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1473:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1469:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32109,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "1443:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32108,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "1427:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1427:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1460:8:37",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32741,
                      "src": "1427:41:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1427:53:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32115,
                  "nodeType": "ExpressionStatement",
                  "src": "1427:53:37"
                }
              ]
            },
            "baseFunctions": [
              32858
            ],
            "documentation": {
              "id": 32103,
              "nodeType": "StructuredDocumentation",
              "src": "1246:123:37",
              "text": "@dev Withdraw ether from the exchange.  Withdraws will only\n send funds that have been released by the protocol."
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32106,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32105,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1403:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "1403:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1403:13:37"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1383:8:37",
            "parameters": {
              "id": 32104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1391:2:37"
            },
            "returnParameters": {
              "id": 32107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1417:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32137,
            "nodeType": "FunctionDefinition",
            "src": "1621:212:37",
            "nodes": [],
            "body": {
              "id": 32136,
              "nodeType": "Block",
              "src": "1751:82:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32127,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32125,
                      "src": "1761:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32132,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32120,
                          "src": "1817:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32129,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32076,
                              "src": "1783:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32128,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32774,
                            "src": "1767:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1767:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1800:16:37",
                        "memberName": "getEscrowBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32748,
                        "src": "1767:49:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 32133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1767:59:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1761:65:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32135,
                  "nodeType": "ExpressionStatement",
                  "src": "1761:65:37"
                }
              ]
            },
            "baseFunctions": [
              32865
            ],
            "documentation": {
              "id": 32118,
              "nodeType": "StructuredDocumentation",
              "src": "1493:123:37",
              "text": "@dev Return the escrow balance of the given account\n @param _account to check\n @return bal of the account"
            },
            "functionSelector": "6374b11b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32123,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32122,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1703:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "1703:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "1703:13:37"
              }
            ],
            "name": "getEscrowBalance",
            "nameLocation": "1630:16:37",
            "parameters": {
              "id": 32121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32120,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1655:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32137,
                  "src": "1647:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1647:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1646:18:37"
            },
            "returnParameters": {
              "id": 32126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32125,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "1742:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32137,
                  "src": "1734:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1733:13:37"
            },
            "scope": 32461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32160,
            "nodeType": "FunctionDefinition",
            "src": "2016:261:37",
            "nodes": [],
            "body": {
              "id": 32159,
              "nodeType": "Block",
              "src": "2160:117:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32148,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32143,
                          "src": "2171:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32149,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32146,
                          "src": "2179:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Exchange_$32507_memory_ptr",
                            "typeString": "struct BionetTypes.Exchange memory"
                          }
                        }
                      ],
                      "id": 32150,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2170:18:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32507_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32155,
                          "name": "_exchangeId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32140,
                          "src": "2249:11:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32152,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32076,
                              "src": "2207:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32151,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32774,
                            "src": "2191:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2191:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2224:11:37",
                        "memberName": "getExchange",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32773,
                        "src": "2191:44:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Exchange_$32507_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Exchange memory)"
                        }
                      },
                      "id": 32156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2191:79:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Exchange_$32507_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Exchange memory)"
                      }
                    },
                    "src": "2170:100:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32158,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:100:37"
                }
              ]
            },
            "baseFunctions": [
              32800
            ],
            "documentation": {
              "id": 32138,
              "nodeType": "StructuredDocumentation",
              "src": "1839:172:37",
              "text": "@dev Get an exchange for the given ID\n @param _exchangeId of the exchange\n @return exists true if the exchange exists\n @return exchange information"
            },
            "functionSelector": "0b9d5847",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "2025:11:37",
            "parameters": {
              "id": 32141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32140,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "2045:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32160,
                  "src": "2037:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2037:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2036:21:37"
            },
            "returnParameters": {
              "id": 32147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32143,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2110:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32160,
                  "src": "2105:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32142,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32146,
                  "mutability": "mutable",
                  "name": "exchange",
                  "nameLocation": "2146:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32160,
                  "src": "2118:36:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Exchange_$32507_memory_ptr",
                    "typeString": "struct BionetTypes.Exchange"
                  },
                  "typeName": {
                    "id": 32145,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32144,
                      "name": "BionetTypes.Exchange",
                      "nameLocations": [
                        "2118:11:37",
                        "2130:8:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32507,
                      "src": "2118:20:37"
                    },
                    "referencedDeclaration": 32507,
                    "src": "2118:20:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Exchange_$32507_storage_ptr",
                      "typeString": "struct BionetTypes.Exchange"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:51:37"
            },
            "scope": 32461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32183,
            "nodeType": "FunctionDefinition",
            "src": "2445:218:37",
            "nodes": [],
            "body": {
              "id": 32182,
              "nodeType": "Block",
              "src": "2577:86:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 32171,
                          "name": "exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32166,
                          "src": "2588:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 32172,
                          "name": "offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32169,
                          "src": "2596:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "id": 32173,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2587:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32491_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32178,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32163,
                          "src": "2647:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32175,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32076,
                              "src": "2621:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32174,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32774,
                            "src": "2605:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2605:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2638:8:37",
                        "memberName": "getOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32763,
                        "src": "2605:41:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$_t_struct$_Offer_$32491_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (bool,struct BionetTypes.Offer memory)"
                        }
                      },
                      "id": 32179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2605:51:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_Offer_$32491_memory_ptr_$",
                        "typeString": "tuple(bool,struct BionetTypes.Offer memory)"
                      }
                    },
                    "src": "2587:69:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32181,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:69:37"
                }
              ]
            },
            "baseFunctions": [
              32810
            ],
            "documentation": {
              "id": 32161,
              "nodeType": "StructuredDocumentation",
              "src": "2283:157:37",
              "text": "@dev Get an offer for the given ID\n @param _offerId of the offer\n @return exists true if the offer exists\n @return offer information"
            },
            "functionSelector": "4579268a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOffer",
            "nameLocation": "2454:8:37",
            "parameters": {
              "id": 32164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32163,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "2471:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32183,
                  "src": "2463:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:18:37"
            },
            "returnParameters": {
              "id": 32170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32166,
                  "mutability": "mutable",
                  "name": "exists",
                  "nameLocation": "2533:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32183,
                  "src": "2528:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 32165,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32169,
                  "mutability": "mutable",
                  "name": "offer",
                  "nameLocation": "2566:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32183,
                  "src": "2541:30:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32168,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32167,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "2541:11:37",
                        "2553:5:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32491,
                      "src": "2541:17:37"
                    },
                    "referencedDeclaration": 32491,
                    "src": "2541:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32491_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:45:37"
            },
            "scope": 32461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32199,
            "nodeType": "FunctionDefinition",
            "src": "2816:168:37",
            "nodes": [],
            "body": {
              "id": 32198,
              "nodeType": "Block",
              "src": "2922:62:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32191,
                      "name": "amt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32189,
                      "src": "2932:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32194,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32186,
                          "src": "2970:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 32192,
                          "name": "FundsLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33358,
                          "src": "2938:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FundsLib_$33358_$",
                            "typeString": "type(library FundsLib)"
                          }
                        },
                        "id": 32193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2947:22:37",
                        "memberName": "calculateSellerDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33357,
                        "src": "2938:31:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) pure returns (uint256)"
                        }
                      },
                      "id": 32195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2938:39:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2932:45:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32197,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:45:37"
                }
              ]
            },
            "baseFunctions": [
              32790
            ],
            "documentation": {
              "id": 32184,
              "nodeType": "StructuredDocumentation",
              "src": "2669:142:37",
              "text": "@dev Get the required deposit of a seller creating a new offer.\n @param _price to purchase the offer\n @return amt - the cost"
            },
            "functionSelector": "88106323",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellerDeposit",
            "nameLocation": "2825:16:37",
            "parameters": {
              "id": 32187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32186,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "2850:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32199,
                  "src": "2842:14:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2841:16:37"
            },
            "returnParameters": {
              "id": 32190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32189,
                  "mutability": "mutable",
                  "name": "amt",
                  "nameLocation": "2913:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32199,
                  "src": "2905:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:13:37"
            },
            "scope": 32461,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32214,
            "nodeType": "FunctionDefinition",
            "src": "3088:142:37",
            "nodes": [],
            "body": {
              "id": 32213,
              "nodeType": "Block",
              "src": "3154:76:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32205,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32203,
                      "src": "3164:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32207,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32076,
                              "src": "3186:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32206,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32774,
                            "src": "3170:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3170:32:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3203:18:37",
                        "memberName": "getProtocolBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32753,
                        "src": "3170:51:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 32210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3170:53:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3164:59:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32212,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:59:37"
                }
              ]
            },
            "baseFunctions": [
              32815
            ],
            "documentation": {
              "id": 32200,
              "nodeType": "StructuredDocumentation",
              "src": "2990:93:37",
              "text": "@dev Get the balance of fees collected for the protocol\n @return bal - the balance"
            },
            "functionSelector": "14e7c922",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtocolBalance",
            "nameLocation": "3097:18:37",
            "parameters": {
              "id": 32201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3115:2:37"
            },
            "returnParameters": {
              "id": 32204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32203,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "3149:3:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32214,
                  "src": "3141:11:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3141:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3140:13:37"
            },
            "scope": 32461,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32345,
            "nodeType": "FunctionDefinition",
            "src": "3469:1725:37",
            "nodes": [],
            "body": {
              "id": 32344,
              "nodeType": "Block",
              "src": "3616:1578:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32226
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32226,
                      "mutability": "mutable",
                      "name": "deposit",
                      "nameLocation": "3677:7:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32344,
                      "src": "3669:15:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32225,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3669:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32232,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32229,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32218,
                          "src": "3719:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32230,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3726:5:37",
                        "memberName": "price",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32480,
                        "src": "3719:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32227,
                        "name": "FundsLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33358,
                        "src": "3687:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FundsLib_$33358_$",
                          "typeString": "type(library FundsLib)"
                        }
                      },
                      "id": 32228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3696:22:37",
                      "memberName": "calculateSellerDeposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33357,
                      "src": "3687:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256)"
                      }
                    },
                    "id": 32231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3687:45:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3669:63:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3750:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3754:5:37",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3750:9:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 32236,
                          "name": "deposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32226,
                          "src": "3763:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3750:20:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e74206465706f736974",
                        "id": 32238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3772:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8fcaef683f0d1614f3145343efc9a3d2cb7c83cead426db44ecb090c666d824",
                          "typeString": "literal_string \"Insufficient deposit\""
                        },
                        "value": "Insufficient deposit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8fcaef683f0d1614f3145343efc9a3d2cb7c83cead426db44ecb090c666d824",
                          "typeString": "literal_string \"Insufficient deposit\""
                        }
                      ],
                      "id": 32233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3742:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3742:53:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32240,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:53:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32242,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32218,
                            "src": "3856:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32243,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3863:6:37",
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32478,
                          "src": "3856:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 32244,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3873:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3877:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3873:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3856:27:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32247,
                        "name": "SELLER_NOT_CALLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30971,
                        "src": "3885:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3848:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3848:55:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32249,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:55:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32251,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32218,
                            "src": "3921:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32252,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3928:17:37",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32482,
                          "src": "3921:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3948:1:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3921:28:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32255,
                        "name": "INVALID_QTY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30980,
                        "src": "3951:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32250,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3913:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3913:50:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32257,
                  "nodeType": "ExpressionStatement",
                  "src": "3913:50:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32259,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32218,
                            "src": "3981:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32260,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3988:10:37",
                          "memberName": "assetToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32484,
                          "src": "3981:17:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4010:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4002:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32261,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4002:7:37",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4002:12:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3981:33:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32266,
                        "name": "BAD_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30968,
                        "src": "4016:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32258,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3973:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3973:55:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32268,
                  "nodeType": "ExpressionStatement",
                  "src": "3973:55:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 32273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32270,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32218,
                            "src": "4046:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4053:6:37",
                          "memberName": "voided",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32490,
                          "src": "4046:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 32272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4063:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4046:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32274,
                        "name": "OFFER_VOIDED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30989,
                        "src": "4070:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32269,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4038:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4038:45:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32276,
                  "nodeType": "ExpressionStatement",
                  "src": "4038:45:37"
                },
                {
                  "assignments": [
                    32278
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32278,
                      "mutability": "mutable",
                      "name": "isValidAsset",
                      "nameLocation": "4154:12:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32344,
                      "src": "4149:17:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32277,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4149:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32288,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32281,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32218,
                          "src": "4214:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32282,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4221:10:37",
                        "memberName": "assetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32484,
                        "src": "4214:17:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32284,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28015,
                              "src": "4250:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            ],
                            "id": 32283,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "4245:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4245:14:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$28015",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "4260:11:37",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "4245:26:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 32279,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29952,
                        "src": "4169:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$29952_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 32280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4183:17:37",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29808,
                      "src": "4169:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 32287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4169:112:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4149:132:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32290,
                        "name": "isValidAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32278,
                        "src": "4299:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32291,
                        "name": "NOT_ASSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30983,
                        "src": "4313:9:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4291:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4291:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32293,
                  "nodeType": "ExpressionStatement",
                  "src": "4291:32:37"
                },
                {
                  "assignments": [
                    32295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32295,
                      "mutability": "mutable",
                      "name": "numTokensOwned",
                      "nameLocation": "4424:14:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32344,
                      "src": "4416:22:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4416:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32306,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32301,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4492:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4496:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4492:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32303,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32218,
                          "src": "4516:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32304,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4523:12:37",
                        "memberName": "assetTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32486,
                        "src": "4516:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32297,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32218,
                              "src": "4450:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32298,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4457:10:37",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32484,
                            "src": "4450:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32296,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28015,
                          "src": "4441:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4441:27:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28015",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4469:9:37",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27953,
                      "src": "4441:37:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 32305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4441:104:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4416:129:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32308,
                          "name": "numTokensOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32295,
                          "src": "4576:14:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 32309,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32218,
                            "src": "4594:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4601:17:37",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32482,
                          "src": "4594:24:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4576:42:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f66666572",
                        "id": 32312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4632:37:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445e5d7028dc6b1af197aecd6ba56454330d9fcde9d26bc225df3efd23ce15e7",
                          "typeString": "literal_string \"Don't own enough IP tokens to offer\""
                        },
                        "value": "Don't own enough IP tokens to offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445e5d7028dc6b1af197aecd6ba56454330d9fcde9d26bc225df3efd23ce15e7",
                          "typeString": "literal_string \"Don't own enough IP tokens to offer\""
                        }
                      ],
                      "id": 32307,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4555:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4555:124:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32314,
                  "nodeType": "ExpressionStatement",
                  "src": "4555:124:37"
                },
                {
                  "assignments": [
                    32316
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32316,
                      "mutability": "mutable",
                      "name": "approvedForExchange",
                      "nameLocation": "4761:19:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32344,
                      "src": "4756:24:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32315,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4756:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32326,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32322,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32218,
                          "src": "4841:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32323,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4848:6:37",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32478,
                        "src": "4841:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32324,
                        "name": "exchangeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32076,
                        "src": "4868:15:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32318,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32218,
                              "src": "4792:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32319,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4799:10:37",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32484,
                            "src": "4792:17:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32317,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28015,
                          "src": "4783:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28015_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4783:27:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28015",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4811:16:37",
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27984,
                      "src": "4783:44:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 32325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4783:110:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4756:137:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32328,
                        "name": "approvedForExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32316,
                        "src": "4924:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206d75737420626520617070726f76656420746f207472616e7366657220796f7572204950204e465420746f6b656e73",
                        "id": 32329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4957:58:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de686a8f627d201e08213e9a387c3933066ab07570e9c8b4fbb08c0b59d4b3b9",
                          "typeString": "literal_string \"Exchange must be approved to transfer your IP NFT tokens\""
                        },
                        "value": "Exchange must be approved to transfer your IP NFT tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de686a8f627d201e08213e9a387c3933066ab07570e9c8b4fbb08c0b59d4b3b9",
                          "typeString": "literal_string \"Exchange must be approved to transfer your IP NFT tokens\""
                        }
                      ],
                      "id": 32327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4903:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:122:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32331,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:122:37"
                },
                {
                  "expression": {
                    "id": 32342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32332,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32223,
                      "src": "5085:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32340,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32218,
                          "src": "5180:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32334,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32076,
                                "src": "5111:15:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32333,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32774,
                              "src": "5095:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5095:32:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5128:11:37",
                          "memberName": "createOffer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32692,
                          "src": "5095:44:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32491_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                          }
                        },
                        "id": 32339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32337,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5160:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5164:5:37",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5160:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "5095:84:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_Offer_$32491_memory_ptr_$returns$_t_uint256_$value",
                          "typeString": "function (struct BionetTypes.Offer memory) payable external returns (uint256)"
                        }
                      },
                      "id": 32341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5095:92:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5085:102:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32343,
                  "nodeType": "ExpressionStatement",
                  "src": "5085:102:37"
                }
              ]
            },
            "baseFunctions": [
              32823
            ],
            "documentation": {
              "id": 32215,
              "nodeType": "StructuredDocumentation",
              "src": "3236:228:37",
              "text": "@dev Create a new offer for a seller. The seller is expected\n to pay the appropriate deposit here.\n Can revert for several reasons.\n @param _offer information\n @return offerId of the offer"
            },
            "functionSelector": "c01fd3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32221,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32220,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "3564:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "3564:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "3564:13:37"
              }
            ],
            "name": "createOffer",
            "nameLocation": "3478:11:37",
            "parameters": {
              "id": 32219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32218,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "3515:6:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32345,
                  "src": "3490:31:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32491_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32217,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32216,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "3490:11:37",
                        "3502:5:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32491,
                      "src": "3490:17:37"
                    },
                    "referencedDeclaration": 32491,
                    "src": "3490:17:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32491_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3489:33:37"
            },
            "returnParameters": {
              "id": 32224,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32223,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "3603:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32345,
                  "src": "3595:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3594:17:37"
            },
            "scope": 32461,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32363,
            "nodeType": "FunctionDefinition",
            "src": "5400:141:37",
            "nodes": [],
            "body": {
              "id": 32362,
              "nodeType": "Block",
              "src": "5460:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32357,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5513:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5517:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5513:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32359,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32348,
                        "src": "5525:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32354,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "5486:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32353,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "5470:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5470:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5503:9:37",
                      "memberName": "voidOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32699,
                      "src": "5470:42:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5470:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32361,
                  "nodeType": "ExpressionStatement",
                  "src": "5470:64:37"
                }
              ]
            },
            "baseFunctions": [
              32828
            ],
            "documentation": {
              "id": 32346,
              "nodeType": "StructuredDocumentation",
              "src": "5200:195:37",
              "text": "@dev Called by seller to void an offer. This should remove\n the offer from the market UI.  Will not impact\n existing exchanges against the offer.\n @param _offerId to void"
            },
            "functionSelector": "4915907b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32350,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "5446:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "5446:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "5446:13:37"
              }
            ],
            "name": "voidOffer",
            "nameLocation": "5409:9:37",
            "parameters": {
              "id": 32349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32348,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "5427:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32363,
                  "src": "5419:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32347,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5419:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5418:18:37"
            },
            "returnParameters": {
              "id": 32352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5460:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32388,
            "nodeType": "FunctionDefinition",
            "src": "5783:273:37",
            "nodes": [],
            "body": {
              "id": 32387,
              "nodeType": "Block",
              "src": "5913:143:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32373,
                      "name": "exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32371,
                      "src": "5923:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32381,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6007:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6011:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6007:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32383,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32366,
                          "src": "6031:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32375,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32076,
                                "src": "5952:15:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32374,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32774,
                              "src": "5936:15:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5936:32:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5969:6:37",
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32708,
                          "src": "5936:39:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 32380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32378,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5983:3:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5987:5:37",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "5983:9:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "5936:57:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                          "typeString": "function (address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 32384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5936:113:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5923:126:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32386,
                  "nodeType": "ExpressionStatement",
                  "src": "5923:126:37"
                }
              ]
            },
            "baseFunctions": [
              32835
            ],
            "documentation": {
              "id": 32364,
              "nodeType": "StructuredDocumentation",
              "src": "5547:231:37",
              "text": "@dev Commit to purchase. Creates a new exchange in the 'committed' state.\n Called by buyer. The buyer is expected to pay the price here.\n @param _offerId to commit to\n @return exchangeId of the new exchange"
            },
            "functionSelector": "f4f98ad5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32369,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32368,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "5858:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "5858:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "5858:13:37"
              }
            ],
            "name": "commit",
            "nameLocation": "5792:6:37",
            "parameters": {
              "id": 32367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32366,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "5807:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32388,
                  "src": "5799:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5799:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5798:18:37"
            },
            "returnParameters": {
              "id": 32372,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32371,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "5897:10:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32388,
                  "src": "5889:18:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32370,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5889:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5888:20:37"
            },
            "scope": 32461,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32406,
            "nodeType": "FunctionDefinition",
            "src": "6241:141:37",
            "nodes": [],
            "body": {
              "id": 32405,
              "nodeType": "Block",
              "src": "6301:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32400,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6351:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6355:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6351:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32402,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32391,
                        "src": "6363:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32397,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "6327:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32396,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "6311:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6311:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6344:6:37",
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32715,
                      "src": "6311:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6311:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32404,
                  "nodeType": "ExpressionStatement",
                  "src": "6311:64:37"
                }
              ]
            },
            "baseFunctions": [
              32840
            ],
            "documentation": {
              "id": 32389,
              "nodeType": "StructuredDocumentation",
              "src": "6062:174:37",
              "text": "@dev Cancel a committment. Called by the buyer. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32394,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32393,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6287:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "6287:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6287:13:37"
              }
            ],
            "name": "cancel",
            "nameLocation": "6250:6:37",
            "parameters": {
              "id": 32392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32391,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6265:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32406,
                  "src": "6257:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6257:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6256:21:37"
            },
            "returnParameters": {
              "id": 32395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6301:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32424,
            "nodeType": "FunctionDefinition",
            "src": "6568:141:37",
            "nodes": [],
            "body": {
              "id": 32423,
              "nodeType": "Block",
              "src": "6628:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32418,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6678:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6682:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6678:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32420,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32409,
                        "src": "6690:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32415,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "6654:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32414,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "6638:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6638:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6671:6:37",
                      "memberName": "revoke",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32722,
                      "src": "6638:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6638:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32422,
                  "nodeType": "ExpressionStatement",
                  "src": "6638:64:37"
                }
              ]
            },
            "baseFunctions": [
              32845
            ],
            "documentation": {
              "id": 32407,
              "nodeType": "StructuredDocumentation",
              "src": "6388:175:37",
              "text": "@dev Revoke a committment. Called by the seller. This will\n release funds to parties based on the fee schedule.\n @param _exchangeId of the exchange to revoke"
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32412,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32411,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6614:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "6614:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6614:13:37"
              }
            ],
            "name": "revoke",
            "nameLocation": "6577:6:37",
            "parameters": {
              "id": 32410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32409,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6592:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32424,
                  "src": "6584:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6584:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6583:21:37"
            },
            "returnParameters": {
              "id": 32413,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6628:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32442,
            "nodeType": "FunctionDefinition",
            "src": "6895:141:37",
            "nodes": [],
            "body": {
              "id": 32441,
              "nodeType": "Block",
              "src": "6955:81:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32436,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7005:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7009:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7005:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32438,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32427,
                        "src": "7017:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32433,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "6981:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32432,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "6965:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6965:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6998:6:37",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32729,
                      "src": "6965:39:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:64:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32440,
                  "nodeType": "ExpressionStatement",
                  "src": "6965:64:37"
                }
              ]
            },
            "baseFunctions": [
              32850
            ],
            "documentation": {
              "id": 32425,
              "nodeType": "StructuredDocumentation",
              "src": "6715:175:37",
              "text": "@dev Redeem a Voucher. Called by the buyer.  This signals to\n the seller that the buyer is ready for the asset.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32429,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "6941:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "6941:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "6941:13:37"
              }
            ],
            "name": "redeem",
            "nameLocation": "6904:6:37",
            "parameters": {
              "id": 32428,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32427,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "6919:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32442,
                  "src": "6911:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32426,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6911:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6910:21:37"
            },
            "returnParameters": {
              "id": 32431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6955:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32460,
            "nodeType": "FunctionDefinition",
            "src": "7263:145:37",
            "nodes": [],
            "body": {
              "id": 32459,
              "nodeType": "Block",
              "src": "7325:83:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32454,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7377:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7381:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7377:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32456,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32445,
                        "src": "7389:11:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32451,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32076,
                            "src": "7351:15:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32450,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32774,
                          "src": "7335:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$32774_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7335:32:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$32774",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7368:8:37",
                      "memberName": "finalize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32736,
                      "src": "7335:41:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7335:66:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32458,
                  "nodeType": "ExpressionStatement",
                  "src": "7335:66:37"
                }
              ]
            },
            "baseFunctions": [
              32855
            ],
            "documentation": {
              "id": 32443,
              "nodeType": "StructuredDocumentation",
              "src": "7042:216:37",
              "text": "@dev Finalize the exchange. Usually means the buyer is happy.\n this will close out the exchange and release funds to the parties\n for withdrawal.\n @param _exchangeId of the exchange to cancel"
            },
            "functionSelector": "05261aea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32448,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32447,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "7311:13:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32091,
                  "src": "7311:13:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "7311:13:37"
              }
            ],
            "name": "finalize",
            "nameLocation": "7272:8:37",
            "parameters": {
              "id": 32446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32445,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "7289:11:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32460,
                  "src": "7281:19:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7281:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7280:21:37"
            },
            "returnParameters": {
              "id": 32449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7325:0:37"
            },
            "scope": 32461,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32071,
              "name": "Ownable",
              "nameLocations": [
                "813:7:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26616,
              "src": "813:7:37"
            },
            "id": 32072,
            "nodeType": "InheritanceSpecifier",
            "src": "813:7:37"
          },
          {
            "baseName": {
              "id": 32073,
              "name": "IBionetRouter",
              "nameLocations": [
                "822:13:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32866,
              "src": "822:13:37"
            },
            "id": 32074,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:37"
          }
        ],
        "canonicalName": "BionetRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32070,
          "nodeType": "StructuredDocumentation",
          "src": "571:217:37",
          "text": "@dev Main entry way to the protocol. Acts as a proxy.\n Primarily doing guard checks and forwarding the caller to\n the Exchange. Contracts such as BionetExchange will only\n allow calls from this contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32461,
          32866,
          26616,
          29559
        ],
        "name": "BionetRouter",
        "nameLocation": "797:12:37",
        "scope": 32462,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 37
}