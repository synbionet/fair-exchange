{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "commit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "exchangeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "quantityAvailable",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "assetToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "assetTokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "metadataUri",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "voided",
              "type": "bool"
            }
          ],
          "internalType": "struct BionetTypes.Offer",
          "name": "_offer",
          "type": "tuple"
        }
      ],
      "name": "createOffer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "escrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "bal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "finalize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funds",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_exchange",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_exchangeId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "voidOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61115f8061007e6000396000f3fe6080604052600436106100c25760003560e01c806355af63531161007f578063c01fd3f711610059578063c01fd3f71461020a578063db006a751461022a578063f2fde38b1461024a578063f4f98ad51461026a57600080fd5b806355af63531461019a578063715018a6146101cd5780638da5cb5b146101e257600080fd5b806305261aea146100c757806320c5429b146100e95780633ccfd60b146100fc57806340e58ee514610111578063485cc955146101315780634915907b1461017a575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610db6565b61027d565b005b6100e76100f7366004610db6565b61032f565b34801561010857600080fd5b506100e76103d9565b34801561011d57600080fd5b506100e761012c366004610db6565b610479565b34801561013d57600080fd5b506100e761014c366004610deb565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b34801561018657600080fd5b506100e7610195366004610db6565b6104f1565b3480156101a657600080fd5b506101ba6101b5366004610e1e565b610569565b6040519081526020015b60405180910390f35b3480156101d957600080fd5b506100e7610621565b3480156101ee57600080fd5b506000546040516001600160a01b0390911681526020016101c4565b34801561021657600080fd5b506101ba610225366004610f1f565b610635565b34801561023657600080fd5b506100e7610245366004610db6565b610a81565b34801561025657600080fd5b506100e7610265366004610e1e565b610af9565b6101ba610278366004610db6565b610b72565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336102c65760405162461bcd60e51b81526004016102bd919061102e565b60405180910390fd5b506002546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b5050505050565b60408051808201909152600b81526a426164204164647265737360a81b60208201523361036f5760405162461bcd60e51b81526004016102bd919061102e565b5060025460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d99034906044016000604051808303818588803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336104195760405162461bcd60e51b81526004016102bd919061102e565b506001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561045f57600080fd5b505af1158015610473573d6000803e3d6000fd5b50505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336104b95760405162461bcd60e51b81526004016102bd919061102e565b506002546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016102fa565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105315760405162461bcd60e51b81526004016102bd919061102e565b506002546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016102fa565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336105ac5760405162461bcd60e51b81526004016102bd919061102e565b50600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611041565b92915050565b610629610c2d565b6106336000610c87565b565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336106785760405162461bcd60e51b81526004016102bd919061102e565b50336001600160a01b031682602001516001600160a01b0316146040518060400160405280601981526020017f53656c6c6572206d757374206265207468652063616c6c657200000000000000815250906106e65760405162461bcd60e51b81526004016102bd919061102e565b5060008260600151116040518060600160405280602b81526020016110ff602b9139906107265760405162461bcd60e51b81526004016102bd919061102e565b50608082015160408051808201909152600b81526a426164204164647265737360a81b6020820152906001600160a01b03166107755760405162461bcd60e51b81526004016102bd919061102e565b5060e082015160408051808201909152600f81526e13d999995c881a5cc81d9bda591959608a1b602082015290156107c05760405162461bcd60e51b81526004016102bd919061102e565b5060006107d88360800151636cdb3d1360e11b610cd7565b9050806040518060400160405280601a81526020017f4e6f7420612076616c696420617373657420636f6e74726163740000000000008152509061082f5760405162461bcd60e51b81526004016102bd919061102e565b50608083015160a0840151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190611041565b9050836060015181101561090c5760405162461bcd60e51b815260206004820152602360248201527f446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f666044820152623332b960e91b60648201526084016102bd565b6080840151602085015160025460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610990919061105a565b905080610a055760405162461bcd60e51b815260206004820152603860248201527f45786368616e6765206d75737420626520617070726f76656420746f2074726160448201527f6e7366657220796f7572204950204e465420746f6b656e73000000000000000060648201526084016102bd565b60025460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f790610a35908890600401611077565b6020604051808303816000875af1158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a789190611041565b95945050505050565b60408051808201909152600b81526a426164204164647265737360a81b602082015233610ac15760405162461bcd60e51b81526004016102bd919061102e565b506002546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016102fa565b610b01610c2d565b6001600160a01b038116610b665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bd565b610b6f81610c87565b50565b60408051808201909152600b81526a426164204164647265737360a81b602082015260009033610bb55760405162461bcd60e51b81526004016102bd919061102e565b506002546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610c08573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061061b9190611041565b6000546001600160a01b031633146106335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610ce283610cfa565b8015610cf35750610cf38383610d2d565b9392505050565b6000610d0d826301ffc9a760e01b610d2d565b801561061b5750610d26826001600160e01b0319610d2d565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610d9f575060208210155b8015610dab5750600081115b979650505050505050565b600060208284031215610dc857600080fd5b5035919050565b80356001600160a01b0381168114610de657600080fd5b919050565b60008060408385031215610dfe57600080fd5b610e0783610dcf565b9150610e1560208401610dcf565b90509250929050565b600060208284031215610e3057600080fd5b610cf382610dcf565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e7357610e73610e39565b60405290565b600082601f830112610e8a57600080fd5b813567ffffffffffffffff80821115610ea557610ea5610e39565b604051601f8301601f19908116603f01168101908282118183101715610ecd57610ecd610e39565b81604052838152866020858801011115610ee657600080fd5b836020870160208301376000602085830101528094505050505092915050565b8015158114610b6f57600080fd5b8035610de681610f06565b600060208284031215610f3157600080fd5b813567ffffffffffffffff80821115610f4957600080fd5b908301906101008286031215610f5e57600080fd5b610f66610e4f565b82358152610f7660208401610dcf565b60208201526040830135604082015260608301356060820152610f9b60808401610dcf565b608082015260a083013560a082015260c083013582811115610fbc57600080fd5b610fc887828601610e79565b60c083015250610fda60e08401610f14565b60e082015295945050505050565b6000815180845260005b8181101561100e57602081850181015186830182015201610ff2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610cf36020830184610fe8565b60006020828403121561105357600080fd5b5051919050565b60006020828403121561106c57600080fd5b8151610cf381610f06565b60208152815160208201526000602083015160018060a01b03808216604085015260408501516060850152606085015160808501528060808601511660a0850152505060a083015160c083015260c08301516101008060e08501526110e0610120850183610fe8565b915060e08501516110f48286018215159052565b509094935050505056fe5175616e69747920617661696c61626c65206d7573742062652067726561746572207468616e207a65726fa2646970667358221220462939d5ab95d36a8b0780598998c33fc41c90ea36d44098d57f1498b22a4b9064736f6c63430008100033",
    "sourceMap": "701:4172:39:-:0;;;;;;;;;;;;-1:-1:-1;936:32:17;719:10:29;936:18:17;:32::i;:::-;701:4172:39;;2433:187:17;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;701:4172:39:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c25760003560e01c806355af63531161007f578063c01fd3f711610059578063c01fd3f71461020a578063db006a751461022a578063f2fde38b1461024a578063f4f98ad51461026a57600080fd5b806355af63531461019a578063715018a6146101cd5780638da5cb5b146101e257600080fd5b806305261aea146100c757806320c5429b146100e95780633ccfd60b146100fc57806340e58ee514610111578063485cc955146101315780634915907b1461017a575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610db6565b61027d565b005b6100e76100f7366004610db6565b61032f565b34801561010857600080fd5b506100e76103d9565b34801561011d57600080fd5b506100e761012c366004610db6565b610479565b34801561013d57600080fd5b506100e761014c366004610deb565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055565b34801561018657600080fd5b506100e7610195366004610db6565b6104f1565b3480156101a657600080fd5b506101ba6101b5366004610e1e565b610569565b6040519081526020015b60405180910390f35b3480156101d957600080fd5b506100e7610621565b3480156101ee57600080fd5b506000546040516001600160a01b0390911681526020016101c4565b34801561021657600080fd5b506101ba610225366004610f1f565b610635565b34801561023657600080fd5b506100e7610245366004610db6565b610a81565b34801561025657600080fd5b506100e7610265366004610e1e565b610af9565b6101ba610278366004610db6565b610b72565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336102c65760405162461bcd60e51b81526004016102bd919061102e565b60405180910390fd5b506002546040516302a9f0ab60e11b8152336004820152602481018390526001600160a01b0390911690630553e156906044015b600060405180830381600087803b15801561031457600080fd5b505af1158015610328573d6000803e3d6000fd5b5050505050565b60408051808201909152600b81526a426164204164647265737360a81b60208201523361036f5760405162461bcd60e51b81526004016102bd919061102e565b5060025460405163eac449d960e01b8152336004820152602481018390526001600160a01b039091169063eac449d99034906044016000604051808303818588803b1580156103bd57600080fd5b505af11580156103d1573d6000803e3d6000fd5b505050505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336104195760405162461bcd60e51b81526004016102bd919061102e565b506001546040516351cff8d960e01b81523360048201526001600160a01b03909116906351cff8d990602401600060405180830381600087803b15801561045f57600080fd5b505af1158015610473573d6000803e3d6000fd5b50505050565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336104b95760405162461bcd60e51b81526004016102bd919061102e565b506002546040516398590ef960e01b8152336004820152602481018390526001600160a01b03909116906398590ef9906044016102fa565b60408051808201909152600b81526a426164204164647265737360a81b6020820152336105315760405162461bcd60e51b81526004016102bd919061102e565b506002546040516307c5805760e41b8152336004820152602481018390526001600160a01b0390911690637c580570906044016102fa565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336105ac5760405162461bcd60e51b81526004016102bd919061102e565b50600154604051636374b11b60e01b81526001600160a01b03848116600483015290911690636374b11b90602401602060405180830381865afa1580156105f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061b9190611041565b92915050565b610629610c2d565b6106336000610c87565b565b60408051808201909152600b81526a426164204164647265737360a81b6020820152600090336106785760405162461bcd60e51b81526004016102bd919061102e565b50336001600160a01b031682602001516001600160a01b0316146040518060400160405280601981526020017f53656c6c6572206d757374206265207468652063616c6c657200000000000000815250906106e65760405162461bcd60e51b81526004016102bd919061102e565b5060008260600151116040518060600160405280602b81526020016110ff602b9139906107265760405162461bcd60e51b81526004016102bd919061102e565b50608082015160408051808201909152600b81526a426164204164647265737360a81b6020820152906001600160a01b03166107755760405162461bcd60e51b81526004016102bd919061102e565b5060e082015160408051808201909152600f81526e13d999995c881a5cc81d9bda591959608a1b602082015290156107c05760405162461bcd60e51b81526004016102bd919061102e565b5060006107d88360800151636cdb3d1360e11b610cd7565b9050806040518060400160405280601a81526020017f4e6f7420612076616c696420617373657420636f6e74726163740000000000008152509061082f5760405162461bcd60e51b81526004016102bd919061102e565b50608083015160a0840151604051627eeac760e11b815233600482015260248101919091526000916001600160a01b03169062fdd58e90604401602060405180830381865afa158015610886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108aa9190611041565b9050836060015181101561090c5760405162461bcd60e51b815260206004820152602360248201527f446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f666044820152623332b960e91b60648201526084016102bd565b6080840151602085015160025460405163e985e9c560e01b81526001600160a01b0392831660048201529082166024820152600092919091169063e985e9c590604401602060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610990919061105a565b905080610a055760405162461bcd60e51b815260206004820152603860248201527f45786368616e6765206d75737420626520617070726f76656420746f2074726160448201527f6e7366657220796f7572204950204e465420746f6b656e73000000000000000060648201526084016102bd565b60025460405163c01fd3f760e01b81526001600160a01b039091169063c01fd3f790610a35908890600401611077565b6020604051808303816000875af1158015610a54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a789190611041565b95945050505050565b60408051808201909152600b81526a426164204164647265737360a81b602082015233610ac15760405162461bcd60e51b81526004016102bd919061102e565b506002546040516301e9a69560e41b8152336004820152602481018390526001600160a01b0390911690631e9a6950906044016102fa565b610b01610c2d565b6001600160a01b038116610b665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102bd565b610b6f81610c87565b50565b60408051808201909152600b81526a426164204164647265737360a81b602082015260009033610bb55760405162461bcd60e51b81526004016102bd919061102e565b506002546040516384bf153560e01b8152336004820152602481018490526001600160a01b03909116906384bf153590349060440160206040518083038185885af1158015610c08573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061061b9190611041565b6000546001600160a01b031633146106335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610ce283610cfa565b8015610cf35750610cf38383610d2d565b9392505050565b6000610d0d826301ffc9a760e01b610d2d565b801561061b5750610d26826001600160e01b0319610d2d565b1592915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610d9f575060208210155b8015610dab5750600081115b979650505050505050565b600060208284031215610dc857600080fd5b5035919050565b80356001600160a01b0381168114610de657600080fd5b919050565b60008060408385031215610dfe57600080fd5b610e0783610dcf565b9150610e1560208401610dcf565b90509250929050565b600060208284031215610e3057600080fd5b610cf382610dcf565b634e487b7160e01b600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e7357610e73610e39565b60405290565b600082601f830112610e8a57600080fd5b813567ffffffffffffffff80821115610ea557610ea5610e39565b604051601f8301601f19908116603f01168101908282118183101715610ecd57610ecd610e39565b81604052838152866020858801011115610ee657600080fd5b836020870160208301376000602085830101528094505050505092915050565b8015158114610b6f57600080fd5b8035610de681610f06565b600060208284031215610f3157600080fd5b813567ffffffffffffffff80821115610f4957600080fd5b908301906101008286031215610f5e57600080fd5b610f66610e4f565b82358152610f7660208401610dcf565b60208201526040830135604082015260608301356060820152610f9b60808401610dcf565b608082015260a083013560a082015260c083013582811115610fbc57600080fd5b610fc887828601610e79565b60c083015250610fda60e08401610f14565b60e082015295945050505050565b6000815180845260005b8181101561100e57602081850181015186830182015201610ff2565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610cf36020830184610fe8565b60006020828403121561105357600080fd5b5051919050565b60006020828403121561106c57600080fd5b8151610cf381610f06565b60208152815160208201526000602083015160018060a01b03808216604085015260408501516060850152606085015160808501528060808601511660a0850152505060a083015160c083015260c08301516101008060e08501526110e0610120850183610fe8565b915060e08501516110f48286018215159052565b509094935050505056fe5175616e69747920617661696c61626c65206d7573742062652067726561746572207468616e207a65726fa2646970667358221220462939d5ab95d36a8b0780598998c33fc41c90ea36d44098d57f1498b22a4b9064736f6c63430008100033",
    "sourceMap": "701:4172:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4726:145;;;;;;;;;;-1:-1:-1;4726:145:39;;;;;:::i;:::-;;:::i;:::-;;4212:201;;;;;;:::i;:::-;;:::i;1331:107::-;;;;;;;;;;;;;:::i;3985:141::-;;;;;;;;;;-1:-1:-1;3985:141:39;;;;;:::i;:::-;;:::i;1138:139::-;;;;;;;;;;-1:-1:-1;1138:139:39;;;;;:::i;:::-;1212:12;:21;;-1:-1:-1;;;;;1212:21:39;;;-1:-1:-1;;;;;;1212:21:39;;;;;;;1243:15;:27;;;;;;;;;;;1138:139;3403:141;;;;;;;;;;-1:-1:-1;3403:141:39;;;;;:::i;:::-;;:::i;1492:203::-;;;;;;;;;;-1:-1:-1;1492:203:39;;;;;:::i;:::-;;:::i;:::-;;;979:25:58;;;967:2;952:18;1492:203:39;;;;;;;;1831:101:17;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:17;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:17;;;1161:51:58;;1149:2;1134:18;1201:85:17;1015:203:58;1856:1383:39;;;;;;;;;;-1:-1:-1;1856:1383:39;;;;;:::i;:::-;;:::i;4494:141::-;;;;;;;;;;-1:-1:-1;4494:141:39;;;;;:::i;:::-;;:::i;2081:198:17:-;;;;;;;;;;-1:-1:-1;2081:198:17;;;;;:::i;:::-;;:::i;3627:273:39:-;;;;;;:::i;:::-;;:::i;4726:145::-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;4814:15:39::1;::::0;4798:66:::1;::::0;-1:-1:-1;;;4798:66:39;;4840:10:::1;4798:66;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;4814:15:39;;::::1;::::0;4798:41:::1;::::0;4429:18:58;;4798:66:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4726:145:::0;:::o;4212:201::-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;4306:15:39::1;::::0;4290:116:::1;::::0;-1:-1:-1;;;4290:116:39;;4361:10:::1;4290:116;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;4306:15:39;;::::1;::::0;4290:39:::1;::::0;4337:9:::1;::::0;4429:18:58;;4290:116:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4212:201:::0;:::o;1331:107::-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;1397:12:39::1;::::0;1384:47:::1;::::0;-1:-1:-1;;;1384:47:39;;1420:10:::1;1384:47;::::0;::::1;1161:51:58::0;-1:-1:-1;;;;;1397:12:39;;::::1;::::0;1384:35:::1;::::0;1134:18:58;;1384:47:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1331:107::o:0;3985:141::-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;4071:15:39::1;::::0;4055:64:::1;::::0;-1:-1:-1;;;4055:64:39;;4095:10:::1;4055:64;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;4071:15:39;;::::1;::::0;4055:39:::1;::::0;4429:18:58;;4055:64:39::1;4282:274:58::0;3403:141:39;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;3489:15:39::1;::::0;3473:64:::1;::::0;-1:-1:-1;;;3473:64:39;;3516:10:::1;3473:64;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;3489:15:39;;::::1;::::0;3473:42:::1;::::0;4429:18:58;;3473:64:39::1;4282:274:58::0;1492:203:39;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;1602;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;1648:12:39::1;::::0;1635:53:::1;::::0;-1:-1:-1;;;1635:53:39;;-1:-1:-1;;;;;1179:32:58;;;1635:53:39::1;::::0;::::1;1161:51:58::0;1648:12:39;;::::1;::::0;1635:43:::1;::::0;1134:18:58;;1635:53:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1629:59:::0;1492:203;-1:-1:-1;;1492:203:39:o;1831:101:17:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1856:1383:39:-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;1966:15;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;;2022:10:::1;-1:-1:-1::0;;;;;2005:27:39::1;:6;:13;;;-1:-1:-1::0;;;;;2005:27:39::1;;2034:17;;;;;;;;;;;;;;;;::::0;1997:55:::1;;;;;-1:-1:-1::0;;;1997:55:39::1;;;;;;;;:::i;:::-;;2097:1;2070:6;:24;;;:28;2100:11;;;;;;;;;;;;;;;;;2062:50;;;;;-1:-1:-1::0;;;2062:50:39::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2130:17:39::1;::::0;::::1;::::0;2165:11:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2165:11:39::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2130:33:39::1;2122:55;;;;-1:-1:-1::0;;;2122:55:39::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2195:13:39::1;::::0;::::1;::::0;2219:12:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;2219:12:39::1;::::0;::::1;::::0;;2195:22:::1;2187:45;;;;-1:-1:-1::0;;;2187:45:39::1;;;;;;;;:::i;:::-;;2289:17;2309:112;2354:6;:17;;;-1:-1:-1::0;;;2309:31:39::1;:112::i;:::-;2289:132;;2439:12;2453:9;;;;;;;;;;;;;;;;::::0;2431:32:::1;;;;;-1:-1:-1::0;;;2431:32:39::1;;;;;;;;:::i;:::-;-1:-1:-1::0;2584:17:39::1;::::0;::::1;::::0;2650:19:::1;::::0;::::1;::::0;2575:104:::1;::::0;-1:-1:-1;;;2575:104:39;;2626:10:::1;2575:104;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;;2550:22:39::1;::::0;-1:-1:-1;;;;;2575:37:39::1;::::0;::::1;::::0;4429:18:58;;2575:104:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2550:129;;2728:6;:24;;;2710:14;:42;;2689:124;;;::::0;-1:-1:-1;;;2689:124:39;;4952:2:58;2689:124:39::1;::::0;::::1;4934:21:58::0;4991:2;4971:18;;;4964:30;5030:34;5010:18;;;5003:62;-1:-1:-1;;;5081:18:58;;;5074:33;5124:19;;2689:124:39::1;4750:399:58::0;2689:124:39::1;2926:17;::::0;::::1;::::0;2975:13:::1;::::0;::::1;::::0;3002:15:::1;::::0;2917:110:::1;::::0;-1:-1:-1;;;2917:110:39;;-1:-1:-1;;;;;5384:15:58;;;2917:110:39::1;::::0;::::1;5366:34:58::0;3002:15:39;;::::1;5416:18:58::0;;;5409:43;2890:24:39::1;::::0;2917:44;;;::::1;::::0;::::1;::::0;5301:18:58;;2917:110:39::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2890:137;;3058:19;3037:122;;;::::0;-1:-1:-1;;;3037:122:39;;5915:2:58;3037:122:39::1;::::0;::::1;5897:21:58::0;5954:2;5934:18;;;5927:30;5993:34;5973:18;;;5966:62;6064:26;6044:18;;;6037:54;6108:19;;3037:122:39::1;5713:420:58::0;3037:122:39::1;3196:15;::::0;3180:52:::1;::::0;-1:-1:-1;;;3180:52:39;;-1:-1:-1;;;;;3196:15:39;;::::1;::::0;3180:44:::1;::::0;:52:::1;::::0;3225:6;;3180:52:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3170:62:::0;1856:1383;-1:-1:-1;;;;;1856:1383:39:o;4494:141::-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;4580:15:39::1;::::0;4564:64:::1;::::0;-1:-1:-1;;;4564:64:39;;4604:10:::1;4564:64;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;4580:15:39;;::::1;::::0;4564:39:::1;::::0;4429:18:58;;4564:64:39::1;4282:274:58::0;2081:198:17;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:17;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:17;;7407:2:58;2161:73:17::1;::::0;::::1;7389:21:58::0;7446:2;7426:18;;;7419:30;7485:34;7465:18;;;7458:62;-1:-1:-1;;;7536:18:58;;;7529:36;7582:19;;2161:73:17::1;7205:402:58::0;2161:73:17::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;3627:273:39:-;1018:11;;;;;;;;;;;;-1:-1:-1;;;1018:11:39;;;;3733:18;;990:10;982:48;;;;-1:-1:-1;;;982:48:39;;;;;;;;:::i;:::-;-1:-1:-1;3796:15:39::1;::::0;3780:113:::1;::::0;-1:-1:-1;;;3780:113:39;;3851:10:::1;3780:113;::::0;::::1;4456:51:58::0;4523:18;;;4516:34;;;-1:-1:-1;;;;;3796:15:39;;::::1;::::0;3780:39:::1;::::0;3827:9:::1;::::0;4429:18:58;;3780:113:39::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1359:130:17:-:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:17;719:10:29;1422:23:17;1414:68;;;;-1:-1:-1;;;1414:68:17;;7814:2:58;1414:68:17;;;7796:21:58;;;7833:18;;;7826:30;7892:34;7872:18;;;7865:62;7944:18;;1414:68:17;7612:356:58;2433:187:17;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:17;;;-1:-1:-1;;;;;;2541:17:17;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;1349:282:32:-;1436:4;1543:23;1558:7;1543:14;:23::i;:::-;:81;;;;;1570:54;1603:7;1612:11;1570:32;:54::i;:::-;1536:88;1349:282;-1:-1:-1;;;1349:282:32:o;704:427::-;768:4;975:68;1008:7;-1:-1:-1;;;975:32:32;:68::i;:::-;:149;;;;-1:-1:-1;1060:64:32;1093:7;-1:-1:-1;;;;;;1060:32:32;:64::i;:::-;1059:65;956:168;704:427;-1:-1:-1;;704:427:32:o;4262:647::-;4433:71;;;-1:-1:-1;;;;;;8135:33:58;;4433:71:32;;;;8117:52:58;;;;4433:71:32;;;;;;;;;;8090:18:58;;;;4433:71:32;;;;;;;;;-1:-1:-1;;;;;4433:71:32;-1:-1:-1;;;4433:71:32;;;4712:20;;4364:4;;4433:71;4364:4;;;;;;4433:71;4364:4;;4712:20;4677:7;4670:5;4659:86;4648:97;;4772:16;4758:30;;4822:4;4816:11;4801:26;;4854:7;:29;;;;;4879:4;4865:10;:18;;4854:29;:48;;;;;4901:1;4887:11;:15;4854:48;4847:55;4262:647;-1:-1:-1;;;;;;;4262:647:32:o;14:180:58:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:58;;14:180;-1:-1:-1;14:180:58:o;199:173::-;267:20;;-1:-1:-1;;;;;316:31:58;;306:42;;296:70;;362:1;359;352:12;296:70;199:173;;;:::o;377:260::-;445:6;453;506:2;494:9;485:7;481:23;477:32;474:52;;;522:1;519;512:12;474:52;545:29;564:9;545:29;:::i;:::-;535:39;;593:38;627:2;616:9;612:18;593:38;:::i;:::-;583:48;;377:260;;;;;:::o;642:186::-;701:6;754:2;742:9;733:7;729:23;725:32;722:52;;;770:1;767;760:12;722:52;793:29;812:9;793:29;:::i;1223:127::-;1284:10;1279:3;1275:20;1272:1;1265:31;1315:4;1312:1;1305:15;1339:4;1336:1;1329:15;1355:250;1422:2;1416:9;1464:6;1452:19;;1501:18;1486:34;;1522:22;;;1483:62;1480:88;;;1548:18;;:::i;:::-;1584:2;1577:22;1355:250;:::o;1610:719::-;1653:5;1706:3;1699:4;1691:6;1687:17;1683:27;1673:55;;1724:1;1721;1714:12;1673:55;1760:6;1747:20;1786:18;1823:2;1819;1816:10;1813:36;;;1829:18;;:::i;:::-;1904:2;1898:9;1872:2;1958:13;;-1:-1:-1;;1954:22:58;;;1978:2;1950:31;1946:40;1934:53;;;2002:18;;;2022:22;;;1999:46;1996:72;;;2048:18;;:::i;:::-;2088:10;2084:2;2077:22;2123:2;2115:6;2108:18;2169:3;2162:4;2157:2;2149:6;2145:15;2141:26;2138:35;2135:55;;;2186:1;2183;2176:12;2135:55;2250:2;2243:4;2235:6;2231:17;2224:4;2216:6;2212:17;2199:54;2297:1;2290:4;2285:2;2277:6;2273:15;2269:26;2262:37;2317:6;2308:15;;;;;;1610:719;;;;:::o;2334:118::-;2420:5;2413:13;2406:21;2399:5;2396:32;2386:60;;2442:1;2439;2432:12;2457:128;2522:20;;2551:28;2522:20;2551:28;:::i;2590:1034::-;2673:6;2726:2;2714:9;2705:7;2701:23;2697:32;2694:52;;;2742:1;2739;2732:12;2694:52;2782:9;2769:23;2811:18;2852:2;2844:6;2841:14;2838:34;;;2868:1;2865;2858:12;2838:34;2891:22;;;;2947:6;2929:16;;;2925:29;2922:49;;;2967:1;2964;2957:12;2922:49;2993:17;;:::i;:::-;3046:2;3033:16;3026:5;3019:31;3082;3109:2;3105;3101:11;3082:31;:::i;:::-;3077:2;3070:5;3066:14;3059:55;3167:2;3163;3159:11;3146:25;3141:2;3134:5;3130:14;3123:49;3225:2;3221;3217:11;3204:25;3199:2;3192:5;3188:14;3181:49;3263:32;3290:3;3286:2;3282:12;3263:32;:::i;:::-;3257:3;3250:5;3246:15;3239:57;3350:3;3346:2;3342:12;3329:26;3323:3;3316:5;3312:15;3305:51;3402:3;3398:2;3394:12;3381:26;3432:2;3422:8;3419:16;3416:36;;;3448:1;3445;3438:12;3416:36;3485:45;3522:7;3511:8;3507:2;3503:17;3485:45;:::i;:::-;3479:3;3472:5;3468:15;3461:70;;3564:29;3588:3;3584:2;3580:12;3564:29;:::i;:::-;3558:3;3547:15;;3540:54;3551:5;2590:1034;-1:-1:-1;;;;;2590:1034:58:o;3629:423::-;3671:3;3709:5;3703:12;3736:6;3731:3;3724:19;3761:1;3771:162;3785:6;3782:1;3779:13;3771:162;;;3847:4;3903:13;;;3899:22;;3893:29;3875:11;;;3871:20;;3864:59;3800:12;3771:162;;;3775:3;3978:1;3971:4;3962:6;3957:3;3953:16;3949:27;3942:38;4041:4;4034:2;4030:7;4025:2;4017:6;4013:15;4009:29;4004:3;4000:39;3996:50;3989:57;;;3629:423;;;;:::o;4057:220::-;4206:2;4195:9;4188:21;4169:4;4226:45;4267:2;4256:9;4252:18;4244:6;4226:45;:::i;4561:184::-;4631:6;4684:2;4672:9;4663:7;4659:23;4655:32;4652:52;;;4700:1;4697;4690:12;4652:52;-1:-1:-1;4723:16:58;;4561:184;-1:-1:-1;4561:184:58:o;5463:245::-;5530:6;5583:2;5571:9;5562:7;5558:23;5554:32;5551:52;;;5599:1;5596;5589:12;5551:52;5631:9;5625:16;5650:28;5672:5;5650:28;:::i;6234:966::-;6411:2;6400:9;6393:21;6456:6;6450:13;6445:2;6434:9;6430:18;6423:41;6374:4;6511:2;6503:6;6499:15;6493:22;6551:1;6547;6542:3;6538:11;6534:19;6607:2;6593:12;6589:21;6584:2;6573:9;6569:18;6562:49;6665:2;6657:6;6653:15;6647:22;6642:2;6631:9;6627:18;6620:50;6725:2;6717:6;6713:15;6707:22;6701:3;6690:9;6686:19;6679:51;6796:2;6789:3;6781:6;6777:16;6771:23;6767:32;6761:3;6750:9;6746:19;6739:61;;;6855:3;6847:6;6843:16;6837:23;6831:3;6820:9;6816:19;6809:52;6910:3;6902:6;6898:16;6892:23;6934:6;6977:2;6971:3;6960:9;6956:19;6949:31;7003:54;7052:3;7041:9;7037:19;7021:14;7003:54;:::i;:::-;6989:68;;7106:3;7098:6;7094:16;7088:23;7120:51;7167:2;7156:9;7152:18;7136:14;6208:13;6201:21;6189:34;;6138:91;7120:51;-1:-1:-1;7188:6:58;;6234:966;-1:-1:-1;;;;6234:966:58:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "cancel(uint256)": "40e58ee5",
    "commit(uint256)": "f4f98ad5",
    "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": "c01fd3f7",
    "escrowBalance(address)": "55af6353",
    "finalize(uint256)": "05261aea",
    "initialize(address,address)": "485cc955",
    "owner()": "8da5cb5b",
    "redeem(uint256)": "db006a75",
    "renounceOwnership()": "715018a6",
    "revoke(uint256)": "20c5429b",
    "transferOwnership(address)": "f2fde38b",
    "voidOffer(uint256)": "4915907b",
    "withdraw()": "3ccfd60b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"commit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"exchangeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantityAvailable\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"assetToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetTokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"metadataUri\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"voided\",\"type\":\"bool\"}],\"internalType\":\"struct BionetTypes.Offer\",\"name\":\"_offer\",\"type\":\"tuple\"}],\"name\":\"createOffer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"escrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"bal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funds\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_exchange\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exchangeId\",\"type\":\"uint256\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"voidOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of IBionetRouter. Acts as a proxy to the protocol. Primarily doing guard checks and forwarding the caller to the respective contract. Contracts such as BionetExchange will only allow calls from this contract.\",\"kind\":\"dev\",\"methods\":{\"cancel(uint256)\":{\"details\":\"Cancel a committment Called by Buyer\"},\"commit(uint256)\":{\"details\":\"Commit to purchase Called by buyer\"},\"createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))\":{\"details\":\"Create a new offer for a seller. Will revert if: - Seller doesn't match the caller - ... need more\"},\"escrowBalance(address)\":{\"details\":\"See {IBionetRouter}\"},\"finalize(uint256)\":{\"details\":\"Finalize the exchange. Usually means the buyer is happy.\"},\"initialize(address,address)\":{\"details\":\"Called after default contructor to set needed addresses\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"redeem(uint256)\":{\"details\":\"Redeem a Voucher Called by Buyer\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revoke(uint256)\":{\"details\":\"Revoke a committment Called by Seller\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"voidOffer(uint256)\":{\"details\":\"Called by seller to void an offer Will not impact existing exchanges against the offer. See {BionetExchange}\"},\"withdraw()\":{\"details\":\"See {IBionetRouter}\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/BionetRouter.sol\":\"BionetRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b\",\"dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/BionetConstants.sol\":{\"keccak256\":\"0x0066f09bc213dfbfc180d09f11bc4952a12dd283197cf8a1512b29298c6f3721\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9cd87ce4eceba7a39590a85a9c1bb4244627e05dc40613e1ade5cc85ec906eaf\",\"dweb:/ipfs/QmcJ7dEKarswvGPHyuWVZMFPdig5Kt3WKzpQnwojSJENyR\"]},\"src/BionetRouter.sol\":{\"keccak256\":\"0x2effacc0bcf9c2e46468a9206792f95f1a8f4d5243f0fb503c94fa5f97d05d09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://d40caaede64300e0c09cc6e6ddcdea76d66ea4a000524074ef2a0eea5eba7535\",\"dweb:/ipfs/QmcHojjMWST8Xth4Qje4vMNNGoBUkALzhsAqjdjZ4sAXQS\"]},\"src/BionetTypes.sol\":{\"keccak256\":\"0x169a0cd33f63c6d752887665aceed7045e590daf61d23654ec9ab0cabeb2472f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9e629773672895e36f060352b0a40635d77eaa0cd5e74cb89ce5ae95c50823c\",\"dweb:/ipfs/QmdqLGWzk7XPC3myvq5eBXn4YqMSVhyzNdsbCj2GRyUEdD\"]},\"src/interfaces/IBionetExchange.sol\":{\"keccak256\":\"0x1634c74d93183cb786d795da6ebe26cd9e986f6fed29e45ce7ca469452cb57a4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a50d24be19e5e4c65e1f7c2693107ef712583349c8f64f5af5a01061b86c250\",\"dweb:/ipfs/QmVpxWjjG7mwvW6dCiapWwjfQxKjvzDgPy2EXvumnFdVq7\"]},\"src/interfaces/IBionetFunds.sol\":{\"keccak256\":\"0x192cdbbde46f0dd5ed2ad27f1b52ef4b7be840012d5ed19329dad48b77c8ec3f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3165f1eddb9106bf6d49b6c330d9cfdadbff075a2898f5d210201d1be668825b\",\"dweb:/ipfs/QmZBZqGoF4Vqj8CEV8AZUJ4hSd7UBNDcYW55278XaJXCTJ\"]},\"src/interfaces/IBionetRouter.sol\":{\"keccak256\":\"0x3239553641550f8d1e10c86da888332f9d734d2e6111383b348d2ff542563eef\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c13da24a826f1473902b7f671ff156cb5ece577c8cd447656f3cb30f5ad97322\",\"dweb:/ipfs/QmWdHvK6Y25gvsbyouVGte7Te8PoaytKF4iiAy4DanesJT\"]},\"src/interfaces/IBionetVoucher.sol\":{\"keccak256\":\"0xa3f80ffcbb6dd955aeca6ee4ba6b5756dd7fa97f0405a954bba7b635efc5722a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9ce07c191b6e0aaa8ddf731bad4f0aa4513cac2295c88136684cb040c108fd44\",\"dweb:/ipfs/QmdnFbb5WKsz2qbRVRh91B8ACRNWqbZqbtxGXKdXpcBBUB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "cancel"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "commit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "exchangeId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct BionetTypes.Offer",
              "name": "_offer",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "quantityAvailable",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "assetToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "assetTokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "metadataUri",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "voided",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createOffer",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "escrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "bal",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_funds",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_exchange",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_exchangeId",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "revoke"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidOffer"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "cancel(uint256)": {
            "details": "Cancel a committment Called by Buyer"
          },
          "commit(uint256)": {
            "details": "Commit to purchase Called by buyer"
          },
          "createOffer((uint256,address,uint256,uint256,address,uint256,string,bool))": {
            "details": "Create a new offer for a seller. Will revert if: - Seller doesn't match the caller - ... need more"
          },
          "escrowBalance(address)": {
            "details": "See {IBionetRouter}"
          },
          "finalize(uint256)": {
            "details": "Finalize the exchange. Usually means the buyer is happy."
          },
          "initialize(address,address)": {
            "details": "Called after default contructor to set needed addresses"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "redeem(uint256)": {
            "details": "Redeem a Voucher Called by Buyer"
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "revoke(uint256)": {
            "details": "Revoke a committment Called by Seller"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "voidOffer(uint256)": {
            "details": "Called by seller to void an offer Will not impact existing exchanges against the offer. See {BionetExchange}"
          },
          "withdraw()": {
            "details": "See {IBionetRouter}"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/BionetRouter.sol": "BionetRouter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0x0812bc73d6e30558840122fa48d6f64ae978ccc1b1fc42e616bac190c6360f46",
        "urls": [
          "bzz-raw://3d95a53b7e19ca1d46043eaad8967b6e0b02aab2b5fefc2108bfa6d1ad425f5b",
          "dweb:/ipfs/QmQq7AUGT9juE3hun2Wy7r2BDoDBFdBn43DVwhJpK2StLV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/BionetConstants.sol": {
        "keccak256": "0x0066f09bc213dfbfc180d09f11bc4952a12dd283197cf8a1512b29298c6f3721",
        "urls": [
          "bzz-raw://9cd87ce4eceba7a39590a85a9c1bb4244627e05dc40613e1ade5cc85ec906eaf",
          "dweb:/ipfs/QmcJ7dEKarswvGPHyuWVZMFPdig5Kt3WKzpQnwojSJENyR"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetRouter.sol": {
        "keccak256": "0x2effacc0bcf9c2e46468a9206792f95f1a8f4d5243f0fb503c94fa5f97d05d09",
        "urls": [
          "bzz-raw://d40caaede64300e0c09cc6e6ddcdea76d66ea4a000524074ef2a0eea5eba7535",
          "dweb:/ipfs/QmcHojjMWST8Xth4Qje4vMNNGoBUkALzhsAqjdjZ4sAXQS"
        ],
        "license": "Apache-2.0"
      },
      "src/BionetTypes.sol": {
        "keccak256": "0x169a0cd33f63c6d752887665aceed7045e590daf61d23654ec9ab0cabeb2472f",
        "urls": [
          "bzz-raw://b9e629773672895e36f060352b0a40635d77eaa0cd5e74cb89ce5ae95c50823c",
          "dweb:/ipfs/QmdqLGWzk7XPC3myvq5eBXn4YqMSVhyzNdsbCj2GRyUEdD"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetExchange.sol": {
        "keccak256": "0x1634c74d93183cb786d795da6ebe26cd9e986f6fed29e45ce7ca469452cb57a4",
        "urls": [
          "bzz-raw://4a50d24be19e5e4c65e1f7c2693107ef712583349c8f64f5af5a01061b86c250",
          "dweb:/ipfs/QmVpxWjjG7mwvW6dCiapWwjfQxKjvzDgPy2EXvumnFdVq7"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetFunds.sol": {
        "keccak256": "0x192cdbbde46f0dd5ed2ad27f1b52ef4b7be840012d5ed19329dad48b77c8ec3f",
        "urls": [
          "bzz-raw://3165f1eddb9106bf6d49b6c330d9cfdadbff075a2898f5d210201d1be668825b",
          "dweb:/ipfs/QmZBZqGoF4Vqj8CEV8AZUJ4hSd7UBNDcYW55278XaJXCTJ"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetRouter.sol": {
        "keccak256": "0x3239553641550f8d1e10c86da888332f9d734d2e6111383b348d2ff542563eef",
        "urls": [
          "bzz-raw://c13da24a826f1473902b7f671ff156cb5ece577c8cd447656f3cb30f5ad97322",
          "dweb:/ipfs/QmWdHvK6Y25gvsbyouVGte7Te8PoaytKF4iiAy4DanesJT"
        ],
        "license": "Apache-2.0"
      },
      "src/interfaces/IBionetVoucher.sol": {
        "keccak256": "0xa3f80ffcbb6dd955aeca6ee4ba6b5756dd7fa97f0405a954bba7b635efc5722a",
        "urls": [
          "bzz-raw://9ce07c191b6e0aaa8ddf731bad4f0aa4513cac2295c88136684cb040c108fd44",
          "dweb:/ipfs/QmdnFbb5WKsz2qbRVRh91B8ACRNWqbZqbtxGXKdXpcBBUB"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/BionetRouter.sol",
    "id": 32940,
    "exportedSymbols": {
      "BAD_ADDRESS": [
        31224
      ],
      "BAD_VALUE_TRANSFER": [
        31263
      ],
      "BUYER_NOT_CALLER": [
        31230
      ],
      "BionetRouter": [
        32939
      ],
      "BionetTypes": [
        32985
      ],
      "CANCEL_REVOKE_FEE": [
        31213
      ],
      "Context": [
        29783
      ],
      "ERC165Checker": [
        30176
      ],
      "EXCHANGE_404": [
        31266
      ],
      "EXPECTED_COMMIT_STATE": [
        31269
      ],
      "EXPECTED_REDEEMED_STATE": [
        31272
      ],
      "IBionetExchange": [
        33224
      ],
      "IBionetFunds": [
        33298
      ],
      "IBionetRouter": [
        33370
      ],
      "IBionetVoucher": [
        33397
      ],
      "IERC1155": [
        28239
      ],
      "IERC165": [
        30188
      ],
      "IERC721": [
        29356
      ],
      "INSUFFICIENT_FUNDS": [
        31251
      ],
      "INVALID_COMMIT_SELLER": [
        31260
      ],
      "INVALID_PRICE": [
        31233
      ],
      "INVALID_QTY": [
        31236
      ],
      "MUST_BE_GT_ZERO": [
        31254
      ],
      "NOT_ASSET": [
        31239
      ],
      "NOT_OWNER": [
        31242
      ],
      "NO_OFFER": [
        31257
      ],
      "OFFER_VOIDED": [
        31245
      ],
      "Ownable": [
        26840
      ],
      "PROTOCOL_FEE": [
        31210
      ],
      "SELLER_NOT_CALLER": [
        31227
      ],
      "UNAUTHORIZED_ACCESS": [
        31221
      ],
      "VALUE_GT_ZERO": [
        31248
      ],
      "WEEK": [
        31218
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4835:39",
    "nodes": [
      {
        "id": 32623,
        "nodeType": "PragmaDirective",
        "src": "39:24:39",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 32624,
        "nodeType": "ImportDirective",
        "src": "65:27:39",
        "nodes": [],
        "absolutePath": "src/BionetTypes.sol",
        "file": "./BionetTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 32986,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32625,
        "nodeType": "ImportDirective",
        "src": "93:31:39",
        "nodes": [],
        "absolutePath": "src/BionetConstants.sol",
        "file": "./BionetConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 31273,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32626,
        "nodeType": "ImportDirective",
        "src": "125:39:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetFunds.sol",
        "file": "./interfaces/IBionetFunds.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 33299,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32627,
        "nodeType": "ImportDirective",
        "src": "165:40:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetRouter.sol",
        "file": "./interfaces/IBionetRouter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 33371,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32628,
        "nodeType": "ImportDirective",
        "src": "206:41:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetVoucher.sol",
        "file": "./interfaces/IBionetVoucher.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 33398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32629,
        "nodeType": "ImportDirective",
        "src": "248:42:39",
        "nodes": [],
        "absolutePath": "src/interfaces/IBionetExchange.sol",
        "file": "./interfaces/IBionetExchange.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 33225,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32630,
        "nodeType": "ImportDirective",
        "src": "292:41:39",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 26841,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32631,
        "nodeType": "ImportDirective",
        "src": "334:49:39",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol",
        "file": "openzeppelin/token/ERC1155/IERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 28240,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32632,
        "nodeType": "ImportDirective",
        "src": "384:60:39",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "openzeppelin/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32940,
        "sourceUnit": 30177,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32939,
        "nodeType": "ContractDefinition",
        "src": "701:4172:39",
        "nodes": [
          {
            "id": 32639,
            "nodeType": "VariableDeclaration",
            "src": "785:20:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "fundsAddress",
            "nameLocation": "793:12:39",
            "scope": 32939,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32638,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "785:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32641,
            "nodeType": "VariableDeclaration",
            "src": "844:23:39",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "exchangeAddress",
            "nameLocation": "852:15:39",
            "scope": 32939,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32640,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "844:7:39",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32656,
            "nodeType": "ModifierDefinition",
            "src": "947:101:39",
            "nodes": [],
            "body": {
              "id": 32655,
              "nodeType": "Block",
              "src": "972:76:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32644,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "990:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "994:6:39",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "990:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1012:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1004:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32646,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1004:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:12:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "990:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32651,
                        "name": "BAD_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "1018:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32643,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "982:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "982:48:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32653,
                  "nodeType": "ExpressionStatement",
                  "src": "982:48:39"
                },
                {
                  "id": 32654,
                  "nodeType": "PlaceholderStatement",
                  "src": "1040:1:39"
                }
              ]
            },
            "name": "noZeroAddress",
            "nameLocation": "956:13:39",
            "parameters": {
              "id": 32642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "969:2:39"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 32673,
            "nodeType": "FunctionDefinition",
            "src": "1138:139:39",
            "nodes": [],
            "body": {
              "id": 32672,
              "nodeType": "Block",
              "src": "1202:75:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32664,
                      "name": "fundsAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32639,
                      "src": "1212:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32665,
                      "name": "_funds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32659,
                      "src": "1227:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1212:21:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32667,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:21:39"
                },
                {
                  "expression": {
                    "id": 32670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32668,
                      "name": "exchangeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32641,
                      "src": "1243:15:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 32669,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32661,
                      "src": "1261:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1243:27:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32671,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:27:39"
                }
              ]
            },
            "baseFunctions": [
              33310
            ],
            "documentation": {
              "id": 32657,
              "nodeType": "StructuredDocumentation",
              "src": "1054:79:39",
              "text": " @dev Called after default contructor to set needed addresses"
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1147:10:39",
            "parameters": {
              "id": 32662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32659,
                  "mutability": "mutable",
                  "name": "_funds",
                  "nameLocation": "1166:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32673,
                  "src": "1158:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1158:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 32661,
                  "mutability": "mutable",
                  "name": "_exchange",
                  "nameLocation": "1182:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32673,
                  "src": "1174:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1157:35:39"
            },
            "returnParameters": {
              "id": 32663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1202:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32688,
            "nodeType": "FunctionDefinition",
            "src": "1331:107:39",
            "nodes": [],
            "body": {
              "id": 32687,
              "nodeType": "Block",
              "src": "1374:64:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32683,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1420:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1424:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1420:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32680,
                            "name": "fundsAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32639,
                            "src": "1397:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32679,
                          "name": "IBionetFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33298,
                          "src": "1384:12:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetFunds_$33298_$",
                            "typeString": "type(contract IBionetFunds)"
                          }
                        },
                        "id": 32681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1384:26:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetFunds_$33298",
                          "typeString": "contract IBionetFunds"
                        }
                      },
                      "id": 32682,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1411:8:39",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33264,
                      "src": "1384:35:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 32685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:47:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32686,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:47:39"
                }
              ]
            },
            "baseFunctions": [
              33361
            ],
            "documentation": {
              "id": 32674,
              "nodeType": "StructuredDocumentation",
              "src": "1283:43:39",
              "text": " @dev See {IBionetRouter}"
            },
            "functionSelector": "3ccfd60b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32677,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32676,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1360:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "1360:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1360:13:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1340:8:39",
            "parameters": {
              "id": 32675,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1348:2:39"
            },
            "returnParameters": {
              "id": 32678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1374:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32708,
            "nodeType": "FunctionDefinition",
            "src": "1492:203:39",
            "nodes": [],
            "body": {
              "id": 32707,
              "nodeType": "Block",
              "src": "1619:76:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32698,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32696,
                      "src": "1629:3:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32703,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32691,
                          "src": "1679:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32700,
                              "name": "fundsAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32639,
                              "src": "1648:12:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32699,
                            "name": "IBionetFunds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33298,
                            "src": "1635:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetFunds_$33298_$",
                              "typeString": "type(contract IBionetFunds)"
                            }
                          },
                          "id": 32701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1635:26:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetFunds_$33298",
                            "typeString": "contract IBionetFunds"
                          }
                        },
                        "id": 32702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1662:16:39",
                        "memberName": "getEscrowBalance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33291,
                        "src": "1635:43:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 32704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1635:53:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1629:59:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32706,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:59:39"
                }
              ]
            },
            "baseFunctions": [
              33369
            ],
            "documentation": {
              "id": 32689,
              "nodeType": "StructuredDocumentation",
              "src": "1444:43:39",
              "text": " @dev See {IBionetRouter}"
            },
            "functionSelector": "55af6353",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32693,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1571:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "1571:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1571:13:39"
              }
            ],
            "name": "escrowBalance",
            "nameLocation": "1501:13:39",
            "parameters": {
              "id": 32692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32691,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "1523:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32708,
                  "src": "1515:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1515:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1514:18:39"
            },
            "returnParameters": {
              "id": 32697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32696,
                  "mutability": "mutable",
                  "name": "bal",
                  "nameLocation": "1610:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32708,
                  "src": "1602:11:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1602:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1601:13:39"
            },
            "scope": 32939,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32820,
            "nodeType": "FunctionDefinition",
            "src": "1856:1383:39",
            "nodes": [],
            "body": {
              "id": 32819,
              "nodeType": "Block",
              "src": "1987:1252:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32720,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32712,
                            "src": "2005:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32721,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2012:6:39",
                          "memberName": "seller",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32955,
                          "src": "2005:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 32722,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2022:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2026:6:39",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2022:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2005:27:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32725,
                        "name": "SELLER_NOT_CALLER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31227,
                        "src": "2034:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1997:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1997:55:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32727,
                  "nodeType": "ExpressionStatement",
                  "src": "1997:55:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32729,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32712,
                            "src": "2070:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32730,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2077:17:39",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32959,
                          "src": "2070:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 32731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2097:1:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2070:28:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32733,
                        "name": "INVALID_QTY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31236,
                        "src": "2100:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32728,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2062:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2062:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32735,
                  "nodeType": "ExpressionStatement",
                  "src": "2062:50:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32737,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32712,
                            "src": "2130:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32738,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2137:10:39",
                          "memberName": "assetToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32961,
                          "src": "2130:17:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 32741,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2159:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 32740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2151:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32739,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2151:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2151:12:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2130:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32744,
                        "name": "BAD_ADDRESS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "2165:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32736,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2122:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2122:55:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32746,
                  "nodeType": "ExpressionStatement",
                  "src": "2122:55:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 32751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32748,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32712,
                            "src": "2195:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2202:6:39",
                          "memberName": "voided",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32967,
                          "src": "2195:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 32750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2212:5:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2195:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32752,
                        "name": "OFFER_VOIDED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31245,
                        "src": "2219:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2187:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:45:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32754,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:45:39"
                },
                {
                  "assignments": [
                    32756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32756,
                      "mutability": "mutable",
                      "name": "isValidAsset",
                      "nameLocation": "2294:12:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 32819,
                      "src": "2289:17:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32755,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2289:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32766,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32759,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32712,
                          "src": "2354:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2361:10:39",
                        "memberName": "assetToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32961,
                        "src": "2354:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 32762,
                              "name": "IERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28239,
                              "src": "2390:8:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                                "typeString": "type(contract IERC1155)"
                              }
                            ],
                            "id": 32761,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2385:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 32763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2385:14:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$28239",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2400:11:39",
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2385:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 32757,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "2309:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$30176_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 32758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2323:17:39",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30032,
                      "src": "2309:31:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 32765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:112:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2289:132:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32768,
                        "name": "isValidAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32756,
                        "src": "2439:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 32769,
                        "name": "NOT_ASSET",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31239,
                        "src": "2453:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 32767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2431:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2431:32:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32771,
                  "nodeType": "ExpressionStatement",
                  "src": "2431:32:39"
                },
                {
                  "assignments": [
                    32773
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32773,
                      "mutability": "mutable",
                      "name": "numTokensOwned",
                      "nameLocation": "2558:14:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 32819,
                      "src": "2550:22:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2550:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32784,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2626:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2630:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2626:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32781,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32712,
                          "src": "2650:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32782,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2657:12:39",
                        "memberName": "assetTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32963,
                        "src": "2650:19:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32775,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "2584:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32776,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2591:10:39",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32961,
                            "src": "2584:17:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32774,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28239,
                          "src": "2575:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2575:27:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28239",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2603:9:39",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28177,
                      "src": "2575:37:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 32783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:104:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2550:129:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 32789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 32786,
                          "name": "numTokensOwned",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32773,
                          "src": "2710:14:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 32787,
                            "name": "_offer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32712,
                            "src": "2728:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                              "typeString": "struct BionetTypes.Offer memory"
                            }
                          },
                          "id": 32788,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2735:17:39",
                          "memberName": "quantityAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 32959,
                          "src": "2728:24:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2710:42:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446f6e2774206f776e20656e6f75676820495020746f6b656e7320746f206f66666572",
                        "id": 32790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_445e5d7028dc6b1af197aecd6ba56454330d9fcde9d26bc225df3efd23ce15e7",
                          "typeString": "literal_string \"Don't own enough IP tokens to offer\""
                        },
                        "value": "Don't own enough IP tokens to offer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_445e5d7028dc6b1af197aecd6ba56454330d9fcde9d26bc225df3efd23ce15e7",
                          "typeString": "literal_string \"Don't own enough IP tokens to offer\""
                        }
                      ],
                      "id": 32785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2689:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2689:124:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32792,
                  "nodeType": "ExpressionStatement",
                  "src": "2689:124:39"
                },
                {
                  "assignments": [
                    32794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32794,
                      "mutability": "mutable",
                      "name": "approvedForExchange",
                      "nameLocation": "2895:19:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 32819,
                      "src": "2890:24:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 32793,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2890:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32804,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32800,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32712,
                          "src": "2975:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        },
                        "id": 32801,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2982:6:39",
                        "memberName": "seller",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32955,
                        "src": "2975:13:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32802,
                        "name": "exchangeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32641,
                        "src": "3002:15:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 32796,
                              "name": "_offer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "2926:6:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                                "typeString": "struct BionetTypes.Offer memory"
                              }
                            },
                            "id": 32797,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2933:10:39",
                            "memberName": "assetToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 32961,
                            "src": "2926:17:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32795,
                          "name": "IERC1155",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28239,
                          "src": "2917:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC1155_$28239_$",
                            "typeString": "type(contract IERC1155)"
                          }
                        },
                        "id": 32798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2917:27:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1155_$28239",
                          "typeString": "contract IERC1155"
                        }
                      },
                      "id": 32799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2945:16:39",
                      "memberName": "isApprovedForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28208,
                      "src": "2917:44:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address,address) view external returns (bool)"
                      }
                    },
                    "id": 32803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2917:110:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2890:137:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32806,
                        "name": "approvedForExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32794,
                        "src": "3058:19:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45786368616e6765206d75737420626520617070726f76656420746f207472616e7366657220796f7572204950204e465420746f6b656e73",
                        "id": 32807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:58:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de686a8f627d201e08213e9a387c3933066ab07570e9c8b4fbb08c0b59d4b3b9",
                          "typeString": "literal_string \"Exchange must be approved to transfer your IP NFT tokens\""
                        },
                        "value": "Exchange must be approved to transfer your IP NFT tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de686a8f627d201e08213e9a387c3933066ab07570e9c8b4fbb08c0b59d4b3b9",
                          "typeString": "literal_string \"Exchange must be approved to transfer your IP NFT tokens\""
                        }
                      ],
                      "id": 32805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3037:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3037:122:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32809,
                  "nodeType": "ExpressionStatement",
                  "src": "3037:122:39"
                },
                {
                  "expression": {
                    "id": 32817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32810,
                      "name": "offerId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32717,
                      "src": "3170:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32815,
                          "name": "_offer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32712,
                          "src": "3225:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                            "typeString": "struct BionetTypes.Offer memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32812,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32641,
                              "src": "3196:15:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32811,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33224,
                            "src": "3180:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3180:32:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3213:11:39",
                        "memberName": "createOffer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33151,
                        "src": "3180:44:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_struct$_Offer_$32968_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct BionetTypes.Offer memory) external returns (uint256)"
                        }
                      },
                      "id": 32816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3180:52:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3170:62:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32818,
                  "nodeType": "ExpressionStatement",
                  "src": "3170:62:39"
                }
              ]
            },
            "baseFunctions": [
              33319
            ],
            "documentation": {
              "id": 32709,
              "nodeType": "StructuredDocumentation",
              "src": "1701:150:39",
              "text": " @dev Create a new offer for a seller.\n Will revert if:\n - Seller doesn't match the caller\n - ... need more"
            },
            "functionSelector": "c01fd3f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32714,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "1935:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "1935:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "1935:13:39"
              }
            ],
            "name": "createOffer",
            "nameLocation": "1865:11:39",
            "parameters": {
              "id": 32713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32712,
                  "mutability": "mutable",
                  "name": "_offer",
                  "nameLocation": "1902:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32820,
                  "src": "1877:31:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Offer_$32968_memory_ptr",
                    "typeString": "struct BionetTypes.Offer"
                  },
                  "typeName": {
                    "id": 32711,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32710,
                      "name": "BionetTypes.Offer",
                      "nameLocations": [
                        "1877:11:39",
                        "1889:5:39"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32968,
                      "src": "1877:17:39"
                    },
                    "referencedDeclaration": 32968,
                    "src": "1877:17:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Offer_$32968_storage_ptr",
                      "typeString": "struct BionetTypes.Offer"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1876:33:39"
            },
            "returnParameters": {
              "id": 32718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32717,
                  "mutability": "mutable",
                  "name": "offerId",
                  "nameLocation": "1974:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32820,
                  "src": "1966:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1966:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1965:17:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32838,
            "nodeType": "FunctionDefinition",
            "src": "3403:141:39",
            "nodes": [],
            "body": {
              "id": 32837,
              "nodeType": "Block",
              "src": "3463:81:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32832,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3516:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3520:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3516:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32834,
                        "name": "_offerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32823,
                        "src": "3528:8:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32829,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32641,
                            "src": "3489:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32828,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33224,
                          "src": "3473:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3473:32:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3506:9:39",
                      "memberName": "voidOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33159,
                      "src": "3473:42:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:64:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32836,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:64:39"
                }
              ]
            },
            "baseFunctions": [
              33325
            ],
            "documentation": {
              "id": 32821,
              "nodeType": "StructuredDocumentation",
              "src": "3245:153:39",
              "text": " @dev Called by seller to void an offer\n Will not impact existing exchanges against the offer.\n See {BionetExchange}"
            },
            "functionSelector": "4915907b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32826,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32825,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "3449:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "3449:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3449:13:39"
              }
            ],
            "name": "voidOffer",
            "nameLocation": "3412:9:39",
            "parameters": {
              "id": 32824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32823,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3430:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32838,
                  "src": "3422:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3422:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3421:18:39"
            },
            "returnParameters": {
              "id": 32827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3463:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32863,
            "nodeType": "FunctionDefinition",
            "src": "3627:273:39",
            "nodes": [],
            "body": {
              "id": 32862,
              "nodeType": "Block",
              "src": "3757:143:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32848,
                      "name": "exchangeId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32846,
                      "src": "3767:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32856,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3851:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3855:6:39",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3851:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 32858,
                          "name": "_offerId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32841,
                          "src": "3875:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 32850,
                                "name": "exchangeAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32641,
                                "src": "3796:15:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 32849,
                              "name": "IBionetExchange",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33224,
                              "src": "3780:15:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                                "typeString": "type(contract IBionetExchange)"
                              }
                            },
                            "id": 32851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3780:32:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                              "typeString": "contract IBionetExchange"
                            }
                          },
                          "id": 32852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3813:6:39",
                          "memberName": "commit",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33169,
                          "src": "3780:39:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) payable external returns (uint256)"
                          }
                        },
                        "id": 32855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "expression": {
                              "id": 32853,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3827:3:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 32854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3831:5:39",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3827:9:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "src": "3780:57:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                          "typeString": "function (address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 32859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3780:113:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3767:126:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32861,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:126:39"
                }
              ]
            },
            "baseFunctions": [
              33333
            ],
            "documentation": {
              "id": 32839,
              "nodeType": "StructuredDocumentation",
              "src": "3550:72:39",
              "text": " @dev Commit to purchase\n Called by buyer"
            },
            "functionSelector": "f4f98ad5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32844,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32843,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "3702:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "3702:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3702:13:39"
              }
            ],
            "name": "commit",
            "nameLocation": "3636:6:39",
            "parameters": {
              "id": 32842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32841,
                  "mutability": "mutable",
                  "name": "_offerId",
                  "nameLocation": "3651:8:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32863,
                  "src": "3643:16:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3643:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3642:18:39"
            },
            "returnParameters": {
              "id": 32847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32846,
                  "mutability": "mutable",
                  "name": "exchangeId",
                  "nameLocation": "3741:10:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32863,
                  "src": "3733:18:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3733:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3732:20:39"
            },
            "scope": 32939,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32881,
            "nodeType": "FunctionDefinition",
            "src": "3985:141:39",
            "nodes": [],
            "body": {
              "id": 32880,
              "nodeType": "Block",
              "src": "4045:81:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32875,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4095:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4099:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4095:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32877,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32866,
                        "src": "4107:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32872,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32641,
                            "src": "4071:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32871,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33224,
                          "src": "4055:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4055:32:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4088:6:39",
                      "memberName": "cancel",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33177,
                      "src": "4055:39:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4055:64:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32879,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:64:39"
                }
              ]
            },
            "baseFunctions": [
              33339
            ],
            "documentation": {
              "id": 32864,
              "nodeType": "StructuredDocumentation",
              "src": "3906:74:39",
              "text": " @dev Cancel a committment\n Called by Buyer"
            },
            "functionSelector": "40e58ee5",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32869,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32868,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "4031:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "4031:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4031:13:39"
              }
            ],
            "name": "cancel",
            "nameLocation": "3994:6:39",
            "parameters": {
              "id": 32867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32866,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "4009:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32881,
                  "src": "4001:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4001:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:21:39"
            },
            "returnParameters": {
              "id": 32870,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4045:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32902,
            "nodeType": "FunctionDefinition",
            "src": "4212:201:39",
            "nodes": [],
            "body": {
              "id": 32901,
              "nodeType": "Block",
              "src": "4280:133:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4361:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4365:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4361:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32898,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32884,
                        "src": "4385:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 32890,
                              "name": "exchangeAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32641,
                              "src": "4306:15:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 32889,
                            "name": "IBionetExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33224,
                            "src": "4290:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                              "typeString": "type(contract IBionetExchange)"
                            }
                          },
                          "id": 32891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4290:32:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                            "typeString": "contract IBionetExchange"
                          }
                        },
                        "id": 32892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4323:6:39",
                        "memberName": "revoke",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33185,
                        "src": "4290:39:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256) payable external"
                        }
                      },
                      "id": 32895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 32893,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4337:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4341:5:39",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4337:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4290:57:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint256) payable external"
                      }
                    },
                    "id": 32899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4290:116:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32900,
                  "nodeType": "ExpressionStatement",
                  "src": "4290:116:39"
                }
              ]
            },
            "baseFunctions": [
              33345
            ],
            "documentation": {
              "id": 32882,
              "nodeType": "StructuredDocumentation",
              "src": "4132:75:39",
              "text": " @dev Revoke a committment\n Called by Seller"
            },
            "functionSelector": "20c5429b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32886,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "4266:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "4266:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4266:13:39"
              }
            ],
            "name": "revoke",
            "nameLocation": "4221:6:39",
            "parameters": {
              "id": 32885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32884,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "4236:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32902,
                  "src": "4228:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4228:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4227:21:39"
            },
            "returnParameters": {
              "id": 32888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4280:0:39"
            },
            "scope": 32939,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32920,
            "nodeType": "FunctionDefinition",
            "src": "4494:141:39",
            "nodes": [],
            "body": {
              "id": 32919,
              "nodeType": "Block",
              "src": "4554:81:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32914,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4604:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4608:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4604:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32916,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32905,
                        "src": "4616:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32911,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32641,
                            "src": "4580:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32910,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33224,
                          "src": "4564:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4564:32:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4597:6:39",
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33193,
                      "src": "4564:39:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4564:64:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32918,
                  "nodeType": "ExpressionStatement",
                  "src": "4564:64:39"
                }
              ]
            },
            "baseFunctions": [
              33351
            ],
            "documentation": {
              "id": 32903,
              "nodeType": "StructuredDocumentation",
              "src": "4419:70:39",
              "text": " @dev Redeem a Voucher\n Called by Buyer"
            },
            "functionSelector": "db006a75",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32907,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "4540:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "4540:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4540:13:39"
              }
            ],
            "name": "redeem",
            "nameLocation": "4503:6:39",
            "parameters": {
              "id": 32906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32905,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "4518:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32920,
                  "src": "4510:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4510:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4509:21:39"
            },
            "returnParameters": {
              "id": 32909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4554:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32938,
            "nodeType": "FunctionDefinition",
            "src": "4726:145:39",
            "nodes": [],
            "body": {
              "id": 32937,
              "nodeType": "Block",
              "src": "4788:83:39",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32932,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4840:3:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4844:6:39",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4840:10:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32934,
                        "name": "_exchangeId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32923,
                        "src": "4852:11:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 32929,
                            "name": "exchangeAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32641,
                            "src": "4814:15:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 32928,
                          "name": "IBionetExchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33224,
                          "src": "4798:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IBionetExchange_$33224_$",
                            "typeString": "type(contract IBionetExchange)"
                          }
                        },
                        "id": 32930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4798:32:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBionetExchange_$33224",
                          "typeString": "contract IBionetExchange"
                        }
                      },
                      "id": 32931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4831:8:39",
                      "memberName": "finalize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33201,
                      "src": "4798:41:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 32935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4798:66:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32936,
                  "nodeType": "ExpressionStatement",
                  "src": "4798:66:39"
                }
              ]
            },
            "baseFunctions": [
              33357
            ],
            "documentation": {
              "id": 32921,
              "nodeType": "StructuredDocumentation",
              "src": "4641:80:39",
              "text": " @dev Finalize the exchange. Usually means the buyer is happy."
            },
            "functionSelector": "05261aea",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 32926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 32925,
                  "name": "noZeroAddress",
                  "nameLocations": [
                    "4774:13:39"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32656,
                  "src": "4774:13:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4774:13:39"
              }
            ],
            "name": "finalize",
            "nameLocation": "4735:8:39",
            "parameters": {
              "id": 32924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32923,
                  "mutability": "mutable",
                  "name": "_exchangeId",
                  "nameLocation": "4752:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 32938,
                  "src": "4744:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4744:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4743:21:39"
            },
            "returnParameters": {
              "id": 32927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4788:0:39"
            },
            "scope": 32939,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32634,
              "name": "Ownable",
              "nameLocations": [
                "726:7:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26840,
              "src": "726:7:39"
            },
            "id": 32635,
            "nodeType": "InheritanceSpecifier",
            "src": "726:7:39"
          },
          {
            "baseName": {
              "id": 32636,
              "name": "IBionetRouter",
              "nameLocations": [
                "735:13:39"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33370,
              "src": "735:13:39"
            },
            "id": 32637,
            "nodeType": "InheritanceSpecifier",
            "src": "735:13:39"
          }
        ],
        "canonicalName": "BionetRouter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 32633,
          "nodeType": "StructuredDocumentation",
          "src": "446:254:39",
          "text": " @dev Implementation of IBionetRouter.\n Acts as a proxy to the protocol. Primarily doing\n guard checks and forwarding the caller to\n the respective contract. Contracts such as BionetExchange\n will only allow calls from this contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32939,
          33370,
          26840,
          29783
        ],
        "name": "BionetRouter",
        "nameLocation": "710:12:39",
        "scope": 32940,
        "usedErrors": []
      }
    ],
    "license": "Apache-2.0"
  },
  "id": 39
}